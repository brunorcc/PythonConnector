//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Diagnostics.CodeAnalysis;
using System.Net.Http;
using System.Threading.Tasks;
using Primavera.Hydrogen.Rest.Client;
using Primavera.Lithium.PythonConnector.Models.Metadata;

namespace Primavera.Lithium.PythonConnector
{
    #region Code

    #region Public Classes

    /// <summary>
    /// Defines the base class for the service client that allows accessing the Python Connector Service API.
    /// </summary>
    [GeneratedCode("Lithium", "2.0")]
    [SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
    public abstract partial class PythonConnectorClientBase : ServiceClient<PythonConnectorClientBase>, IPythonConnectorClient
    {
        #region Code

        #region Fields

        private bool disposed;

        #endregion

        #region Public Properties

        /// <inheritdoc />
        public virtual IMonitoringOperations Monitoring
        {
            get;
            protected set;
        }

        /// <inheritdoc />
        public virtual IPythonConnectorOperations PythonConnector
        {
            get;
            protected set;
        }

        #endregion

        #region Protected Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClientBase" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="credentials">The credentials that should be used to access the service.</param>
        protected PythonConnectorClientBase(Uri baseUri, ServiceClientCredentials credentials)        
            : base(baseUri, credentials)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClientBase" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="credentials">The credentials that should be used to access the service.</param>
        /// <param name="handler">The root message handler.</param>
        protected PythonConnectorClientBase(Uri baseUri, ServiceClientCredentials credentials, HttpMessageHandler handler)        
            : base(baseUri, credentials, handler)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClientBase" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="credentials">The credentials that should be used to access the service.</param>
        /// <param name="handler">The root message handler.</param>
        /// <param name="disposeHandler">True if the inner handler should be disposed of, false if the inner handler is intended to be reused.</param>
        protected PythonConnectorClientBase(Uri baseUri, ServiceClientCredentials credentials, HttpMessageHandler handler, bool disposeHandler)        
            : base(baseUri, credentials, handler, disposeHandler)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClientBase" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="callback">The callback that will be invoked during authentication to get the access token.</param>
        protected PythonConnectorClientBase(Uri baseUri, Func<AuthenticationCallbackArgs, Task<string>> callback)        
            : base(baseUri, callback)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClientBase" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="callback">The callback that will be invoked during authentication to get the access token.</param>
        /// <param name="handler">The root message handler.</param>
        protected PythonConnectorClientBase(Uri baseUri, Func<AuthenticationCallbackArgs, Task<string>> callback, HttpMessageHandler handler)        
            : base(baseUri, callback, handler)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClientBase" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="callback">The callback that will be invoked during authentication to get the access token.</param>
        /// <param name="handler">The root message handler.</param>
        /// <param name="disposeHandler">True if the inner handler should be disposed of, false if the inner handler is intended to be reused.</param>
        protected PythonConnectorClientBase(Uri baseUri, Func<AuthenticationCallbackArgs, Task<string>> callback, HttpMessageHandler handler, bool disposeHandler)        
            : base(baseUri, callback, handler, disposeHandler)
        {
        }

        #endregion

        #region Protected Methods

        /// <inheritdoc />
        protected override void InitializeApiVersion()
        {
            // Set API version

            this.ApiVersion = ApiVersions.Literals.DefaultVersionLiteral;
        }

        /// <inheritdoc />
        protected override void Dispose(bool disposing)
        {
            if (this.disposed)
            {
                return;
            }

            if (disposing)
            {
                // Dispose operations

                if (this.PythonConnector != null)
                {
                    this.PythonConnector.Dispose();
                    this.PythonConnector = null;
                }
            }

            this.disposed = true;

            base.Dispose(disposing);
        }

        #endregion

        #endregion
    }

    /// <summary>
    /// Defines the service client that allows accessing the Python Connector Service API.
    /// </summary>
    [GeneratedCode("Lithium", "2.0")]
    [SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
    public partial class PythonConnectorClient : PythonConnectorClientBase
    {
        #region Code

        #region Public Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClient" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="credentials">The credentials that should be used to access the service.</param>
        public PythonConnectorClient(Uri baseUri, ServiceClientCredentials credentials)        
            : base(baseUri, credentials)
        {
            // Initialize

            this.InitializeCore();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClient" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="credentials">The credentials that should be used to access the service.</param>
        /// <param name="handler">The root message handler.</param>
        public PythonConnectorClient(Uri baseUri, ServiceClientCredentials credentials, HttpMessageHandler handler)        
            : base(baseUri, credentials, handler)
        {
            // Initialize

            this.InitializeCore();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClient" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="credentials">The credentials that should be used to access the service.</param>
        /// <param name="handler">The root message handler.</param>
        /// <param name="disposeHandler">True if the inner handler should be disposed of, false if the inner handler is intended to be reused.</param>
        public PythonConnectorClient(Uri baseUri, ServiceClientCredentials credentials, HttpMessageHandler handler, bool disposeHandler)        
            : base(baseUri, credentials, handler, disposeHandler)
        {
            // Initialize

            this.InitializeCore();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClient" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="callback">The callback that will be invoked during authentication to get the access token.</param>
        public PythonConnectorClient(Uri baseUri, Func<AuthenticationCallbackArgs, Task<string>> callback)        
            : base(baseUri, callback)
        {
            // Initialize

            this.InitializeCore();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClient" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="callback">The callback that will be invoked during authentication to get the access token.</param>
        /// <param name="handler">The root message handler.</param>
        public PythonConnectorClient(Uri baseUri, Func<AuthenticationCallbackArgs, Task<string>> callback, HttpMessageHandler handler)        
            : base(baseUri, callback, handler)
        {
            // Initialize

            this.InitializeCore();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PythonConnectorClient" /> class.
        /// </summary>
        /// <param name="baseUri">The base URI of the service.</param>
        /// <param name="callback">The callback that will be invoked during authentication to get the access token.</param>
        /// <param name="handler">The root message handler.</param>
        /// <param name="disposeHandler">True if the inner handler should be disposed of, false if the inner handler is intended to be reused.</param>
        public PythonConnectorClient(Uri baseUri, Func<AuthenticationCallbackArgs, Task<string>> callback, HttpMessageHandler handler, bool disposeHandler)        
            : base(baseUri, callback, handler, disposeHandler)
        {
            // Initialize

            this.InitializeCore();
        }

        #endregion

        #region Private Methods

        private void InitializeCore()
        {
            // Initialize members

            this.PythonConnector = new PythonConnectorOperations(this, this.Actions);
            this.Monitoring = new MonitoringOperations(this, this.Actions);
        }

        #endregion

        #endregion
    }

    #endregion

    #endregion
}
