//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Security.Claims;
using Microsoft.AspNetCore.Http;
using Primavera.Hydrogen;
using Primavera.Hydrogen.IdentityModel;
using Primavera.Lithium.PythonConnector.Models.Metadata;

namespace Primavera.Lithium.PythonConnector.WebApi
{
    /// <summary>
    /// Provides extension methods for various types.
    /// </summary>
    [GeneratedCode("Lithium", "2.0")]
    internal static partial class ExtensionMethods
    {
        // Ignore Spelling: api
        // Ignore Spelling: css
        // Ignore Spelling: img

        #region Internal Methods

        /// <summary>
        /// Gets the email associated with the principal.
        /// </summary>
        /// <param name="principal">The claims principal.</param>
        /// <returns>The email associated with the principal.</returns>
        internal static string GetEmail(this ClaimsPrincipal principal)
        {
            if (principal == null)
            {
                return null;
            }

            if (principal.Claims == null)
            {
                return null;
            }

            Claim claim = principal.Claims.FirstOrDefault(c => c.Type.EqualsNoCase(JwtClaimTypes.Email));
            if (claim != null)
            {
                return claim.Value;
            }

            claim = principal.Claims.FirstOrDefault(c => c.Type.EqualsNoCase(ClaimTypes.Email));
            return claim?.Value;
        }

        /// <summary>
        /// Determines whether the request path maps to a route that is not part of the Web API.
        /// </summary>
        /// <param name="request">The request.</param>
        /// <returns>
        /// A value indicating whether the request path maps to route that is not part of the Web API.
        /// </returns>
        internal static bool PathIsNotApi(this HttpRequest request)
        {
            if (request == null)
            {
                return false;
            }

            if (request.Path == null)
            {
                return false;
            }

            return !request.Path.StartsWithSegments("/api", StringComparison.OrdinalIgnoreCase);
        }

        /// <summary>
        /// Determines whether the request path maps to a route that is not a content file.
        /// </summary>
        /// <param name="request">The request.</param>
        /// <returns>
        /// A value indicating whether the request path maps to route that is not a content file.
        /// </returns>
        internal static bool PathIsNotContent(this HttpRequest request)
        {
            if (request == null)
            {
                return false;
            }

            if (request.Path == null)
            {
                return false;
            }

            return !request.Path.StartsWithSegments("/css", StringComparison.OrdinalIgnoreCase) &&
                !request.Path.StartsWithSegments("/fonts", StringComparison.OrdinalIgnoreCase) &&
                !request.Path.StartsWithSegments("/img", StringComparison.OrdinalIgnoreCase) &&
                !request.Path.StartsWithSegments("/lib", StringComparison.OrdinalIgnoreCase);
        }

        /// <summary>
        /// Determines whether the request path maps to a route that is part of the Web API documentation.
        /// </summary>
        /// <param name="request">The request.</param>
        /// <returns>
        /// A value indicating whether the request path maps to a route that is part of the Web API documentation.
        /// </returns>
        internal static bool PathIsWebApiDocumentation(this HttpRequest request)
        {
            if (request == null)
            {
                return false;
            }

            if (request.Path == null)
            {
                return false;
            }

            return request.Path.StartsWithSegments(Constants.Documentation.WebApiBaseRoute, StringComparison.OrdinalIgnoreCase);
        }

        /// <summary>
        /// Determines whether the request path maps to a route that is part of the Web API documentation.
        /// </summary>
        /// <param name="request">The request.</param>
        /// <returns>
        /// A value indicating whether the request path maps to a route that is part of the Web API documentation.
        /// </returns>
        internal static bool PathIsWebApiDocumentationCustomization(this HttpRequest request)
        {
            if (request == null)
            {
                return false;
            }

            if (request.Path == null)
            {
                return false;
            }

            return request.Path.StartsWithSegments("/" + Constants.Documentation.WebApiJavaScriptPath, StringComparison.OrdinalIgnoreCase) || request.Path.StartsWithSegments("/" + Constants.Documentation.WebApiStyleSheetPath, StringComparison.OrdinalIgnoreCase);
        }

        #endregion
    }
}

