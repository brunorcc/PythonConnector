//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Reflection;
using Primavera.Hydrogen;
using Primavera.Hydrogen.Reflection;

namespace Primavera.Lithium.PythonConnector.WebApi.Configuration
{
    #region Code

    #region Public Classes

    /// <summary>
    /// Defines the base class for the configuration settings used by the service host.
    /// </summary>
    [GeneratedCode("Lithium", "2.0")]
    [SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
    public abstract partial class HostConfigurationBase
    {
        #region Code

        #region Public Properties

        /// <summary>
        /// Gets or sets information about the host.
        /// </summary>
        public virtual InformationConfiguration Information
        {
            get;
            set;
        }

        /// <summary>
        /// Gets or sets the Identity Server base URI.
        /// </summary>
        [SuppressMessage("Microsoft.Design", "CA1056:UriPropertiesShouldNotBeStrings")]
        public virtual string IdentityServerBaseUri
        {
            get;
            set;
        }

        #endregion

        #region Protected Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="HostConfigurationBase"/> class.
        /// </summary>
        protected HostConfigurationBase()        
        {
            // Initialize

            this.Initialize();
        }

        #endregion

        #region Protected Methods

        /// <summary>
        /// Initializes the configuration.
        /// </summary>
        protected virtual void Initialize()
        {
            // Initialization

            this.Information = new InformationConfiguration();
        }

        #endregion

        #endregion
    }

    /// <summary>
    /// Defines the base class for the type that provides information about the host.
    /// </summary>
    [GeneratedCode("Lithium", "2.0")]
    [SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
    public abstract partial class InformationConfigurationBase
    {
        #region Code

        #region Fields

        private string fieldProductName;
        private string fieldHostTitle;
        private string fieldCompany;
        private string fieldCopyright;
        private string fieldVersion;
        private string fieldInformationalVersion;

        #endregion

        #region Public Properties

        /// <summary>
        /// Gets the product name.
        /// </summary>
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public string ProductName
        {
            get
            {
                if (this.fieldProductName == null)
                {
                    Assembly assembly = this.GetType().Assembly;
                    this.fieldProductName = assembly.Reflector().AssemblyProduct;
                }

                return this.fieldProductName;
            }
        }

        /// <summary>
        /// Gets the host title.
        /// </summary>
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public string HostTitle
        {
            get
            {
                if (this.fieldHostTitle == null)
                {
                    Assembly assembly = this.GetType().Assembly;
                    this.fieldHostTitle = assembly.Reflector().AssemblyTitle;
                }

                return this.fieldHostTitle;
            }
        }

        /// <summary>
        /// Gets the company.
        /// </summary>
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public string Company
        {
            get
            {
                if (this.fieldCompany == null)
                {
                    Assembly assembly = this.GetType().Assembly;
                    this.fieldCompany = assembly.Reflector().AssemblyCompany;
                }

                return this.fieldCompany;
            }
        }

        /// <summary>
        /// Gets the copyright.
        /// </summary>
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public string Copyright
        {
            get
            {
                if (this.fieldCopyright == null)
                {
                    Assembly assembly = this.GetType().Assembly;
                    string copyright = assembly.Reflector().AssemblyCopyright.Replace("©", "&#169;", StringComparison.InvariantCulture);
                    this.fieldCopyright = "{0}. All rights reserved.".Format(copyright);
                }

                return this.fieldCopyright;
            }
        }

        /// <summary>
        /// Gets the version.
        /// </summary>
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public string Version
        {
            get
            {
                if (this.fieldVersion == null)
                {
                    Assembly assembly = this.GetType().Assembly;
                    string version = assembly.Reflector().AssemblyFileVersion.ToString();
                    this.fieldVersion = "Version: {0}.".Format(version);
                }

                return this.fieldVersion;
            }
        }

        /// <summary>
        /// Gets the informational version.
        /// </summary>
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public string InformationalVersion
        {
            get
            {
                if (this.fieldInformationalVersion == null)
                {
                    Assembly assembly = this.GetType().Assembly;
                    string version = assembly.Reflector().AssemblyInformationalVersion;
                    this.fieldInformationalVersion = "Build info: {0}.".Format(version);
                }

                return this.fieldInformationalVersion;
            }
        }

        #endregion

        #region Protected Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="InformationConfigurationBase"/> class.
        /// </summary>
        protected InformationConfigurationBase()        
        {
        }

        #endregion

        #region Protected Methods

        /// <summary>
        /// Initializes the configuration.
        /// </summary>
        protected virtual void Initialize()
        {
        }

        #endregion

        #endregion
    }

    /// <summary>
    /// Defines the configuration settings used by the service host.
    /// </summary>
    [GeneratedCode("Lithium", "2.0")]
    [SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
    public partial class HostConfiguration : HostConfigurationBase
    {
        #region Code

        #region Public Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="HostConfiguration"/> class.
        /// </summary>
        public HostConfiguration()        
            : base()
        {
        }

        #endregion

        #endregion
    }

    /// <summary>
    /// Provides information about the host.
    /// </summary>
    [GeneratedCode("Lithium", "2.0")]
    [SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
    public partial class InformationConfiguration : InformationConfigurationBase
    {
        #region Code

        #region Public Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="InformationConfiguration"/> class.
        /// </summary>
        public InformationConfiguration()        
            : base()
        {
        }

        #endregion

        #endregion
    }

    #endregion

    #endregion
}
