<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Primavera.Hydrogen.Core</name>
    </assembly>
    <members>
        <member name="T:Primavera.Hydrogen.Base64">
            <summary>
            Provides methods to convert values to/from Base64.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Base64.IsValid(System.String)">
            <summary>
            Determines whether the specified <paramref name="text"/> is a Base64 string.
            </summary>
            <param name="text">The text.</param>
            <returns>
            A value indicating whether the specified <paramref name="text"/> is a Base64 string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Base64.EncodeString(System.String)">
            <summary>
            Encodes the specified text to base64.
            </summary>
            <param name="text">The text that should be encoded.</param>
            <returns>
            A string containing the base-64 representation of the specified text.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Base64.EncodeBytes(System.Byte[])">
            <summary>
            Encodes the specified bytes to base64.
            </summary>
            <param name="bytes">The bytes that should be encoded.</param>
            <returns>
            A string containing the base-64 representation of the specified bytes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Base64.DecodeString(System.String)">
            <summary>
            Decodes the specified base64 string and returns the corresponding string.
            </summary>
            <param name="encoded">The base64 string that should be decoded.</param>
            <returns>
            A string that corresponds to the specified base64 string decoded.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Base64.DecodeBytes(System.String)">
            <summary>
            Decodes the specified base64 string and returns the corresponding bytes.
            </summary>
            <param name="encoded">The base64 string that should be decoded.</param>
            <returns>
            An array of bytes that corresponds to the specified base64 string decoded.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.BitPosition">
            <summary>
            Defines the position of a bit in a byte, from right to left.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.First">
            <summary>
            The 1st right most bit.
            Binary: ‭0001‬.
            Decimal: 1.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Second">
            <summary>
            The 2nd right most bit.
            Binary: ‭0010‬.
            Decimal: 2.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Third">
            <summary>
            The 3rd right most bit.
            Binary: ‭0100‬.
            Decimal: 4.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Fourth">
            <summary>
            The 4th right most bit.
            Binary: ‭1000‬.
            Decimal: 8.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Fifth">
            <summary>
            The 5th right most bit.
            Binary: ‭0001 0000‬.
            Decimal: 16.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Sixth">
            <summary>
            The 6th right most bit.
            Binary: ‭0010 0000‬.
            Decimal: 32.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Seventh">
            <summary>
            The 7th right most bit.
            Binary: ‭0100 0000‬.
            Decimal: 64.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Eighth">
            <summary>
            The 8th right most bit.
            Binary: ‭1000 0000‬.
            Decimal: 128.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Nineth">
            <summary>
            The 9th right most bit.
            Binary: ‭0001 0000 0000‬.
            Decimal: 256.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Tenth">
            <summary>
            The 10th right most bit.
            Binary: ‭‭0010 0000 0000‬‬.
            Decimal: 512.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Eleventh">
            <summary>
            The 11th right most bit.
            Binary: ‭‭‭0100 0000 0000‬‬‬.
            Decimal: 1024.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Twelveth">
            <summary>
            The 12th right most bit.
            Binary: ‭‭‭‭1000 0000 0000‬.
            Decimal: 2048.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Thirdteenth">
            <summary>
            The 13th right most bit.
            Binary: ‭0001 0000 0000 0000‬‬‬‬.
            Decimal: 4096.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Fourteenth">
            <summary>
            The 14th right most bit.
            Binary: ‭0010 0000 0000 0000‬.
            Decimal: 8192.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Fifteenth">
            <summary>
            The 15th right most bit.
            Binary: ‭‭‭‭0100 0000 0000 0000‬.
            Decimal: 16384.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.BitPosition.Sixteenth">
            <summary>
            The 16th right most bit.
            Binary: ‭1000 0000 0000 0000‬‬‬‬.
            Decimal: 32768.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.ByteExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Byte"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ByteExtensions.GetString(System.Byte[])">
            <summary>
            Decodes all the characters in the specified byte array into a string
            with the <see cref="P:System.Text.Encoding.UTF8"/> encoding.
            </summary>
            <param name="bytes">The array containing the bytes to decode.</param>
            <returns>
            A string containing the results of decoding the specified set of bytes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteExtensions.GetString(System.Byte[],System.Text.Encoding)">
            <summary>
            Decodes all the characters in the specified byte array into a string
            with the specified encoding.
            </summary>
            <param name="bytes">The array containing the bytes to decode.</param>
            <param name="encoding">The encoding that should be used.</param>
            <returns>
            A string containing the results of decoding the specified set of bytes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteExtensions.GetHexString(System.Byte[])">
            <summary>
            Decodes all the bytes in the specified byte array into an HEX string.
            </summary>
            <param name="bytes">The array containing the bytes to decode.</param>
            <returns>
            A string containing the results of decoding the specified set of bytes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteExtensions.Left(System.Byte[],System.Int32)">
            <summary>
            Returns a new byte array containing the left most <paramref name="length"/> bytes.
            </summary>
            <param name="bytes">The array containing the bytes to return.</param>
            <param name="length">The number of bytes to return.</param>
            <returns>
            A new byte array containing the left most <paramref name="length"/> bytes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteExtensions.Right(System.Byte[],System.Int32)">
            <summary>
            Returns a new byte array containing the right most <paramref name="length"/> bytes.
            </summary>
            <param name="bytes">The array containing the bytes to return.</param>
            <param name="length">The number of bytes to return.</param>
            <returns>
            A new byte array containing the right most <paramref name="length"/> bytes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteExtensions.PadRight(System.Byte[],System.Int32,System.Byte)">
            <summary>
            Returns a new byte array containing the current array and adding the specified
            <paramref name="padding"/> to fill up to <paramref name="length"/> bytes, on the right.
            </summary>
            <param name="bytes">The array containing the bytes to return.</param>
            <param name="length">The length of the resulting array.</param>
            <param name="padding">The byte that should be used for padding.</param>
            <returns>
            A new byte array containing the current array and adding the specified
            <paramref name="padding"/> to fill up to <paramref name="length"/> bytes, on the right.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.ByteSize">
            <summary>
            Represents a byte size value.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.BitsInByte">
            <summary>
            Number of bits in a byte.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.BytesInKiloByte">
            <summary>
            Number of bytes in a kilo byte.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.BytesInMegaByte">
            <summary>
            Number of bytes in a mega byte.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.BytesInGigaByte">
            <summary>
            Number of bytes in a gigabyte.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.BytesInTeraByte">
            <summary>
            Number of bytes in a terabyte.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.BytesInPetaByte">
            <summary>
            Number of bytes in a petabyte.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.BitSymbol">
            <summary>
            The bit symbol.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.ByteSymbol">
            <summary>
            The bytes symbol.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.KiloByteSymbol">
            <summary>
            The kilo byte symbol.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.MegaByteSymbol">
            <summary>
            The mega byte symbol.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.GigaByteSymbol">
            <summary>
            The gigabyte symbol.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.TeraByteSymbol">
            <summary>
            The terabyte symbol.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.PetaByteSymbol">
            <summary>
            The petabyte symbol.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.MinValue">
            <summary>
            Represents the largest possible value of an <see cref="T:Primavera.Hydrogen.ByteSize"/>.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.ByteSize.MaxValue">
            <summary>
            Represents the smallest possible value of an <see cref="T:Primavera.Hydrogen.ByteSize"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.Bits">
            <summary>
            Gets the bits in the size.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.Bytes">
            <summary>
            Gets the bytes in the size.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.KiloBytes">
            <summary>
            Gets the kilo bytes in the size.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.MegaBytes">
            <summary>
            Gets the mega bytes in the size.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.GigaBytes">
            <summary>
            Gets the gigabytes in the size.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.TeraBytes">
            <summary>
            Gets the terabytes in the size.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.PetaBytes">
            <summary>
            Gets the petabytes in the size.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.LargestWholeNumberSymbol">
            <summary>
            Gets the largest whole number symbol for the size.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ByteSize.LargestWholeNumberValue">
            <summary>
            Gets the largest whole number value for the size.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ByteSize"/> structure.
            </summary>
            <param name="byteSize">The size in bytes.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.FromBits(System.Int64)">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.ByteSize"/> from the specified number of bits.
            </summary>
            <param name="value">The bits.</param>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.FromBytes(System.Double)">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.ByteSize"/> from the specified number of bytes.
            </summary>
            <param name="value">The bytes.</param>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.FromKiloBytes(System.Double)">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.ByteSize"/> from the specified number of kilo bytes.
            </summary>
            <param name="value">The kilo bytes.</param>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.FromMegaBytes(System.Double)">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.ByteSize"/> from the specified number of mega bytes.
            </summary>
            <param name="value">The mega bytes.</param>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.FromGigaBytes(System.Double)">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.ByteSize"/> from the specified number of gigabytes.
            </summary>
            <param name="value">The gigabytes.</param>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.FromTeraBytes(System.Double)">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.ByteSize"/> from the specified number of terabytes.
            </summary>
            <param name="value">The terabytes.</param>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.FromPetaBytes(System.Double)">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.ByteSize"/> from the specified number of petabytes.
            </summary>
            <param name="value">The petabytes.</param>
            <returns>The new instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.ToString(System.String)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="provider">The provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>True</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Equals(Primavera.Hydrogen.ByteSize)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            True if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.CompareTo(Primavera.Hydrogen.ByteSize)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Add(Primavera.Hydrogen.ByteSize)">
            <summary>
            Adds the specified bite size.
            </summary>
            <param name="bs">The byte size that should be added.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.AddBits(System.Int64)">
            <summary>
            Adds the specified bits.
            </summary>
            <param name="value">The bits that should be added.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.AddBytes(System.Double)">
            <summary>
            Adds the specified bytes.
            </summary>
            <param name="value">The bytes that should be added.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.AddKiloBytes(System.Double)">
            <summary>
            Adds the specified kilo bytes.
            </summary>
            <param name="value">The kilo bytes that should be added.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.AddMegaBytes(System.Double)">
            <summary>
            Adds the specified mega bytes.
            </summary>
            <param name="value">The mega bytes that should be added.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.AddGigaBytes(System.Double)">
            <summary>
            Adds the specified kilo bytes.
            </summary>
            <param name="value">The kilo bytes that should be added.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.AddTeraBytes(System.Double)">
            <summary>
            Adds the specified terabytes.
            </summary>
            <param name="value">The terabytes that should be added.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.AddPetaBytes(System.Double)">
            <summary>
            Adds the specified petabytes.
            </summary>
            <param name="value">The petabytes that should be added.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Subtract(Primavera.Hydrogen.ByteSize)">
            <summary>
            Subtracts the specified byte size.
            </summary>
            <param name="bs">The bite size that should be subtracted.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_Addition(Primavera.Hydrogen.ByteSize,Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="b1">The first value.</param>
            <param name="b2">The second value.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Add(Primavera.Hydrogen.ByteSize,Primavera.Hydrogen.ByteSize)">
            <summary>
            Adds the specified two byte sizes.
            </summary>
            <param name="b1">The first value.</param>
            <param name="b2">The second value.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_Increment(Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator ++.
            </summary>
            <param name="b">The bite size that should be incremented.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Increment(Primavera.Hydrogen.ByteSize)">
            <summary>
            Increments one byte to the specified byte size.
            </summary>
            <param name="b">The byte size.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_UnaryNegation(Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="b">The byte size that should be negated.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Negate(Primavera.Hydrogen.ByteSize)">
            <summary>
            Negates the specified bite size.
            </summary>
            <param name="b">The bite size that should be negated.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_Decrement(Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator --.
            </summary>
            <param name="b">The byte size that should be decremented.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Decrement(Primavera.Hydrogen.ByteSize)">
            <summary>
            Decrements one byte to the specified byte size.
            </summary>
            <param name="b">The byte size.</param>
            <returns>The new byte size.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_Equality(Primavera.Hydrogen.ByteSize,Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="b1">The first value.</param>
            <param name="b2">The second value.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_Inequality(Primavera.Hydrogen.ByteSize,Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="b1">The first value.</param>
            <param name="b2">The second value.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_LessThan(Primavera.Hydrogen.ByteSize,Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="b1">The first value.</param>
            <param name="b2">The second value.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_LessThanOrEqual(Primavera.Hydrogen.ByteSize,Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator &lt;=.
            </summary>
            <param name="b1">The first value.</param>
            <param name="b2">The second value.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_GreaterThan(Primavera.Hydrogen.ByteSize,Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="b1">The first value.</param>
            <param name="b2">The second value.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.op_GreaterThanOrEqual(Primavera.Hydrogen.ByteSize,Primavera.Hydrogen.ByteSize)">
            <summary>
            Implements the operator &gt;=.
            </summary>
            <param name="b1">The first value.</param>
            <param name="b2">The second value.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.TryParse(System.String,Primavera.Hydrogen.ByteSize@)">
            <summary>
            Converts the string representation of a <see cref="T:Primavera.Hydrogen.ByteSize"/> to its equivalent.
            </summary>
            <param name="s">The string containing the value to convert.</param>
            <param name="result">The result.</param>
            <returns>True if <paramref name="s"/> was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.ByteSize.Parse(System.String)">
            <summary>
            Converts the string representation of a <see cref="T:Primavera.Hydrogen.ByteSize"/> to its equivalent.
            </summary>
            <param name="s">The s.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Caching.Memory.Memoizer`2">
            <summary>
            Allows caching the result of evaluating an expensive function so that
            subsequent evaluations are faster.
            Any number of calls to the function passing the same argument value
            will only be evaluated once.
            This class is thread-safe.
            </summary>
            <typeparam name="TArg">The type of the argument of the function.</typeparam>
            <typeparam name="TResult">The type of the result of the function.</typeparam>
            <example>
            <code>
            <![CDATA[
            Memoizer{int, bool} memoizer = new Memoizer{int, bool}(this.function);
            bool result1 = memoizer.Evaluate(10); // Evaluated
            bool result2 = memoizer.Evaluate(20); // Evaluated
            bool result3 = memoizer.Evaluate(10); // Cached
            ]]>
            </code>
            </example>
            <remarks>
            For more information on memoization:
            http://en.wikipedia.org/wiki/Memoization.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.Caching.Memory.Memoizer`2.Count">
            <summary>
            Gets the number of items in the results cache.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Caching.Memory.Memoizer`2.#ctor(System.Func{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Caching.Memory.Memoizer`2"/> class.
            </summary>
            <param name="function">The function that should be cached.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Caching.Memory.Memoizer`2.#ctor(System.Func{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Caching.Memory.Memoizer`2"/> class.
            </summary>
            <param name="function">The function that should be cached.</param>
            <param name="comparer">An equality comparer for the function arguments.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Caching.Memory.Memoizer`2.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Primavera.Hydrogen.Caching.Memory.Memoizer`2"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Caching.Memory.Memoizer`2.Evaluate(`0)">
            <summary>
            Evaluates the wrapped function for the specified argument.
            If the function has already been evaluated for the given argument,
            the cached result will be returned. Otherwise, the value will be
            computed, cached, and returned.
            </summary>
            <param name="arg">The function argument.</param>
            <returns>The function result.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Caching.Memory.Memoizer`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Caching.Memory.Memoizer`2.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>True</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute">
            <summary>
            Specifies that a string data field value must be a valid email address.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are strings)
            or in dictionaries (whose keys and values are strings).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute">
            <summary>
            Specifies that a numeric data field value must be greater than a specified value.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are numeric)
            or in dictionaries (whose keys are strings and values are numeric).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.Minimum">
            <summary>
            Gets the minimum value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.OperandType">
            <summary>
            Gets the type of the <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.Minimum"/> value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute"/> class.
            </summary>
            <param name="minimum">The minimum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute"/> class.
            </summary>
            <param name="minimum">The minimum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute"/> class.
            </summary>
            <param name="minimum">The minimum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute"/> class.
            </summary>
            <param name="minimum">The minimum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute">
            <summary>
            Specifies that a numeric data field value must be greater than or equal to a specified value.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are numeric)
            or in dictionaries (whose keys are strings and values are numeric).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.Minimum">
            <summary>
            Gets the minimum value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.OperandType">
            <summary>
            Gets the type of the <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.Minimum"/> value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute"/> class.
            </summary>
            <param name="minimum">The minimum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute"/> class.
            </summary>
            <param name="minimum">The minimum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute"/> class.
            </summary>
            <param name="minimum">The minimum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute"/> class.
            </summary>
            <param name="minimum">The minimum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute">
            <summary>
            Specifies that a numeric data field value must be less than a specified value.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are numeric)
            or in dictionaries (whose keys are strings and values are numeric).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.Maximum">
            <summary>
            Gets the maximum value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.OperandType">
            <summary>
            Gets the type of the <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.Maximum"/> value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute"/> class.
            </summary>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute"/> class.
            </summary>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute"/> class.
            </summary>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute"/> class.
            </summary>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute">
            <summary>
            Specifies that a numeric data field value must be less than or equal to a specified value.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are numeric)
            or in dictionaries (whose keys are strings and values are numeric).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.Maximum">
            <summary>
            Gets the maximum value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.OperandType">
            <summary>
            Gets the type of the <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.Maximum"/> value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute"/> class.
            </summary>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute"/> class.
            </summary>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute"/> class.
            </summary>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute"/> class.
            </summary>
            <param name="maximum">The maximum value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.NotEmptyAttribute">
            <summary>
            Specifies that a <see cref="T:System.Collections.IEnumerable"/> value cannot be empty.
            </summary>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.NotEmptyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.NotEmptyAttribute"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.NotEmptyAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.NotEmptyAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.ObjectExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Object"/> type using by the validation
            attributes.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.ObjectExtensions.IsKeyValuePair(System.Object,System.Object@,System.Object@)">
            <summary>
            Determines whether is a key value pair (an item in a dictionary).
            </summary>
            <param name="obj">The object.</param>
            <param name="key">The key value pair key. Null if <paramref name="obj"/> is not a key value pair.</param>
            <param name="value">The key value pair value. Null if <paramref name="obj"/> is not a key value pair.</param>
            <returns>
            A value indicating whether is a key value pair (an item in a dictionary).
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute">
            <summary>
            Specifies that a string data field value must be a valid phone number.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are strings)
            or in dictionaries (whose keys and values are strings).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute">
            <summary>
            Specifies that a string data field value must match the specified regular expression.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are strings)
            or in dictionaries (whose keys and values are strings).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
            <summary>
            Gets the regular expression pattern that should be used.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
            <summary>
            Gets or sets the timeout to use when matching the regular expression pattern (in milliseconds).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.
            </summary>
            <param name="pattern">The that should be used pattern.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute">
            <summary>
            Specifies that a data field value is required.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are objects or strings)
            or in dictionaries (whose keys and values are strings).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
            <summary>
            Gets or sets a value indicating whether the data field should allow empty strings.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute">
            <summary>
            Specifies the maximum allowed length of a string data field value.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are strings)
            or in dictionaries (whose keys and values are strings).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute.Length">
            <summary>
            Gets the maximum allowed length.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute"/> class.
            </summary>
            <param name="length">The maximum allowed length.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute">
            <summary>
            Specifies the minimum allowed length of a string data field value.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are strings)
            or in dictionaries (whose keys and values are strings).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute.Length">
            <summary>
            Gets the minimum allowed length.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute"/> class.
            </summary>
            <param name="length">The minimum allowed length.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute">
            <summary>
            Specifies that a data field value must be a valid URI.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are strings or <see cref="T:System.Uri"/> instances)
            or in dictionaries (whose keys are strings and values are strings or <see cref="T:System.Uri"/> instances).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute.Absolute">
            <summary>
            Gets a value indicating whether the URI should be absolute.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute" /> class.
            </summary>
            <param name="absolute">A value indicating whether the URI should be absolute.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute">
            <summary>
            Specifies that a string data field value contains only a specified set of characters.
            </summary>
            <remarks>
            This attribute is also capable of validating items in enumerables (whose items are strings)
            or in dictionaries (whose keys and values are strings).
            The number of items validated, in that case, are limited to <see cref="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute.MaxItemsValidated"/>.
            </remarks>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute.ValidCharacters">
            <summary>
            Gets a <see cref="T:System.String"/> containing all the valid characters.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute.MaxItemsValidated">
            <summary>
            Gets or sets the maximum number of items that will be validated when the field value is an enumerable or a dictionary.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute" /> class.
            </summary>
            <param name="validCharacters">A <see cref="T:System.String"/> containing all the valid characters.</param>
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Configuration.ConfigString">
            <summary>
            Provides a configuration string parser.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Configuration.ConfigString.Pattern">
            <summary>
            The pattern to parse a configuration string.
            </summary>
            <remarks>
            This regular expression matches multiple balanced constructs to retrieve properly-nested configuration strings
            within curly braces delimiters. For more information check the references below:
            https://weblogs.asp.net/whaggard/377025
            https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Configuration.ConfigString"/> class.
            </summary>
            <param name="value">The configuration string.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.#ctor(System.String,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Configuration.ConfigString" /> class
            with the specified equality key comparer.
            </summary>
            <param name="value">The configuration string.</param>
            <param name="comparer">The equality key comparer.</param>
        </member>
        <member name="P:Primavera.Hydrogen.Configuration.ConfigString.ConfigStr">
            <summary>
            Gets the string value that represents this configuration string.
            </summary>
            <value>The configuration string.</value>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this object.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this object.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.ToParsedString">
            <summary>
            Returns the parsed string that represents this object.
            </summary>
            <returns>
            The parsed string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.GetValue``1(System.String)">
            <summary>
            Gets the value of specified key; or throws when key is missing.
            </summary>
            <typeparam name="T">The type of expected value.</typeparam>
            <param name="key">The key.</param>
            <returns>
            The value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.GetValueOrNull``1(System.String)">
            <summary>
            Gets the value of specified key; or null when key is missing.
            </summary>
            <typeparam name="T">The type of expected value.</typeparam>
            <param name="key">The key.</param>
            <returns>
            The value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.GetValueOrDefault``1(System.String)">
            <summary>
            Gets the value of specified key; or gets default value of T when key is missing.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.GetValueOrDefault``1(System.String,``0)">
            <summary>
            Gets the value of specified key; or gets specified default value when key is missing.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.Parse(System.String)">
            <summary>
            Parses the specified value into a <see cref="T:Primavera.Hydrogen.Configuration.ConfigString"/>.
            </summary>
            <param name="value">The value that is a representation of a configuration string.</param>
            <returns>The configuration string object.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.TryParse(System.String,Primavera.Hydrogen.Configuration.ConfigString@)">
            <summary>
            Tries to parse the specified value into a <see cref="T:Primavera.Hydrogen.Configuration.ConfigString" />.
            </summary>
            <param name="value">The value that is a representation of a configuration string.</param>
            <param name="config">The configuration string object.</param>
            <returns>
              Returns <c>true</c> if the value is a valid configuration string; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ConfigString.ParseValue(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Parses the specified string value, which is a representation of a configuration string,
            into the specified dictionary of keys and values.
            </summary>
            <param name="value">The string value.</param>
            <param name="values">The dictionary of keys and values.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Configuration.ServiceCollectionOptionsExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            that configure <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ServiceCollectionOptionsExtensions.AddOptionsSnapshot``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a service to the service collection that allows resolving instances
            of <typeparamref name="TOptions"/> from instances of <see cref="T:Microsoft.Extensions.Options.IOptionsSnapshot`1"/>.
            </summary>
            <typeparam name="TOptions">The type of the options.</typeparam>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service is registered as transient.
            </remarks>
            <example>
            This allows resolving an instance of <typeparamref name="TOptions"/> like this:
            <code>
            <![CDATA[
            MyOptions options = services.GetRequiredService<MyOptions>();
            ]]>
            </code>
            instead of having to resolve it with <see cref="T:Microsoft.Extensions.Options.IOptionsSnapshot`1"/> like this:
            <code>
            <![CDATA[
            IOptionsSnapshot<MyOptions> snapshot = services.GetRequiredService<IOptionsSnapshot<MyOptions>>();
            MyOptions options = snapshot.Value;
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ServiceCollectionOptionsExtensions.TryAddOptionsSnapshot``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Tries to add a service to the service collection that allows resolving instances
            of <typeparamref name="TOptions"/> from instances of <see cref="T:Microsoft.Extensions.Options.IOptionsSnapshot`1"/>.
            </summary>
            <typeparam name="TOptions">The type of the options.</typeparam>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service is registered as transient if there is no previous registration for this same type.
            </remarks>
            <example>
            This allows resolving an instance of <typeparamref name="TOptions"/> like this:
            <code>
            <![CDATA[
            MyOptions options = services.GetRequiredService<MyOptions>();
            ]]>
            </code>
            instead of having to resolve it with <see cref="T:Microsoft.Extensions.Options.IOptionsSnapshot`1"/> like this:
            <code>
            <![CDATA[
            IOptionsSnapshot<MyOptions> snapshot = services.GetRequiredService<IOptionsSnapshot<MyOptions>>();
            MyOptions options = snapshot.Value;
            ]]>
            </code>
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.Configuration.ServiceProviderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.IServiceProvider"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ServiceProviderExtensions.GetServiceByName(System.IServiceProvider,System.String)">
            <summary>
            Gets the service object of the specified type name by performing a case-sensitive search with <see cref="M:System.Type.GetType(System.String)"/>
            in order to get the <see cref="T:System.Type"/> before calling the <see cref="M:System.IServiceProvider.GetService(System.Type)"/>.
            </summary>
            <param name="provider">The service provider.</param>
            <param name="serviceName">The service name.</param>
            <returns>The service object; or null if not found.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Configuration.ServiceProviderExtensions.GetRequiredServiceByName(System.IServiceProvider,System.String)">
            <summary>
            Gets the service object of the specified type name by performing a case-sensitive search with <see cref="M:System.Type.GetType(System.String)"/>
            in order to get the <see cref="T:System.Type"/> before calling the <see cref="M:System.IServiceProvider.GetService(System.Type)"/>.
            </summary>
            <param name="provider">The service provider.</param>
            <param name="serviceName">The service name.</param>
            <returns>The service object; or an <see cref="T:System.InvalidOperationException"/> if not found.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Conversion.ConversionExtensions">
            <summary>
            Provides extensions methods to perform conversion.
            </summary>
            <example>
            Usage:
            <code>
            <![CDATA[
            target.Converter().Method(...);
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Conversion.ConversionExtensions.Converter(System.Object)">
            <summary>
            Returns a converter capable of performing conversion on the target <see cref="T:System.Object"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>An instance of the reflector.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Conversion.ObjectConverter">
            <summary>
            Provides methods to perform conversion on <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Conversion.ObjectConverter.Target">
            <summary>
            Gets the target object.
            </summary>
            <value>
            The target object.
            </value>
        </member>
        <member name="M:Primavera.Hydrogen.Conversion.ObjectConverter.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Primavera.Hydrogen.Conversion.ObjectConverter"/> class from being created.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Conversion.ObjectConverter.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Conversion.ObjectConverter"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Conversion.ObjectConverter.TryConvertOrDefault``1(``0@)">
            <summary>
            Tries to convert the value to <typeparamref name="T"/> or gets the default value of <typeparamref name="T"/> if the conversion is not possible.
            </summary>
            <typeparam name="T">The conversion type.</typeparam>
            <param name="outValue">The converted value.</param>
            <returns>Returns <c>true</c> if the [conversion] succeeds, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Conversion.ObjectConverter.ConvertOrDefault``1">
            <summary>
            Convert the value to <typeparamref name="T"/> or gets the default value of <typeparamref name="T"/> if the conversion is not possible.
            </summary>
            <typeparam name="T">The conversion type.</typeparam>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Conversion.ObjectConverter.ConvertOrDefault``1(``0)">
            <summary>
            Convert the value to <typeparamref name="T"/> or gets the specified default value if the conversion is not possible.
            </summary>
            <typeparam name="T">The conversion type.</typeparam>
            <param name="defaultValue">The default value.</param>
            <returns>
            The converted value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Conversion.ObjectConverter.Convert``1">
            <summary>
            Convert the value to <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The conversion type.</typeparam>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Conversion.ObjectConverter.IsConvertible``1">
            <summary>
            Indicates whether the <typeparamref name="T"/> is a convertible type.
            </summary>
            <typeparam name="T">The conversion type.</typeparam>
            <returns><c>true</c> if [convertible]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Data.DataTransferObject">
            <summary>
            Implements the Data Transfer Object design pattern, providing a dictionary-based object with case insensitive keys, for the interoperability 
            of applications or logical layers that need to transfer data between their boundaries.
            </summary>
            <remarks>
            This class does not implement the <see cref = "T:System.IDisposable" /> interface because (by definition) a data transfer object
            should preserve data in order to be transferable, and the explicit disposal would destroy all data items. 
            If you need a disposable object you should create a new class which inherits from this one and implement the 
            disposable pattern calling the base method of <see cref = "M:Primavera.Hydrogen.Data.DataTransferObject.DisposeItems" />.
            </remarks>
        </member>
        <member name="F:Primavera.Hydrogen.Data.DataTransferObject.options">
            <summary>
            The data transfer object options.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Data.DataTransferObject.data">
            <summary>
            The dictionary-based data.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Data.DataTransferObject"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Data.DataTransferObject"/> class with the specified collection of key/value pairs.
            </summary>
            <param name="items">The collection of key/value pairs.</param>
        </member>
        <member name="P:Primavera.Hydrogen.Data.DataTransferObject.Items">
            <summary>
            Gets or sets the collection of key/value pairs.
            </summary>
            <value>
            The collection of key/value pairs.
            </value>
            <remarks>
            IMPORTANT: This property must be public in order to be serializable.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.Data.DataTransferObject.Options">
            <summary>
            Gets or sets the data transfer object options.
            </summary>
            <value>
            The options.
            </value>
            <remarks>
            This property is internal because the <see cref="T:Primavera.Hydrogen.Data.DataTransferObjectConverter" />
            needs it to support polymorphic deserialization of derived classes. This way,
            derived classes do not need to provide the same base constructor.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.GetValueOrDefault``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Gets the value of the specified key, or default if not found.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The key.</param>
            <param name="options">The JSON serializer options.</param>
            <returns>
            The value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.GetValue``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Gets the value of the specified key, or default if not exists.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The key.</param>
            <param name="options">The JSON serializer options.</param>
            <returns>
            The value.
            </returns>
            <remarks>
            If this instance was created by JSON deserialization, some values may require
            a just in time deserialization in order to get the underlying type of the object.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of the specified key, creating the key if not exists.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The object instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.CreateDictionary">
            <summary>
            Creates a new dictionary with case-insensitive keys,
            that is the internal implementation of the data transfer object.
            </summary>
            <returns>
            The data transfer object dictionary.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.InitWith(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes this instance with the specified collection of key/value pairs.
            </summary>
            <param name="items">The collection of key/value pairs.</param>
            <returns>The object of this instance.</returns>
            <remarks>
            This method is internal because the <see cref="T:Primavera.Hydrogen.Data.DataTransferObjectConverter" />
            needs it to support polymorphic deserialization of derived classes. This way,
            derived classes do not need to provide the base constructor.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.Configure(Primavera.Hydrogen.Data.DataTransferObjectOptions)">
            <summary>
            Configures the object with specified options. 
            </summary>
            <param name="options">The options.</param>
            <returns>The object instance.</returns>
            <remarks>
            If the object contains any child data transfer objects, the settings are applied recursively to all.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>The <see cref="T:System.String"/> that represents this object.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.ToJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Converts to JSON string.
            </summary>
            <param name="options">The JSON serializer options.</param>
            <returns>
            The JSON <see cref="T:System.String" /> that represents this object.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.ToObject``1">
            <summary>
            Creates a new object of the specified type, making a case-insensitive mapping of key-value data to object properties.
            </summary>
            <typeparam name="T">The type of object to create.</typeparam>
            <returns>The new object.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.ToDataTransferObject">
            <summary>
            Copies this object to a new data transfer object.
            </summary>
            <returns>The new data transfer object.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <remarks>
            If your overridden Equals method returns true when two objects are tested for equality, 
            your overridden GetHashCode method must return the same value for the two objects.
            Therefore, two objects that are equal also return hash codes that are equal. 
            However, the reverse is not true, equal hash codes do not imply object equality, 
            because different (unequal) objects can have identical hash codes.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.Equals(Primavera.Hydrogen.Data.DataTransferObject)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="dto">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.Equals(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Determines whether the specified collection of key/value pairs is equal to this instance's collection of key/value pairs.
            </summary>
            <param name="items">The collection of key/value pairs to compare with.</param>
            <returns>
              <c>true</c> if the specified collection of key/value pairs is equal to this instance's collection of key/value pairs; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.EqualsOfNulls(System.Object,System.Object)">
            <summary>
            Determines whether the specified objects are equal when any or both are null; otherwise it returns unknown equality.
            </summary>
            <param name="left">The left object.</param>
            <param name="right">The right object.</param>
            <returns>
              <c>true</c> if objects are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.Clone">
            <summary>
            Creates a new object that is a clone of this object.
            </summary>
            <returns>
            The new object.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.CloneItems">
            <summary>
            Creates a new object that is a clone of this object's collection of key/value pairs.
            </summary>
            <returns>The cloned collection of key/value pairs.</returns>
            <remarks>
            It makes a deep copy (value) of all values, or a shallow copy (reference) when that is not possible.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObject.DisposeItems">
            <summary>
            Disposes this object's collection of key/value pairs.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Data.DataTransferObjectBuilder">
            <summary>
            Provides a <see cref="T:Primavera.Hydrogen.Data.DataTransferObject"/> builder.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectBuilder.DefaultOptions">
            <summary>
            Creates a new object with the default data transfer object options.
            </summary>
            <returns>
            The default options.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectBuilder.CreateWith(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.Data.DataTransferObject" /> with the specified collection of key/value pairs.
            </summary>
            <param name="items">The collection of key/value pairs.</param>
            <returns>The new object.</returns>
            <remarks>
            This constructor is required to allow the derived classes to implement the <see cref="T:System.ICloneable" /> interface.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectBuilder.CreateFrom``1(System.Object,System.Reflection.BindingFlags)">
            <summary>
            Creates a new assignable <see cref="T:Primavera.Hydrogen.Data.DataTransferObject"/> of the specified type, making a case-insensitive mapping of object properties to key-value data.
            </summary>
            <typeparam name="T">The type of object.</typeparam>
            <param name="source">The source object.</param>
            <param name="bindingAttr">The binding attribute; default value is all public instance and static properties.</param>
            <returns>The new object.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectBuilder.ConvertTo``1(Primavera.Hydrogen.Data.DataTransferObject,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Creates a new object of the specified type, making a case-insensitive mapping of key-value data to object properties.
            </summary>
            <typeparam name="T">The type of target object to create.</typeparam>
            <param name="source">The source object to copy data from.</param>
            <param name="options">The JSON serializer options.</param>
            <returns>The new object.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectBuilder.MapObjectToDictionary(System.Object,Primavera.Hydrogen.Data.DataTransferObject,System.Reflection.BindingFlags)">
            <summary>
            Makes a case-insensitive mapping of object properties to key-value data.
            </summary>
            <param name="source">The source object.</param>
            <param name="target">The target object.</param>
            <param name="bindingAttr">The binding attribute.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectBuilder.MapDictionaryToObject``1(Primavera.Hydrogen.Data.DataTransferObject,``0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Makes a case-insensitive mapping of key-value data to object properties.
            </summary>
            <typeparam name="T">The type of target object.</typeparam>
            <param name="source">The source data.</param>
            <param name="target">The target object.</param>
            <param name="options">The JSON serializer options.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Data.DataTransferObjectConverter">
            <summary>
            Provides a factory converter of <see cref="T:Primavera.Hydrogen.Data.DataTransferObject"/> that supports the
            polymorphic serialization.
            </summary>
            <seealso cref="T:System.Text.Json.Serialization.JsonConverter`1"/>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.Data.DataTransferObjectOptions">
            <summary>
            Provides the data transfer object options.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Data.DataTransferObjectOptions.TypeNameHandling">
            <summary>
            Gets or sets a value indicating whether [serialize type name handling].
            </summary>
            <value>
              <c>true</c> if [serialize type name handling]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Primavera.Hydrogen.Data.DataTransferObjectPolyConverter`1">
            <summary>
            Provides a custom converter of <see cref="T:Primavera.Hydrogen.Data.DataTransferObject" /> that supports the following features: polymorphic
            serialization for type inheritance, maximum depth for larger objects, reference loop
            handling for circular references, dynamic type handling for navigation properties like the
            Entity Framework, and pattern matching for exclusion types.
            </summary>
            <typeparam name="T">The type of converter.</typeparam>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectPolyConverter`1.#ctor(Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Data.DataTransferObjectPolyConverter`1"/> class.
            </summary>
            <param name="options">Options.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectPolyConverter`1.GetSerializeJsonValueKind(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectPolyConverter`1.GetDeserializeJsonValueKind(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectPolyConverter`1.SerializeCustom``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectPolyConverter`1.DeserializeCustom(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.Data.DataTransferObjectSerializer">
            <summary>
            Provides a <see cref="T:Primavera.Hydrogen.Data.DataTransferObject"/> serializer.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectSerializer.Serialize(Primavera.Hydrogen.Data.DataTransferObject,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes a <see cref="T:Primavera.Hydrogen.Data.DataTransferObject" /> into a JSON string.
            </summary>
            <param name="instance">The object.</param>
            <param name="options">The JSON serializer options.</param>
            <returns>
            The JSON string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectSerializer.DeserializeFile``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Creates a new object of <see cref="T:Primavera.Hydrogen.Data.DataTransferObject"/> from the specified JSON file.
            </summary>
            <typeparam name="T">The type of object.</typeparam>
            <param name="fileName">The JSON file.</param>
            <param name="options">The JSON serializer options.</param>
            <returns>The new object.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Creates a new object, assignable from <see cref="T:Primavera.Hydrogen.Data.DataTransferObject" />, from the specified JSON string.
            </summary>
            <typeparam name="T">The type of object.</typeparam>
            <param name="text">The JSON string.</param>
            <param name="options">The JSON serializer options.</param>
            <returns>
            The new object.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectSerializer.Deserialize(System.String,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Creates a new object from the specified JSON string.
            </summary>
            <param name="text">The JSON string.</param>
            <param name="returnType">The type of object.</param>
            <param name="options">The JSON serializer options.</param>
            <returns>
            The new object.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectSerializer.ConfigureSerializerOptions(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Adds the <see cref="T:Primavera.Hydrogen.Data.DataTransferObjectConverter"/> to the specified options; creates default options if none is specified.
            </summary>
            <param name="options">The options.</param>
            <returns>The updated options.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Data.DataTransferObjectSerializer.DeserializeValue``1(System.Object,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes the value to the specified type.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="value">The value.</param>
            <param name="options">The JSON serializer options.</param>
            <returns>The deserialized value.</returns>
            <remarks>
            If this instance was created from JSON deserialization some values may require
            a just in time deserialization in order to get the underlying type of the object.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.DateTimeExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.DateTime"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.DateTimeExtensions.Transform(System.DateTime)">
            <summary>
            Returns a transformer capable of performing transformations on the target <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.DateTime"/>.</param>
            <returns>
            An instance of the transformer.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DateTimeExtensions.Transform(System.Nullable{System.DateTime})">
            <summary>
            Returns a transformer capable of performing transformations on the target <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.DateTime"/>.</param>
            <returns>
            An instance of the transformer.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.DateTimeOffsetExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.DateTimeOffset"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.DateTimeOffsetExtensions.Transform(System.DateTimeOffset)">
            <summary>
            Returns a transformer capable of performing transformations on the target <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.DateTimeOffset"/>.</param>
            <returns>
            An instance of the transformer.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DateTimeOffsetExtensions.Transform(System.Nullable{System.DateTimeOffset})">
            <summary>
            Returns a transformer capable of performing transformations on the target <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.DateTimeOffset"/>.</param>
            <returns>
            An instance of the transformer.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.DependencyInjection.DecoratorDisposable`1">
            <summary>
            Provides a decorator for a service <typeparamref name="TService" /> previously registered with
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> that is used when that registration uses an implementation
            factory.
            The decorator is registered and replaces the previous registration of <typeparamref name="TService" />,
            still allowing the service that replaces that registration to access the docorated service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <seealso cref="T:Primavera.Hydrogen.DependencyInjection.Decorator`1" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorDisposable`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.DependencyInjection.DecoratorDisposable`1"/> class.
            </summary>
            <param name="instance">The instance of the decorated service.</param>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorDisposable`1.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Primavera.Hydrogen.DependencyInjection.DecoratorDisposable`1"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorDisposable`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorDisposable`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>True</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.DependencyInjection.Decorator`1">
            <summary>
            Provides a decorator for a service <typeparamref name="TService"/> previously registered with
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            The decorator is registered and replaces the previous registration of <typeparamref name="TService"/>,
            still allowing the service that replaces that registration to access the decorated service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
        </member>
        <member name="P:Primavera.Hydrogen.DependencyInjection.Decorator`1.Instance">
            <summary>
            Gets the instance of the decorated service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.Decorator`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.DependencyInjection.Decorator`1"/> class.
            </summary>
            <param name="instance">The instance of the decorated service.</param>
        </member>
        <member name="T:Primavera.Hydrogen.DependencyInjection.Decorator`2">
            <summary>
            Provides a decorator for a service <typeparamref name="TService" /> previously registered with
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            The decorator is registered and replaces the previous registration of <typeparamref name="TService" />,
            still allowing the service that replaces that registration to access the decorated service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the service implementation.</typeparam>
            <seealso cref="T:Primavera.Hydrogen.DependencyInjection.Decorator`1" />
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.Decorator`2.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.DependencyInjection.Decorator`2"/> class.
            </summary>
            <param name="instance">The instance of the decorated service.</param>
        </member>
        <member name="T:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> that allow
            configuring service decorators.
            </summary>
            <remarks>
            These extension methods allows using the Decorator patterns with service registrations.
            A decorator is a type that implements the decorated service and includes it as a dependency.
            This allows replacing previous service registrations with new ones in a way that is totally
            transparent to any other component that has a dependency on those services.
            When the decorator is added, the previous registration (the decorated service) is removed from the
            service collection and replaced by a new one (the decorator).
            The decorator is also registered, to allow the decorator to reuse the decorated service.
            A decorator can be added like in the following example:
            <code>
            <![CDATA[
            IServiceCollection services = new ServiceCollection();
            services.AddSingleton<IMyService>();
            services.AddSingletonDecorator<IMyService, IMyNewService>();
            ]]>
            </code>
            The decorated service can be injected in the decorator like this:
            <code>
            <![CDATA[
            public class MyNewService : IMyNewService
            {
                private Decorator<IMyService> Decorator { get; set; }
                
                public MyNewService(Decorator<IMyNewService> decorator)
                {
                    this.Decorator = decorator;
                }
                
                public void DoSomething()
                {
                    this.Decorator.Instance.DoSomething();
                }
            }
            ]]>
            </code>
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddTransientDecorator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)">
            <summary>
            Adds a transient decorator for service type <paramref name="serviceType"/> that will resolve
            to a <paramref name="decoratorType"/> instance.
            </summary>
            <param name="services">The service collection.</param>
            <param name="serviceType">The type of the service decorated.</param>
            <param name="decoratorType">The type of the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddTransientDecorator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})">
            <summary>
            Adds a transient decorator for service type <paramref name="serviceType"/> that will resolve
            to the instance returned by <paramref name="decoratorFactory"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="serviceType">The type of the service decorated.</param>
            <param name="decoratorFactory">The factory that creates the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddTransientDecorator``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a transient decorator for service type <typeparamref name="TService"/> that will resolve
            to a <typeparamref name="TDecorator"/> instance.
            </summary>
            <typeparam name="TService">The type of the service decorated.</typeparam>
            <typeparam name="TDecorator">The type of the decorator.</typeparam>
            <param name="services">The service collection.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddTransientDecorator``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})">
            <summary>
            Adds a transient decorator for service type <typeparamref name="TService"/> that will resolve
            to a <typeparamref name="TDecorator"/> instance.
            </summary>
            <typeparam name="TService">The type of the service decorated.</typeparam>
            <typeparam name="TDecorator">The type of the decorator.</typeparam>
            <param name="services">The service collection.</param>
            <param name="decoratorFactory">The factory that creates the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddSingletonDecorator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)">
            <summary>
            Adds a singleton decorator for service type <paramref name="serviceType"/> that will resolve
            to a <paramref name="decoratorType"/> instance.
            </summary>
            <param name="services">The service collection.</param>
            <param name="serviceType">The type of the service decorated.</param>
            <param name="decoratorType">The type of the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddSingletonDecorator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})">
            <summary>
            Adds a singleton decorator for service type <paramref name="serviceType"/> that will resolve
            to the instance returned by <paramref name="decoratorFactory"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="serviceType">The type of the service decorated.</param>
            <param name="decoratorFactory">The factory that creates the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddSingletonDecorator``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a singleton decorator for service type <typeparamref name="TService"/> that will resolve
            to a <typeparamref name="TDecorator"/> instance.
            </summary>
            <typeparam name="TService">The type of the service decorated.</typeparam>
            <typeparam name="TDecorator">The type of the decorator.</typeparam>
            <param name="services">The service collection.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddSingletonDecorator``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})">
            <summary>
            Adds a singleton decorator for service type <typeparamref name="TService"/> that will resolve
            to a <typeparamref name="TDecorator"/> instance.
            </summary>
            <typeparam name="TService">The type of the service decorated.</typeparam>
            <typeparam name="TDecorator">The type of the decorator.</typeparam>
            <param name="services">The service collection.</param>
            <param name="decoratorFactory">The factory that creates the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddScopedDecorator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)">
            <summary>
            Adds a scoped decorator for service type <paramref name="serviceType"/> that will resolve
            to a <paramref name="decoratorType"/> instance.
            </summary>
            <param name="services">The service collection.</param>
            <param name="serviceType">The type of the service decorated.</param>
            <param name="decoratorType">The type of the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddScopedDecorator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})">
            <summary>
            Adds a scoped decorator for service type <paramref name="serviceType"/> that will resolve
            to the instance returned by <paramref name="decoratorFactory"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="serviceType">The type of the service decorated.</param>
            <param name="decoratorFactory">The factory that creates the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddScopedDecorator``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a scoped decorator for service type <typeparamref name="TService"/> that will resolve
            to a <typeparamref name="TDecorator"/> instance.
            </summary>
            <typeparam name="TService">The type of the service decorated.</typeparam>
            <typeparam name="TDecorator">The type of the decorator.</typeparam>
            <param name="services">The service collection.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.DependencyInjection.DecoratorsServiceCollectionExtensions.AddScopedDecorator``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})">
            <summary>
            Adds a scoped decorator for service type <typeparamref name="TService"/> that will resolve
            to a <typeparamref name="TDecorator"/> instance.
            </summary>
            <typeparam name="TService">The type of the service decorated.</typeparam>
            <typeparam name="TDecorator">The type of the decorator.</typeparam>
            <param name="services">The service collection.</param>
            <param name="decoratorFactory">The factory that creates the decorator.</param>
            <returns>
            The new <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Diagnostics.ExecutionTimer">
            <summary>
            Allows timing the execution of code by wrapping it in a using block.
            </summary>
            <example>
            This class should be used like this:
            <code>
            <![CDATA[
            using (new ExecutionTimer("mycode"))
            {
                // Code here
            }
            ]]>
            or:
            <![CDATA[
            TimeSpan duration = TimeSpan.Zero;
            using (new ExecutionTimer("mycode", t => duration = t))
            {
                // Code here
            }
            ]]>
            </code>
            </example>
            <remarks>
            The result is written to <see cref="T:System.Diagnostics.Debug"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Diagnostics.ExecutionTimer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Diagnostics.ExecutionTimer" /> class.
            </summary>
            <param name="name">A name that identifies the code being measured.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Diagnostics.ExecutionTimer.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Diagnostics.ExecutionTimer" /> class.
            </summary>
            <param name="name">A name that identifies the code being measured.</param>
            <param name="logger">The logger that should be used.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Diagnostics.ExecutionTimer.#ctor(System.String,System.Action{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Diagnostics.ExecutionTimer"/> class.
            </summary>
            <param name="name">A name that identifies the code being measured.</param>
            <param name="callback">The action that should be called when execution is completed.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Diagnostics.ExecutionTimer.#ctor(System.String,Microsoft.Extensions.Logging.ILogger,System.Action{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Diagnostics.ExecutionTimer"/> class.
            </summary>
            <param name="name">A name that identifies the code being measured.</param>
            <param name="logger">The logger that should be used.</param>
            <param name="callback">The action that should be called when execution is completed.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Diagnostics.ExecutionTimer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.HashCodes">
            <summary>
            Provides helper methods to generate hash codes.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.HashCodes.Combine(System.Int32[])">
            <summary>
            Combines the specified hash codes.
            </summary>
            <param name="hashCodes">The hash codes that should be combined.</param>
            <returns>The resulting hash code.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.HashCodes.Combine(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Combines the specified hash codes.
            </summary>
            <param name="hashCodes">The hash codes that should be combined.</param>
            <returns>The resulting hash code.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.HashCodes.Combine(System.Object[])">
            <summary>
            Combines the hash codes for the specified object instances.
            </summary>
            <param name="instances">The instances whose hash codes should be combined.</param>
            <returns>The resulting hash code.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.HashCodes.Combine(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Combines the hash codes for the specified object instances.
            </summary>
            <param name="instances">The instances whose hash codes should be combined.</param>
            <returns>The resulting hash code.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.IDictionaryExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Collections.Generic.IDictionary`2"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.IDictionaryExtensions.GetKeyNoCase``1(System.Collections.Generic.IDictionary{System.String,``0},System.String)">
            <summary>
            Returns the specified dictionary key (without considering case).
            </summary>
            <typeparam name="TValue">The type of the dictionary values.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key that should be returned.</param>
            <returns>
            The key exactly as set in the dictionary. Null if the key does not exist.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IDictionaryExtensions.ContainsKeyNoCase``1(System.Collections.Generic.IDictionary{System.String,``0},System.String)">
            <summary>
            Determines whether the specified dictionary contains the specified key (without considering case).
            </summary>
            <typeparam name="TValue">The type of the dictionary values.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key that should be verified.</param>
            <returns>
            A value indicating whether the specified dictionary contains the specified key (without considering case).
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IDictionaryExtensions.GetValueOrDefault``1(System.Collections.Generic.IDictionary{System.String,``0},System.String,``0)">
            <summary>
            Gets the value for the specified key or return <paramref name="defaultValue"/> if the key does not exist.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key of the value that should be returned.</param>
            <param name="defaultValue">The default value that should be returned if the key does not exist.</param>
            <returns>
            The value stored the dictionary or <paramref name="defaultValue"/> if the key does not exist.  
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IDictionaryExtensions.GetValueOrDefaultNoCase``1(System.Collections.Generic.IDictionary{System.String,``0},System.String,``0)">
            <summary>
            Gets the value for the specified key (without considering case) or return <paramref name="defaultValue"/> if the key does not exist.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key of the value that should be returned.</param>
            <param name="defaultValue">The default value that should be returned if the key does not exist.</param>
            <returns>
            The value stored the dictionary or <paramref name="defaultValue"/> if the key does not exist.  
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.IEnumerableExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Collections.Generic.IEnumerable`1"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Iterates through the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> and applies the specified action.
            </summary>
            <typeparam name="T">The type of elements in the enumerable.</typeparam>
            <param name="list">The enumerable that should be iterated.</param>
            <param name="action">The action that should be applied.</param>
        </member>
        <member name="M:Primavera.Hydrogen.IEnumerableExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
            <param name="list">The list.</param>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Interop.SafeNativeMethods">
            <summary>
            Provides access to safe unmanaged native methods.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Interop.SafeNativeMethods.UuidCreateSequential(System.Guid@)">
            <summary>
            Generates a new sequential GUID.
            </summary>
            <param name="newGuid">The new generated GUID.</param>
            <returns>An integer defining if the generation succeeded (equals 0) or failed (not 0).</returns>
        </member>
        <member name="T:Primavera.Hydrogen.IntExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Int32"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensions.Bits(System.Int32)">
            <summary>
            Returns a type capable of manipulating the bits of the target <see cref="T:System.Int32"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.Int32"/>.</param>
            <returns>
            An instance of the bits manipulator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensions.Transform(System.Int32)">
            <summary>
            Returns a transformer capable of performing transformations on the target <see cref="T:System.Int32"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.Int32"/>.</param>
            <returns>
            An instance of the transformer.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.IntExtensionsBits">
            <summary>
            Allows performing transformations on a <see cref="T:System.Int32"/> target.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensionsBits.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.IntExtensionsBits"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensionsBits.SetBitOn(System.Int32)">
            <summary>
            Sets the bit specified by <paramref name="mask"/> to 1 and returns the modified value.
            </summary>
            <param name="mask">The mask that specifies the bit that should be modified.</param>
            <returns>
            The modified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensionsBits.SetBitOn(Primavera.Hydrogen.BitPosition)">
            <summary>
            Sets the bit specified by <paramref name="bit"/> to 1 and returns the modified value.
            </summary>
            <param name="bit">The position (from right to left) of the bit that should be modified.</param>
            <returns>
            The modified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensionsBits.SetBitOff(System.Int32)">
            <summary>
            Sets the bit specified by <paramref name="mask"/> to 0 and returns the modified value.
            </summary>
            <param name="mask">The mask that specifies the bit that should be modified.</param>
            <returns>
            The modified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensionsBits.SetBitOff(Primavera.Hydrogen.BitPosition)">
            <summary>
            Sets the bit specified by <paramref name="bit"/> to 0 and returns the modified value.
            </summary>
            <param name="bit">The position (from right to left) of the bit that should be modified.</param>
            <returns>
            The modified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensionsBits.IsBitOn(System.Int32)">
            <summary>
            Determines whether the bit specified by <paramref name="mask"/> is set to 1.
            </summary>
            <param name="mask">The mask that specifies the bit that should be checked.</param>
            <returns>
            A value indicating whether the bit specified by <paramref name="mask"/> is set to 1.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.IntExtensionsBits.IsBitOn(Primavera.Hydrogen.BitPosition)">
            <summary>
            Determines whether the specified <paramref name="bit"/> is set to 1.
            </summary>
            <param name="bit">The position (from right to left) of the bit that should be checked.</param>
            <returns>
            A value indicating whether the specified <paramref name="bit"/> is set to 1.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Logging.LoggerWrapper">
            <summary>
            Allows wrapping an instance of <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
            The wrapper will only use the wrapped logger if it is not null.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Logging.LoggerWrapper.IsActive">
            <summary>
            Gets a value indicating whether the wrapper is active, meaning
            that there is actually an instance of <see cref="T:Microsoft.Extensions.Logging.ILogger"/> wrapped.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Logging.LoggerWrapper.Wrap(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Wraps the specified <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance.
            </summary>
            <param name="innerLogger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance. Can be null.</param>
            <returns>
            The wrapper instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Logging.LoggerWrapper.ResolveAndWrap``1(System.IServiceProvider,System.Boolean)">
            <summary>
            Wraps the specified <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance, resolved using
            the specified service provider.
            </summary>
            <typeparam name="T">The type of the logger that should be wrapped.</typeparam>
            <param name="serviceProvider">The service provider that will be used to resolve
            the logger instance.</param>
            <param name="throwErrors">
            A value indicating whether an exception should be raised if the logger instance cannot be resolved.
            </param>
            <returns>
            The wrapper instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Logging.LoggerWrapper.Microsoft#Extensions#Logging#ILogger#Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Logging.LoggerWrapper.Microsoft#Extensions#Logging#ILogger#IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Logging.LoggerWrapper.Microsoft#Extensions#Logging#ILogger#BeginScope``1(``0)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.LongExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Int64"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensions.Bits(System.Int64)">
            <summary>
            Returns a type capable of manipulating the bits of the target <see cref="T:System.Int64"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.Int64"/>.</param>
            <returns>
            An instance of the bits manipulator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensions.Transform(System.Int64)">
            <summary>
            Returns a transformer capable of performing transformations on the target <see cref="T:System.Int64"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.Int64"/>.</param>
            <returns>
            An instance of the transformer.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.LongExtensionsBits">
            <summary>
            Allows performing transformations on a <see cref="T:System.Int64"/> target.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensionsBits.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.LongExtensionsBits"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensionsBits.SetBitOn(System.Int64)">
            <summary>
            Sets the bit specified by <paramref name="mask"/> to 1 and returns the modified value.
            </summary>
            <param name="mask">The mask that specifies the bit that should be modified.</param>
            <returns>
            The modified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensionsBits.SetBitOn(Primavera.Hydrogen.BitPosition)">
            <summary>
            Sets the bit specified by <paramref name="bit"/> to 1 and returns the modified value.
            </summary>
            <param name="bit">The position (from right to left) of the bit that should be modified.</param>
            <returns>
            The modified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensionsBits.SetBitOff(System.Int64)">
            <summary>
            Sets the bit specified by <paramref name="mask"/> to 0 and returns the modified value.
            </summary>
            <param name="mask">The mask that specifies the bit that should be modified.</param>
            <returns>
            The modified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensionsBits.SetBitOff(Primavera.Hydrogen.BitPosition)">
            <summary>
            Sets the bit specified by <paramref name="bit"/> to 0 and returns the modified value.
            </summary>
            <param name="bit">The position (from right to left) of the bit that should be modified.</param>
            <returns>
            The modified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensionsBits.IsBitOn(System.Int64)">
            <summary>
            Determines whether the bit specified by <paramref name="mask"/> is set to 1.
            </summary>
            <param name="mask">The mask that specifies the bit that should be checked.</param>
            <returns>
            A value indicating whether the bit specified by <paramref name="mask"/> is set to 1.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.LongExtensionsBits.IsBitOn(Primavera.Hydrogen.BitPosition)">
            <summary>
            Determines whether the specified <paramref name="bit"/> is set to 1.
            </summary>
            <param name="bit">The position (from right to left) of the bit that should be checked.</param>
            <returns>
            A value indicating whether the specified <paramref name="bit"/> is set to 1.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpClientOptions">
            <summary>
            Defines the options used to configure new <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/> instances.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpClientOptions.Host">
            <summary>
            Gets or sets the SMTP host address.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpClientOptions.Credentials">
            <summary>
            Gets or sets the credentials to authenticate the sender.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpClientOptions.Timeout">
            <summary>
            Gets or sets the amount of time after which sending messages times out.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClientOptions"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpClientServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            that allow configuring the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/> as a service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientServiceCollectionExtensions.AddSmtpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a service that allows creating instances of <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/> using
            configuration defined by <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClientOptions"/>.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientServiceCollectionExtensions.AddSmtpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.Net.Email.SmtpClientOptions})">
            <summary>
            Adds a service that allows creating instances of <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/> using the
            specified configuration options.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.EmailAddress">
            <summary>
            Describes an email address of a sender or receiver of a <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailAddress.Address">
            <summary>
            Gets or sets the email address.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailAddress.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailAddress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.EmailAddress"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.EmailAddress"/> class.
            </summary>
            <param name="address">The email address.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailAddress.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.EmailAddress"/> class.
            </summary>
            <param name="address">The email address.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailAddress.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailAddress.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailAddress.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.EmailAddressExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Primavera.Hydrogen.Net.Email.EmailAddress"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailAddressExtensions.ToMailAddress(Primavera.Hydrogen.Net.Email.EmailAddress)">
            <summary>
            Returns the <see cref="T:System.Net.Mail.MailAddress"/> that corresponds to the <see cref="T:Primavera.Hydrogen.Net.Email.EmailAddress"/> instance.
            </summary>
            <param name="address">The <see cref="T:Primavera.Hydrogen.Net.Email.EmailAddress"/> instance.</param>
            <returns>
            The <see cref="T:System.Net.Mail.MailAddress"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.EmailMessage">
            <summary>
            Describes an email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.From">
            <summary>
            Gets or sets the from address for this email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.Sender">
            <summary>
            Gets or sets the sender address for this email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.ReplyTo">
            <summary>
            Gets or sets the reply-to addresses for this email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.Priority">
            <summary>
            Gets or sets the priority for this email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.To">
            <summary>
            Gets or sets the to addresses for this email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.CC">
            <summary>
            Gets or sets the CC addresses for this email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.BCC">
            <summary>
            Gets or sets the BCC addresses for this email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.Subject">
            <summary>
            Gets or sets the subject for this email message.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.BodyText">
            <summary>
            Gets or sets the body for this email message (as plain text).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.BodyHtml">
            <summary>
            Gets or sets the body for this email message (as HTML).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessage.Attachments">
            <summary>
            Gets or sets the attachments for this email message (as HTML).
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessage.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Determines whether the specified object is valid.
            </summary>
            <param name="validationContext">The validation context.</param>
            <returns>
            A collection that holds failed-validation information.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.EmailMessageAttachment">
            <summary>
            Describes an attachment in a <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessageAttachment.Name">
            <summary>
            Gets or sets the name of the attachment.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.EmailMessageAttachment.Contents">
            <summary>
            Gets or sets the contents of the attachment (the data).
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessageAttachment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessageAttachment"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessageAttachment.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessageAttachment"/> class.
            </summary>
            <param name="name">The name of the attachment.</param>
            <param name="contents">The contents of the attachment (the data).</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessageAttachment.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessageAttachment.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessageAttachment.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.EmailMessageAttachmentExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessageAttachment"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessageAttachmentExtensions.ToAttachment(Primavera.Hydrogen.Net.Email.EmailMessageAttachment)">
            <summary>
            Returns the <see cref="T:System.Net.Mail.Attachment"/> that corresponds to the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessageAttachment"/> instance.
            </summary>
            <param name="attachment">The <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessageAttachment"/> instance.</param>
            <returns>
            The <see cref="T:System.Net.Mail.Attachment"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.EmailMessageExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessageExtensions.ToMailMessage(Primavera.Hydrogen.Net.Email.EmailMessage)">
            <summary>
            Returns the <see cref="T:System.Net.Mail.MailMessage"/> that corresponds to the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/> instance.
            </summary>
            <param name="message">The <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/> instance.</param>
            <returns>
            The <see cref="T:System.Net.Mail.MailMessage"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.EmailMessagePriority">
            <summary>
            Defines the priority of a <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/>.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Net.Email.EmailMessagePriority.Low">
            <summary>
            The email message is of low priority.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Net.Email.EmailMessagePriority.Normal">
            <summary>
            The email message is of normal priority.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Net.Email.EmailMessagePriority.High">
            <summary>
            The email message is of high priority.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.EmailMessagePriorityExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessagePriority"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.EmailMessagePriorityExtensions.ToMailPriority(Primavera.Hydrogen.Net.Email.EmailMessagePriority)">
            <summary>
            Returns the <see cref="T:System.Net.Mail.MailPriority"/> that corresponds to the <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessagePriority"/> instance.
            </summary>
            <param name="priority">The <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessagePriority"/> instance.</param>
            <returns>
            The <see cref="T:System.Net.Mail.MailPriority"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpClient">
            <summary>
            Allows sending instances of <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/> using SMTP.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpClient.Timeout">
            <summary>
            Gets or sets the amount of time after which sending messages times out.
            The default value is 10 seconds.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClient.#ctor(Primavera.Hydrogen.Net.Email.SmtpHostAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/> class.
            </summary>
            <param name="host">The SMTP host address.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClient.#ctor(Primavera.Hydrogen.Net.Email.SmtpHostAddress,Primavera.Hydrogen.Net.Email.SmtpHostCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient" /> class.
            </summary>
            <param name="host">The SMTP host address.</param>
            <param name="credentials">The credentials to authenticate the sender.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClient.#ctor(Primavera.Hydrogen.Net.Email.SmtpMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/> class.
            </summary>
            <param name="handler">The handler that should be used.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClient.#ctor(Primavera.Hydrogen.Net.Email.SmtpMessageHandler,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/> class.
            </summary>
            <param name="handler">The handler.</param>
            <param name="disposeHandler">
            True if the inner handler should be disposed of, false if the inner handler is intended to be reused.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClient.SendAsync(Primavera.Hydrogen.Net.Email.EmailMessage,System.Threading.CancellationToken)">
            <summary>
            Sends the specified email message.
            </summary>
            <param name="message">The email message that should be sent.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpClientException">
            <summary>
            Represents errors raised by <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClientException" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClientException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClientException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpClientHandler">
            <summary>
            Defines the default <see cref="T:Primavera.Hydrogen.Net.Email.SmtpMessageHandler"/> used by <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClient"/>.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Net.Email.SmtpMessageHandler" />
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpClientHandler.InnerClient">
            <summary>
            Gets or sets the <see cref="T:System.Net.Mail.SmtpClient"/> used internally.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientHandler.#ctor(Primavera.Hydrogen.Net.Email.SmtpHostAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClientHandler"/> class.
            </summary>
            <param name="host">The SMTP host address.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientHandler.#ctor(Primavera.Hydrogen.Net.Email.SmtpHostAddress,Primavera.Hydrogen.Net.Email.SmtpHostCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpClientHandler" /> class.
            </summary>
            <param name="host">The SMTP host address.</param>
            <param name="credentials">The credentials to authenticate the sender.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientHandler.SendAsync(Primavera.Hydrogen.Net.Email.EmailMessage,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpClientHandler.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpHostAddress">
            <summary>
            Defines the address of a SMTP host, the server used to send email with STMP.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpHostAddress.Address">
            <summary>
            Gets or sets the server address.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpHostAddress.Port">
            <summary>
            Gets or sets the server port.
            The default value is 587.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpHostAddress.UseSsl">
            <summary>
            Gets or sets a value indicating whether communication should use SSL.
            Optional. The default value is false.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostAddress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostAddress"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostAddress"/> class.
            </summary>
            <param name="address">The server address.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostAddress.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostAddress" /> class.
            </summary>
            <param name="address">The server address.</param>
            <param name="useSsl">A value indicating whether communication should use SSL.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostAddress.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostAddress"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostAddress.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostAddress"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="port">The port.</param>
            <param name="useSsl">A value indicating whether communication should use SSL.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostAddress.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostAddress.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostAddress.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpHostCredentials">
            <summary>
            Defines the credentials used to authenticate the sender with the SMTP host.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.Password">
            <summary>
            Gets or sets the user password.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.Domain">
            <summary>
            Gets or sets the user domain.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostCredentials"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostCredentials"/> class.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The user password.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostCredentials"/> class.
            </summary>
            <param name="userName">The user name.</param>
            <param name="password">The user password.</param>
            <param name="domain">The user domain.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostCredentials.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpHostCredentialsExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostCredentials"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpHostCredentialsExtensions.ToNetworkCredential(Primavera.Hydrogen.Net.Email.SmtpHostCredentials)">
            <summary>
            Returns the <see cref="T:System.Net.NetworkCredential"/> that corresponds to the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostCredentials"/> instance.
            </summary>
            <param name="credentials">The <see cref="T:Primavera.Hydrogen.Net.Email.SmtpHostCredentials"/> instance.</param>
            <returns>
            The <see cref="T:System.Net.NetworkCredential"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Email.SmtpMessageHandler">
            <summary>
            Defines the base class for SMTP message handlers.
            A SMTP message handler is capable of sending instances <see cref="T:Primavera.Hydrogen.Net.Email.EmailMessage"/> using SMTP.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.Timeout">
            <summary>
            Gets or sets the amount of time after which sending messages times out.
            The default value is 10 seconds.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.Host">
            <summary>
            Gets the SMTP host address.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.Credentials">
            <summary>
            Gets the credentials that should be used to authenticate the sender with the SMTP host.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpMessageHandler" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.#ctor(Primavera.Hydrogen.Net.Email.SmtpHostAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpMessageHandler" /> class.
            </summary>
            <param name="host">The SMTP host address.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.#ctor(Primavera.Hydrogen.Net.Email.SmtpHostAddress,Primavera.Hydrogen.Net.Email.SmtpHostCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Email.SmtpMessageHandler" /> class.
            </summary>
            <param name="host">The SMTP host address.</param>
            <param name="credentials">The credentials to authenticate the sender.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.SendAsync(Primavera.Hydrogen.Net.Email.EmailMessage,System.Threading.CancellationToken)">
            <summary>
            Sends the specified email message.
            </summary>
            <param name="message">The email message that should be sent.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <exception cref="T:Primavera.Hydrogen.Net.Email.SmtpClientException">
            Raised if there is any error sending the message.
            </exception>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Email.SmtpMessageHandler.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException">
            <summary>
            Describes an exception that includes the HTTP status code.
            </summary>
            <seealso cref="T:System.Net.Http.HttpRequestException" />
        </member>
        <member name="P:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException"/> class
            with a specific message that describes the current exception.
            </summary>
            <param name="message">A message that describes the current exception.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException"/> class
            with a specific message that describes the current exception and an inner
            exception.
            </summary>
            <param name="message">A message that describes the current exception.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Net.Sockets.SocketExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Net.Sockets.Socket"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Sockets.SocketExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Connects to the specified endpoint.
            </summary>
            <param name="socket">The socket.</param>
            <param name="remoteEP">The remote endpoint.</param>
            <param name="timeout">The maximum time (in milliseconds) to wait before time out.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <exception cref="T:System.TimeoutException">Raised when the operation is not completed before <paramref name="timeout" /> expires.</exception>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Sockets.SocketExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Connects to the specified endpoint.
            </summary>
            <param name="socket">The socket.</param>
            <param name="remoteEP">The remote endpoint.</param>
            <param name="timeout">The maximum time to wait before time out.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <exception cref="T:System.TimeoutException">Raised when the operation is not completed before <paramref name="timeout" /> expires.</exception>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Sockets.SocketExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Sends data to the connected socket.
            </summary>
            <param name="socket">The socket.</param>
            <param name="buffer">The buffer containing the bytes that should be sent.</param>
            <param name="socketFlags">The socket flags.</param>
            <param name="timeout">The maximum time (in milliseconds) to wait before time out.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.
            The number of bytes sent.
            </returns>
            <exception cref="T:System.TimeoutException">Raised when the operation is not completed before <paramref name="timeout" /> expires.</exception>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Sockets.SocketExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Sends data to the connected socket.
            </summary>
            <param name="socket">The socket.</param>
            <param name="buffer">The buffer containing the bytes that should be sent.</param>
            <param name="socketFlags">The socket flags.</param>
            <param name="timeout">The maximum time to wait before time out.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.
            The number of bytes sent.
            </returns>
            <exception cref="T:System.TimeoutException">Raised when the operation is not completed before <paramref name="timeout" /> expires.</exception>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Sockets.SocketExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Receives data from the connected socket.
            </summary>
            <param name="socket">The socket.</param>
            <param name="buffer">The buffer that will store the data received.</param>
            <param name="socketFlags">The socket flags.</param>
            <param name="timeout">The maximum time (in milliseconds) to wait before time out.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.
            The number of bytes received.
            </returns>
            <exception cref="T:System.TimeoutException">Raised when the operation is not completed before <paramref name="timeout" /> expires.</exception>
        </member>
        <member name="M:Primavera.Hydrogen.Net.Sockets.SocketExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Receives data from the connected socket.
            </summary>
            <param name="socket">The socket.</param>
            <param name="buffer">The buffer that will store the data received.</param>
            <param name="socketFlags">The socket flags.</param>
            <param name="timeout">The maximum time to wait before time out.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.
            The number of bytes received.
            </returns>
            <exception cref="T:System.TimeoutException">Raised when the operation is not completed before <paramref name="timeout" /> expires.</exception>
        </member>
        <member name="T:Primavera.Hydrogen.OperationError">
            <summary>
            Describes an error in a <see cref="T:Primavera.Hydrogen.OperationResult"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationError.Code">
            <summary>
            Gets or sets the error code.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationError.Description">
            <summary>
            Gets or sets the error description.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationError.Details">
            <summary>
            Gets or sets the details, if any.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationError" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationError" /> class.
            </summary>
            <param name="code">The error code.</param>
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationError" /> class.
            </summary>
            <param name="code">The error code.</param>
            <param name="description">The error description.</param>
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.#ctor(System.String,System.String,System.Collections.Generic.IList{Primavera.Hydrogen.OperationErrorDetail})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationError" /> class.
            </summary>
            <param name="code">The error code.</param>
            <param name="description">The error description.</param>
            <param name="details">The details.</param>
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.ToString">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.op_Equality(Primavera.Hydrogen.OperationError,Primavera.Hydrogen.OperationError)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationError.op_Inequality(Primavera.Hydrogen.OperationError,Primavera.Hydrogen.OperationError)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.OperationErrorDetail">
            <summary>
            Describes a detail in a <see cref="T:Primavera.Hydrogen.OperationError"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationErrorDetail.Code">
            <summary>
            Gets or sets the error code.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationErrorDetail.Description">
            <summary>
            Gets or sets the error description.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.OperationErrorDetail.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationErrorDetail" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.OperationErrorDetail.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationErrorDetail" /> class.
            </summary>
            <param name="code">The error code.</param>
        </member>
        <member name="M:Primavera.Hydrogen.OperationErrorDetail.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationErrorDetail" /> class.
            </summary>
            <param name="code">The error code.</param>
            <param name="description">The error description.</param>
        </member>
        <member name="M:Primavera.Hydrogen.OperationErrorDetail.ToString">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.OperationErrorDetail.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.OperationErrorDetail.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.OperationErrorDetail.op_Equality(Primavera.Hydrogen.OperationErrorDetail,Primavera.Hydrogen.OperationErrorDetail)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationErrorDetail.op_Inequality(Primavera.Hydrogen.OperationErrorDetail,Primavera.Hydrogen.OperationErrorDetail)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.OperationResult">
            <summary>
            Defines the result of an operation.
            This result is expressed as success or failure and failures can be identified.
            </summary>
            <example>
            Operation results can be evaluated for success:
            <code>
            <![CDATA[
            OperationResult result = MyOperation(...);
            if (result.IsSuccess)
            {
                // Do something
            }
            ]]>
            </code>
            Or evaluated for any failure:
            <code>
            <![CDATA[
            OperationResult result = MyOperation(...);
            if (result.IsFailure)
            {
                // Do something
            }
            ]]>
            </code>
            Or evaluated for specific failures:
            <code>
            <![CDATA[
            OperationResult result = MyOperation(...);
            if (result.IsFailureWith("ClientNotFound"))
            {
                // Do something
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Primavera.Hydrogen.OperationResult.IsSuccess">
            <summary>
            Gets a value indicating whether the operation succeeded.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationResult.IsFailure">
            <summary>
            Gets a value indicating whether the operation failed.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationResult.Error">
            <summary>
            Gets or sets the error that occurred in the operation (if any).
            If null then <see cref="P:Primavera.Hydrogen.OperationResult.IsSuccess"/> is true.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationResult"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult.#ctor(Primavera.Hydrogen.OperationError)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationResult"/> class.
            </summary>
            <param name="error">The error. Null if the operation succeeded.</param>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult.Success">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult" /> instance that indicates that the operation
            succeeded.
            </summary>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult.Failure">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult" /> instance that indicates that the operation
            failed with an unspecified error.
            </summary>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult.Failure(Primavera.Hydrogen.OperationError)">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult" /> instance that indicates that the operation
            failed with the specified error.
            </summary>
            <param name="error">The error.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult.Failure(System.String,System.String)">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult" /> instance that indicates that the operation
            failed with the specified error.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorDescription">The error description.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult.IsFailureWith(System.String)">
            <summary>
            Gets a value indicating whether the operation failed
            with the specified error code.
            </summary>
            <param name="errorCode">The error code.</param>
            <returns>
            A value indicating whether the operation failed
            with the specified error code.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult.ToString">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.OperationResult`1">
            <summary>
            Defines the result of an operation.
            This result is expressed as success or failure and failures can be identified.
            </summary>
            <typeparam name="T">The type of the additional data stored in the result.</typeparam>
            <example>
            Operation results can be evaluated for success:
            <code>
            <![CDATA[
            OperationResult result = MyOperation(...);
            if (result.IsSuccess)
            {
                // Do something
            }
            ]]>
            </code>
            Or evaluated for any failure:
            <code>
            <![CDATA[
            OperationResult result = MyOperation(...);
            if (result.IsFailure)
            {
                // Do something
            }
            ]]>
            </code>
            Or evaluated for specific failures:
            <code>
            <![CDATA[
            OperationResult result = MyOperation(...);
            if (result.IsFailureWith("ClientNotFound"))
            {
                // Do something
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Primavera.Hydrogen.OperationResult`1.IsSuccess">
            <summary>
            Gets a value indicating whether the operation succeeded.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationResult`1.IsFailure">
            <summary>
            Gets a value indicating whether the operation failed.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationResult`1.Error">
            <summary>
            Gets or sets the error that occurred in the operation (if any).
            If null then <see cref="P:Primavera.Hydrogen.OperationResult`1.IsSuccess"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.OperationResult`1.Data">
            <summary>
            Gets or sets the additional data.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationResult`1"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.#ctor(Primavera.Hydrogen.OperationError,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.OperationResult`1"/> class.
            </summary>
            <param name="error">The error. Null if the operation succeeded.</param>
            <param name="data">The additional data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.Success">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance that indicates that the operation
            succeeded.
            </summary>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult`1"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.Success(`0)">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance that indicates that the operation
            succeeded.
            </summary>
            <param name="data">The additional data.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.Failure">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance that indicates that the operation
            failed with an unspecified error.
            </summary>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult`1"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.Failure(`0)">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance that indicates that the operation
            failed with an unspecified error.
            </summary>
            <param name="data">The additional data.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult`1"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.Failure(Primavera.Hydrogen.OperationError)">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance that indicates that the operation
            failed with the specified error.
            </summary>
            <param name="error">The error.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.Failure(System.String,System.String)">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance that indicates that the operation
            failed with the specified error.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorDescription">The error description.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.Failure(Primavera.Hydrogen.OperationError,`0)">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance that indicates that the operation
            failed with the specified error.
            </summary>
            <param name="error">The error.</param>
            <param name="data">The additional data.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.Failure(System.String,System.String,`0)">
            <summary>
            Initializes a <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance that indicates that the operation
            failed with the specified error.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorDescription">The error description.</param>
            <param name="data">The additional data.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.OperationResult`1" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.IsFailureWith(System.String)">
            <summary>
            Gets a value indicating whether the operation failed
            with the specified error code.
            </summary>
            <param name="errorCode">The error code.</param>
            <returns>
            A value indicating whether the operation failed
            with the specified error code.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.OperationResult`1.ToString">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.AsyncExecution">
            <summary>
            Provides a wrapper for a non-generic <see cref="T:System.Threading.Tasks.Task"/> and calls into the pipeline
            to retry only the generic version of the <see cref="T:System.Threading.Tasks.Task"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.AsyncExecution.#ctor(System.Func{System.Threading.Tasks.Task},Primavera.Hydrogen.Policies.Retry.ShouldRetryPredicate,System.Func{System.Exception,System.Boolean},System.Action{System.Int32,System.Exception,System.TimeSpan},System.Boolean,Primavera.Hydrogen.Policies.Retry.RetryPolicyStats,Microsoft.Extensions.Logging.ILogger,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.AsyncExecution"/> class.
            </summary>
            <param name="action">The user-initiated action.</param>
            <param name="shouldRetryPredicate">The should retry predicate.</param>
            <param name="isTransient">A value indicating whether the retry condition is transient.</param>
            <param name="onRetrying">The action to notify subscribers whenever a retry condition is encountered.</param>
            <param name="fastFirstRetry">A value indicating whether the first retry should be performed immediately.</param>
            <param name="stats">The execution stats holder.</param>
            <param name="logger">The logger.</param>
            <param name="cancellationToken">The token used to cancel the user-initiated task.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.AsyncExecution`1">
            <summary>
            Handles the execution and retries of a user-initiated task.
            </summary>
            <typeparam name="TResult">The type of the result of the user-initiated task.</typeparam>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.AsyncExecution`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}},Primavera.Hydrogen.Policies.Retry.ShouldRetryPredicate,System.Func{System.Exception,System.Boolean},System.Action{System.Int32,System.Exception,System.TimeSpan},System.Boolean,Primavera.Hydrogen.Policies.Retry.RetryPolicyStats,Microsoft.Extensions.Logging.ILogger,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.AsyncExecution`1"/> class.
            </summary>
            <param name="func">The user-initiated task.</param>
            <param name="shouldRetryPredicate">The should retry predicate.</param>
            <param name="isTransient">A value indicating whether the retry condition is transient.</param>
            <param name="onRetrying">The action to notify subscribers whenever a retry condition is encountered.</param>
            <param name="fastFirstRetry">A value indicating whether the first retry should be performed immediatly.</param>
            <param name="stats">The execution stats holder.</param>
            <param name="logger">The logger.</param>
            <param name="cancellationToken">The token used to cancel the user-initiated task.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.AsyncExecution`1.ExecuteAsync">
            <summary>
            Executes the user-initiated task.
            </summary>
            <returns>
            The user-initiated task result.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.IRetryStrategy">
            <summary>
            Defines a strategy that should be used to determine transient conditions
            and trigger retry.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.IRetryStrategy.FastFirstRetry">
            <summary>
            Gets or sets a value indicating whether the first retry should be attempted immediatly.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.IRetryStrategy.Name">
            <summary>
            Gets the name of the strategy.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.IRetryStrategy.GetShouldRetryPredicate">
            <summary>
            Gets the predicate that should be used to evaluate if and how
            the action should be retried.
            </summary>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.ShouldRetryPredicate"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.ITransientErrorDetectionStrategy">
            <summary>
            Defines a strategy that should be used to determine transient conditions
            and trigger retry.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.ITransientErrorDetectionStrategy.IsTransient(System.Exception)">
            <summary>
            Determines whether the specified exception represents a transient failure that 
            should trigger a retry.
            </summary>
            <param name="ex">The exception that should be evaluated.</param>
            <returns>
            A value indicating whether the specified exception represents a transient failure that 
            should trigger a retry.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.RetryCondition">
            <summary>
            Describes whether an action should be retried and how it should be retried.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryCondition.RetryAllowed">
            <summary>
            Gets a value indicating whether the action should be retried.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryCondition.DelayBeforeRetry">
            <summary>
            Gets the interval that the current thread should wait before performing the retry.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryCondition.#ctor(System.Boolean,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryCondition"/> class.
            </summary>
            <param name="retryAllowed">A value indicating whether the action should be retried.</param>
            <param name="delay">The interval that the current thread should wait before performing the retry.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.RetryingEventArgs">
            <summary>
            Defines the arguments of the <see cref="E:Primavera.Hydrogen.Policies.Retry.RetryPolicy.Retrying"/> event.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryingEventArgs.CurrentRetryCount">
            <summary>
            Gets the current retry count.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryingEventArgs.Delay">
            <summary>
            Gets the delay that indicates how long the current thread will be suspended before the 
            next iteration is invoked.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryingEventArgs.LastException">
            <summary>
            Gets the exception that caused the retry condition to occur.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryingEventArgs.#ctor(System.Int32,System.TimeSpan,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryingEventArgs"/> class.
            </summary>
            <param name="currentRetryCount">The current retry count.</param>
            <param name="delay">The delay that indicates how long the current thread will be suspended before the 
            next iteration is invoked.</param>
            <param name="lastException">The exception that caused the retry condition to occur.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy">
            <summary>
            Provides a retry mechanism for executing unrealiable actions and handling
            transient conditions.
            </summary>
            <example>
            To create a retry policy using specific strategies and execute an action:
            <code>
            <![CDATA[
            RetryPolicy policy = new RetryPolicy(new MyRetryStrategy(), new MyErrorDetectionStrategy());
            policy.Execute(
                () => 
                {
                    // action code
                });
            ]]>
            </code>
            To create a retry policy that uses an incremental delay between retries.
            <code>
            <![CDATA[
            RetryPolicy policy = RetryPolicy.FixedInterval(3, TimeSpan.FromMilliseconds(100), new HttpStatusCodeErrorDetectionStrategy());
            bool result = await policy.ExecuteAsync(
                () => 
                {
                    // action code
                    
                    return Task.FromResult(true);
                })
                .ConfigureAwait(false);
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryPolicy.RetryStrategy">
            <summary>
            Gets the strategy that should be used to perform retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryPolicy.ErrorDetectionStrategy">
            <summary>
            Gets the strategy that should be used to determine transient conditions
            and trigger retry.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryPolicy.Stats">
            <summary>
            Gets information about the execution of the retry policy.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryPolicy.ServiceProvider">
            <summary>
            Gets the service provider instance. Can be null.
            </summary>
        </member>
        <member name="E:Primavera.Hydrogen.Policies.Retry.RetryPolicy.Retrying">
            <summary>
            An instance of a callback delegate that will be invoked whenever a retry condition is encountered.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.#ctor(Primavera.Hydrogen.Policies.Retry.IRetryStrategy,Primavera.Hydrogen.Policies.Retry.ITransientErrorDetectionStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> class.
            </summary>
            <param name="retryStrategy">The strategy that should be used to perform retries.</param>
            <param name="errorDetectionStrategy">The strategy that should be used to determine transient conditions
            and trigger retry.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.FixedInterval(System.Int32,Primavera.Hydrogen.Policies.Retry.ITransientErrorDetectionStrategy)">
            <summary>
            Initializes a new instance of <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> with a <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/>
            retry strategy and the specified error detection strategy.
            </summary>
            <param name="retryCount">
            The number of retry attempts.
            </param>
            <param name="errorDetectionStrategy">The error detection strategy that should be used.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.FixedInterval(System.Int32,System.TimeSpan,Primavera.Hydrogen.Policies.Retry.ITransientErrorDetectionStrategy)">
            <summary>
            Initializes a new instance of <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> with a <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/>
            retry strategy and the specified error detection strategy.
            </summary>
            <param name="retryCount">
            The number of retry attempts.
            </param>
            <param name="retryInterval">
            The interval between retries.
            </param>
            <param name="errorDetectionStrategy">The error detection strategy that should be used.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.ExponentialBackoff(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,Primavera.Hydrogen.Policies.Retry.ITransientErrorDetectionStrategy)">
            <summary>
            Initializes a new instance of <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> with a <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy"/>
            retry strategy and the specified error detection strategy.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="minBackoff">The minimum back-off time.</param>
            <param name="maxBackoff">The maximum back-off time.</param>
            <param name="deltaBackoff">The time value that will be used to calculate a random delta in the exponential delay 
            between retries.</param>
            <param name="errorDetectionStrategy">The error detection strategy that should be used.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.Incremental(System.Int32,System.TimeSpan,System.TimeSpan,Primavera.Hydrogen.Policies.Retry.ITransientErrorDetectionStrategy)">
            <summary>
            Initializes a new instance of <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> with a <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy"/>
            retry strategy and the specified error detection strategy.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval that will apply for the first retry.</param>
            <param name="increment">The incremental time value that will be used to calculate the progressive delay between 
            retries.</param>
            <param name="errorDetectionStrategy">The error detection strategy that should be used.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.WithServiceProvider(System.IServiceProvider)">
            <summary>
            Uses the specified logger.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.Execute(System.Action)">
            <summary>
            Executes the specified action applying the retry policy.
            </summary>
            <param name="action">
            The action that should be executed.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.Execute``1(System.Func{``0})">
            <summary>
            Executes the specified action applying the retry policy.
            </summary>
            <typeparam name="TResult">The type of result expected from the action.</typeparam>
            <param name="action">
            The action that should be executed.
            </param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.ExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Executes the specified action applying the retry policy.
            </summary>
            <param name="action">
            The action that should be executed.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Executes the specified action applying the retry policy.
            </summary>
            <typeparam name="TResult">The type of result expected from the action.</typeparam>
            <param name="action">
            The action that should be executed.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            The action result.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy.OnRetrying(System.Int32,System.Exception,System.TimeSpan)">
            <summary>
            Notifies the subscribers whenever a retry condition is encountered.
            </summary>
            <param name="retryCount">The current retry attempt count.</param>
            <param name="lastError">The exception that caused the retry conditions to occur.</param>
            <param name="delay">The delay that indicates how long the current thread will be suspended before 
            the next iteration is invoked.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy`1">
            <summary>
            Provides a retry mechanism for executing unrealiable actions and handling
            transient conditions.
            </summary>
            <typeparam name="T">
            The type that presents the error detection strategy that should be used.
            </typeparam>
            <example>
            To create a retry policy using specific strategies and execute an action:
            <code>
            <![CDATA[
            RetryPolicy<MyErrorDetectionStrategy> policy = new RetryPolicy<MyErrorDetectionStrategy>(new MyRetryStrategy());
            policy.Execute(
                () => 
                {
                    // action code
                });
            ]]>
            </code>
            To create a retry policy that uses an incremental delay between retries.
            <code>
            <![CDATA[
            RetryPolicy<HttpStatusCodeErrorDetectionStrategy> policy = RetryPolicy<HttpStatusCodeErrorDetectionStrategy>.FixedInterval(3, TimeSpan.FromMilliseconds(100));
            bool result = await policy.ExecuteAsync(
                () => 
                {
                    // action code
                    
                    return Task.FromResult(true);
                })
                .ConfigureAwait(false);
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy`1.#ctor(Primavera.Hydrogen.Policies.Retry.IRetryStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy`1"/> class.
            </summary>
            <param name="retryStrategy">The strategy that should be used to perform retries.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy`1.FixedInterval(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> with a <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/>
            retry strategy and the specified error detection strategy.
            </summary>
            <param name="retryCount">
            The number of retry attempts.
            </param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy`1.FixedInterval(System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> with a <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/>
            retry strategy and the specified error detection strategy.
            </summary>
            <param name="retryCount">
            The number of retry attempts.
            </param>
            <param name="retryInterval">
            The interval between retries.
            </param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy`1.ExponentialBackoff(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> with a <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy"/>
            retry strategy and the specified error detection strategy.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="minBackoff">The minimum backoff time.</param>
            <param name="maxBackoff">The maximum backoff time.</param>
            <param name="deltaBackoff">The time value that will be used to calculate a random delta in the exponential delay 
            between retries.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicy`1.Incremental(System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> with a <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy"/>
            retry strategy and the specified error detection strategy.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval that will apply for the first retry.</param>
            <param name="increment">The incremental time value that will be used to calculate the progressive delay between 
            retries.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicy"/> instance.
            </returns>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.RetryPolicyStats">
            <summary>
            Provides information about the execution of a retry policy.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryPolicyStats.Retries">
            <summary>
            Gets the number of times the delegate was retried.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryPolicyStats.ExceptionsHandled">
            <summary>
            Gets the exceptions that were handled.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.RetryPolicyStats.WaitTimes">
            <summary>
            Gets the wait times between retries that were actually used.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicyStats.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryPolicyStats"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicyStats.RecordRetry(System.Exception)">
            <summary>
            Records a retry in the state.
            </summary>
            <param name="exceptionHandled">The exception that was handled.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.RetryPolicyStats.RecordWaitTime(System.TimeSpan)">
            <summary>
            Records a wait time in the state.
            </summary>
            <param name="waitTime">The wait time.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.ShouldRetryPredicate">
            <summary>
            Defines a callback predicate that will be invoked whenever a retry condition is encountered.
            </summary>
            <param name="retryCount">The current count of retries.</param>
            <param name="lastException">The exception that caused the retry condition.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Policies.Retry.RetryCondition"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy">
            <summary>
            Defines a retry strategy with backoff parameters for calculating the exponential delay between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.DefaultDeltaBackoff">
            <summary>
            Gets the default amount of time used when calculating a random delta in the exponential 
            delay between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.DefaultMaxBackoff">
            <summary>
            Gets the default maximum amount of time used when calculating the exponential 
            delay between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.DefaultMinBackoff">
            <summary>
            Gets the default minimum amount of time used when calculating the exponential 
            delay between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.DeltaBackoff">
            <summary>
            Gets tThe value that will be used to calculate a random delta in the exponential delay 
            between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.MaxBackoff">
            <summary>
            Gets the maximum backoff time.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.MinBackoff">
            <summary>
            Gets the minimum backoff time.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.RetryCount">
            <summary>
            Gets the maximum number of retry attempts.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy"/> class. 
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy"/> class with the specified name and 
            retry settings.
            </summary>
            <param name="retryCount">The maximum number of retry attempts.</param>
            <param name="minBackoff">The minimum backoff time.</param>
            <param name="maxBackoff">The maximum backoff time.</param>
            <param name="deltaBackoff">The value that will be used to calculate a random delta in the exponential delay 
            between retries.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy"/> class with the specified name and 
            retry settings.
            </summary>
            <param name="name">The name of the retry strategy.</param>
            <param name="retryCount">The maximum number of retry attempts.</param>
            <param name="minBackoff">The minimum backoff time.</param>
            <param name="maxBackoff">The maximum backoff time.</param>
            <param name="deltaBackoff">The value that will be used to calculate a random delta in the exponential delay 
            between retries.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy"/> class with the specified name, 
            retry settings, and fast retry option.
            </summary>
            <param name="retryCount">The maximum number of retry attempts.</param>
            <param name="minBackoff">The minimum backoff time.</param>
            <param name="maxBackoff">The maximum backoff time.</param>
            <param name="deltaBackoff">The value that will be used to calculate a random delta in the exponential delay 
            between retries.</param>
            <param name="firstFastRetry">A value indicating whether the first retry should be attempted immediatly.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy"/> class with the specified name, 
            retry settings, and fast retry option.
            </summary>
            <param name="name">The name of the retry strategy.</param>
            <param name="retryCount">The maximum number of retry attempts.</param>
            <param name="minBackoff">The minimum backoff time.</param>
            <param name="maxBackoff">The maximum backoff time.</param>
            <param name="deltaBackoff">The value that will be used to calculate a random delta in the exponential delay 
            between retries.</param>
            <param name="firstFastRetry">A value indicating whether the first retry should be attempted immediatly.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.ExponentialBackoffRetryStrategy.GetShouldRetryPredicate">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy">
            <summary>
            Defines a retry strategy with a specified number of retry attempts and a default, fixed 
            time interval between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.RetryCount">
            <summary>
            Gets the number of retry attempts.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.RetryInterval">
            <summary>
            Gets the time interval between retries.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/> class.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.#ctor(System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/> class.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="retryInterval">The time interval between retries.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/> class.
            </summary>
            <param name="name">The name of the strategy.</param>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="retryInterval">The time interval between retries.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.#ctor(System.Int32,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/> class.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="retryInterval">The time interval between retries.</param>
            <param name="firstFastRetry">A value indicating whether the first retry should be attempted immediatly.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy"/> class.
            </summary>
            <param name="name">The name of the strategy.</param>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="retryInterval">The time interval between retries.</param>
            <param name="firstFastRetry">A value indicating whether the first retry should be attempted immediatly.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.FixedIntervalRetryStrategy.GetShouldRetryPredicate">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.Strategies.HttpStatusCodeErrorDetectionStrategy">
            <summary>
            Defines a error detection strategy based on the HTTP status code.
            Exceptions will be considered transient if they are or inherit from the
            type <see cref="T:Primavera.Hydrogen.Net.Http.HttpRequestWithStatusCodeException"/> and the HTTP status code is
            one of the following:
            <see cref="F:System.Net.HttpStatusCode.RequestTimeout"/>
            <see cref="F:System.Net.HttpStatusCode.BadGateway"/>
            <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable"/>
            <see cref="F:System.Net.HttpStatusCode.GatewayTimeout"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.HttpStatusCodeErrorDetectionStrategy.IsTransient(System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.Strategies.IgnoreErrorDetectionStrategy">
            <summary>
            Defines a error detection strategy that ignores all errors (considers that none
            are transient).
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.IgnoreErrorDetectionStrategy.IsTransient(System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy">
            <summary>
            Defines a retry strategy with a specified number of retry attempts and an incremental time 
            interval between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.DefaultRetryIncrement">
            <summary>
            Gets the default time increment between retry attempts in the progressive delay policy.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.Increment">
            <summary>
            Gets the incremental time value that will be used to calculate the progressive 
            delay between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.InitialInterval">
            <summary>
            Gets the initial interval that will apply for the first retry.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.RetryCount">
            <summary>
            Gets the number of retry attempts.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy"/> class. 
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.#ctor(System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy"/> class with the specified name and retry settings.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval that will apply for the first retry.</param>
            <param name="increment">The incremental time value that will be used to calculate the progressive 
            delay between retries.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy"/> class with the specified name and retry settings.
            </summary>
            <param name="name">The retry strategy name.</param>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval that will apply for the first retry.</param>
            <param name="increment">The incremental time value that will be used to calculate the progressive 
            delay between retries.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy"/> class with the specified number of retry attempts, 
            time interval, retry strategy, and fast start option. 
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval that will apply for the first retry.</param>
            <param name="increment">The incremental time value that will be used to calculate the progressive delay between 
            retries.</param>
            <param name="firstFastRetry">A value indicating whether the first retry should be attempted immediatly.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.#ctor(System.String,System.Int32,System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy"/> class with the specified number of retry attempts, 
            time interval, retry strategy, and fast start option. 
            </summary>
            <param name="name">The retry strategy name.</param>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval that will apply for the first retry.</param>
            <param name="increment">The incremental time value that will be used to calculate the progressive delay between 
            retries.</param>
            <param name="firstFastRetry">A value indicating whether the first retry should be attempted immediatly.</param>
            <remarks>
            If for example <paramref name="retryCount"/> is 3, the action may be executed up to 4 times in total.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.IncrementalRetryStrategy.GetShouldRetryPredicate">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.Strategies.PredicateErrorDetectionStrategy">
            <summary>
            Defines a error detection strategy that invokes a predicate to detect
            transient conditions.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.PredicateErrorDetectionStrategy.Predicate">
            <summary>
            Gets the predicate that will be used to evaluate exceptions.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.PredicateErrorDetectionStrategy.#ctor(System.Func{System.Exception,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.PredicateErrorDetectionStrategy"/> class.
            </summary>
            <param name="predicate">The predicate that should be used to evaluate exceptions.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.PredicateErrorDetectionStrategy.IsTransient(System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy">
            <summary>
            Defines the base class for a retry strategy that determines the number of
            retry attempts and the interval between retries.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy.DefaultRetryCount">
            <summary>
            Gets the number of retry attempts by default.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy.DefaultRetryInterval">
            <summary>
            Gets the interval between retries by default.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy.DefaultFirstFastRetry">
            <summary>
            Gets a value indicating whether the first retry should be attempted immediatly by default.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy.FastFirstRetry">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy.Name">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy"/> class.
            </summary>
            <param name="name">The strategy name.</param>
            <param name="firstFastRetry">A value indicating whether the first retry should be attempted immediatly.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Policies.Retry.Strategies.RetryStrategy.GetShouldRetryPredicate">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_JustNow">
            <summary>
              Looks up a localized string similar to just now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_Ago">
            <summary>
              Looks up a localized string similar to {0} days ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_Ago_Above20">
            <summary>
              Looks up a localized string similar to {0} days ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_Ago_Dual">
            <summary>
              Looks up a localized string similar to {0} days ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_Ago_Plural">
            <summary>
              Looks up a localized string similar to {0} days ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_Ago_Singular">
            <summary>
              Looks up a localized string similar to {0} day ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_Ago_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} days ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_FromNow">
            <summary>
              Looks up a localized string similar to {0} days from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_FromNow_Dual">
            <summary>
              Looks up a localized string similar to {0} days from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_FromNow_Plural">
            <summary>
              Looks up a localized string similar to {0} days from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_FromNow_Singular">
            <summary>
              Looks up a localized string similar to {0} day from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Day_FromNow_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} days from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_Ago">
            <summary>
              Looks up a localized string similar to {0} hours ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_Ago_Above20">
            <summary>
              Looks up a localized string similar to {0} hours ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_Ago_Dual">
            <summary>
              Looks up a localized string similar to {0} hours ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_Ago_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} hours ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_Ago_Plural">
            <summary>
              Looks up a localized string similar to {0} hours ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_Ago_Singular">
            <summary>
              Looks up a localized string similar to {0} hour ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_Ago_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} hours ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_FromNow">
            <summary>
              Looks up a localized string similar to {0} hours from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_FromNow_Dual">
            <summary>
              Looks up a localized string similar to {0} hours from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_FromNow_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} hours from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_FromNow_Plural">
            <summary>
              Looks up a localized string similar to {0} hours from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_FromNow_Singular">
            <summary>
              Looks up a localized string similar to {0} hour from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Hour_FromNow_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} hours from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_Ago">
            <summary>
              Looks up a localized string similar to {0} minutes ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_Ago_Above20">
            <summary>
              Looks up a localized string similar to {0} minutes ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_Ago_Dual">
            <summary>
              Looks up a localized string similar to {0} minutes ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_Ago_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} minutes ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_Ago_Plural">
            <summary>
              Looks up a localized string similar to {0} minutes ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_Ago_Singular">
            <summary>
              Looks up a localized string similar to {0} minute ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_Ago_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} minutes ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_FromNow">
            <summary>
              Looks up a localized string similar to {0} minutes from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_FromNow_Dual">
            <summary>
              Looks up a localized string similar to {0} minutes from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_FromNow_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} minutes from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_FromNow_Plural">
            <summary>
              Looks up a localized string similar to {0} minutes from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_FromNow_Singular">
            <summary>
              Looks up a localized string similar to {0} minute from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Minute_FromNow_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} minutes from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_Ago">
            <summary>
              Looks up a localized string similar to {0} months ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_Ago_Dual">
            <summary>
              Looks up a localized string similar to {0} months ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_Ago_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} months ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_Ago_Plural">
            <summary>
              Looks up a localized string similar to {0} months ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_Ago_Singular">
            <summary>
              Looks up a localized string similar to {0} month ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_Ago_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} months ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_FromNow">
            <summary>
              Looks up a localized string similar to {0} months from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_FromNow_Dual">
            <summary>
              Looks up a localized string similar to {0} months from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_FromNow_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} months from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_FromNow_Plural">
            <summary>
              Looks up a localized string similar to {0} months from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_FromNow_Singular">
            <summary>
              Looks up a localized string similar to {0} month from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Month_FromNow_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} months from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_Ago">
            <summary>
              Looks up a localized string similar to {0} seconds ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_Ago_Above20">
            <summary>
              Looks up a localized string similar to {0} seconds ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_Ago_Dual">
            <summary>
              Looks up a localized string similar to {0} seconds ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_Ago_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} seconds ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_Ago_Plural">
            <summary>
              Looks up a localized string similar to {0} seconds ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_Ago_Singular">
            <summary>
              Looks up a localized string similar to {0} second ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_Ago_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} seconds ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_FromNow">
            <summary>
              Looks up a localized string similar to {0} seconds from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_FromNow_Dual">
            <summary>
              Looks up a localized string similar to {0} seconds from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_FromNow_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} seconds from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_FromNow_Plural">
            <summary>
              Looks up a localized string similar to {0} seconds from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_FromNow_Singular">
            <summary>
              Looks up a localized string similar to {0} second from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Second_FromNow_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} seconds from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_Ago">
            <summary>
              Looks up a localized string similar to {0} years ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_Ago_Above20">
            <summary>
              Looks up a localized string similar to {0} years ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_Ago_Dual">
            <summary>
              Looks up a localized string similar to {0} years ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_Ago_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} years ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_Ago_Plural">
            <summary>
              Looks up a localized string similar to {0} years ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_Ago_Singular">
            <summary>
              Looks up a localized string similar to {0} year ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_Ago_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} years ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_FromNow">
            <summary>
              Looks up a localized string similar to {0} years from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_FromNow_Dual">
            <summary>
              Looks up a localized string similar to {0} years from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_FromNow_DualTrialQuadral">
            <summary>
              Looks up a localized string similar to {0} years from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_FromNow_Plural">
            <summary>
              Looks up a localized string similar to {0} years from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_FromNow_Singular">
            <summary>
              Looks up a localized string similar to {0} year from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Multiple_Year_FromNow_TrialQuadral">
            <summary>
              Looks up a localized string similar to {0} years from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Never">
            <summary>
              Looks up a localized string similar to never.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Day_Ago">
            <summary>
              Looks up a localized string similar to yesterday.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Day_FromNow">
            <summary>
              Looks up a localized string similar to tomorrow.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Hour_Ago">
            <summary>
              Looks up a localized string similar to an hour ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Hour_FromNow">
            <summary>
              Looks up a localized string similar to an hour from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Minute_Ago">
            <summary>
              Looks up a localized string similar to a minute ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Minute_FromNow">
            <summary>
              Looks up a localized string similar to a minute from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Month_Ago">
            <summary>
              Looks up a localized string similar to one month ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Month_FromNow">
            <summary>
              Looks up a localized string similar to one month from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Second_Ago">
            <summary>
              Looks up a localized string similar to one second ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Second_FromNow">
            <summary>
              Looks up a localized string similar to one second from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Year_Ago">
            <summary>
              Looks up a localized string similar to one year ago.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Date_Single_Year_FromNow">
            <summary>
              Looks up a localized string similar to one year from now.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_EmailAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field is not a valid email address..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_EmailAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) is not a valid email address..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_EmailMessage_Validation_NoBody">
            <summary>
              Looks up a localized string similar to The email message body is required..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_EmailMessage_Validation_NoReceivers">
            <summary>
              Looks up a localized string similar to The email message must have at least one receiver..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_AppIdentityService_OptionsInvalid">
            <summary>
              Looks up a localized string similar to The App Identity service configuration options are invalid..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgCannotBeEmpty">
            <summary>
              Looks up a localized string similar to Argument cannot be empty..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgCannotBeNull">
            <summary>
              Looks up a localized string similar to Argument cannot be null..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgCannotBeNullOrEmpty">
            <summary>
              Looks up a localized string similar to Argument cannot be null or empty..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgContainsInvalidCharacters">
            <summary>
              Looks up a localized string similar to Argument contains invalid characters. Valid characters are: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgDoesNotMatchRegularExpression">
            <summary>
              Looks up a localized string similar to Argument does not match regular expression &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgEqualTo">
            <summary>
              Looks up a localized string similar to Argument cannot be equal to &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgIsNotAssignableFrom">
            <summary>
              Looks up a localized string similar to Argument is not assignable from &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgIsNotInterfaceType">
            <summary>
              Looks up a localized string similar to Argument is not an interface type..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgIsNotValid">
            <summary>
              Looks up a localized string similar to Argument is not valid..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsCannotBeNullOrEmpty">
            <summary>
              Looks up a localized string similar to Argument items cannot be null or empty..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsDontMatchRegularExpression">
            <summary>
              Looks up a localized string similar to Argument items should match regular expression &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsLengthTooLarge">
            <summary>
              Looks up a localized string similar to Argument items cannot have more than {0} characters..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsLengthTooSmall">
            <summary>
              Looks up a localized string similar to Argument items must have at least {0} characters..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsNotAbsoluteUri">
            <summary>
              Looks up a localized string similar to Argument items should be absolute URIs..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsNotValidEmailAddress">
            <summary>
              Looks up a localized string similar to Argument items should be valid email addresses..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsNotValidPhoneNumber">
            <summary>
              Looks up a localized string similar to Argument items should be valid phone numbers..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsNotValidUri">
            <summary>
              Looks up a localized string similar to Argument items should be valid URIs..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsOutOfRange">
            <summary>
              Looks up a localized string similar to Argument items should be in range [{0}...{1}]..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsOutOfRangeGreaterThan">
            <summary>
              Looks up a localized string similar to Argument items should be greater than {0}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsOutOfRangeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Argument items should be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsOutOfRangeLessThan">
            <summary>
              Looks up a localized string similar to Argument items should be less than {0}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgItemsOutOfRangeLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Argument items should be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgLengthTooLarge">
            <summary>
              Looks up a localized string similar to Argument cannot have more than {0} characters..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgLengthTooSmall">
            <summary>
              Looks up a localized string similar to Argument must have at least {0} characters..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgNotAbsoluteUri">
            <summary>
              Looks up a localized string similar to Argument is not an absolute URI..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgNotEqualTo">
            <summary>
              Looks up a localized string similar to Argument is not equal to &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgNotValidEmailAddress">
            <summary>
              Looks up a localized string similar to Argument is not a valid email address..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgNotValidPhoneNumber">
            <summary>
              Looks up a localized string similar to Argument is not a valid phone number..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgNotValidUri">
            <summary>
              Looks up a localized string similar to Argument is not a valid URI..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgOutOfRange">
            <summary>
              Looks up a localized string similar to Argument should be in range [{0}...{1}]..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgOutOfRangeGreaterThan">
            <summary>
              Looks up a localized string similar to Argument should be greater than {0}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgOutOfRangeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Argument should be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgOutOfRangeLessThan">
            <summary>
              Looks up a localized string similar to Argument should be less than {0}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ArgOutOfRangeLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Argument should be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ConfigString_InvalidCastOf">
            <summary>
              Looks up a localized string similar to Invalid cast or explicit conversion of &apos;{0}&apos; to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ConfigString_MissingKey">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; key is missing..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_Decrypt_InvalidInput">
            <summary>
              Looks up a localized string similar to The input text must be encoded in Base64..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_InferredTypesObjectConverter_SerializationNotSupported">
            <summary>
              Looks up a localized string similar to Serialization of object properties is not supported by &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_InvalidCast">
            <summary>
              Looks up a localized string similar to Invalid cast to &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_InvalidFormat">
            <summary>
              Looks up a localized string similar to Value is not in the correct format..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_JsonConverter_UnexpectedToken">
            <summary>
              Looks up a localized string similar to Unexpected token: &apos;{0}&apos;. Expected token: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_JsonElement_UnexpectedValueKind">
            <summary>
              Looks up a localized string similar to JsonElement is of unexpected value kind..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_NetworkTimeClient_OperationFailed">
            <summary>
              Looks up a localized string similar to There was an error while communicating with the time server..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_NetworkTimeClient_OperationTimedout">
            <summary>
              Looks up a localized string similar to There was a timeout while communicating with the time server. Tried {0} time(s)..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_NetworkTimeClient_ServerAddressInvalid">
            <summary>
              Looks up a localized string similar to The time server address could not be resolved..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ObjectGraphMaxValidationDepthExceeded">
            <summary>
              Looks up a localized string similar to The maximum validation depth for validation ({0}) was exceeded..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_OperationTimedout">
            <summary>
              Looks up a localized string similar to The operation timed out..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_Reflection_ObjectTypeNotFound">
            <summary>
              Looks up a localized string similar to Type not found for specified object instance..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_Reflection_TypeFieldNotFound">
            <summary>
              Looks up a localized string similar to Field &apos;{0}&apos; was not found in type &apos;{1}&apos; for the specified binding constraints (&apos;{2}&apos;)..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_Reflection_TypePropertyNotFound">
            <summary>
              Looks up a localized string similar to Property &apos;{0}&apos; was not found in type &apos;{1}&apos; for the specified binding constraints (&apos;{2}&apos;)..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ResourceNotFound">
            <summary>
              Looks up a localized string similar to A resource named &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_SemanticVersion_InvalidValue">
            <summary>
              Looks up a localized string similar to The specified value &apos;{0}&apos; is not a valid semantic version..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ServiceDecoratorAlreadyRegistered">
            <summary>
              Looks up a localized string similar to A decorator has already been registered for service type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ServiceProvider_TypeNotFound">
            <summary>
              Looks up a localized string similar to There is no service of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_ServiceTypeNotRegistered">
            <summary>
              Looks up a localized string similar to The service type &apos;{0}&apos; was not previously registered..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_SmtpClient_CredentialsInvalid">
            <summary>
              Looks up a localized string similar to The SMTP host credentials are invalid..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_SmtpClient_EmailMessageCouldNotSend">
            <summary>
              Looks up a localized string similar to There was an error sending the email message. See the inner exception for more information..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_SmtpClient_HostInvalid">
            <summary>
              Looks up a localized string similar to The SMTP host address is invalid..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_SmtpClient_HostNotSpecified">
            <summary>
              Looks up a localized string similar to The SMTP host was not provided..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_SmtpClient_OptionsInvalid">
            <summary>
              Looks up a localized string similar to The SMTP client configuration options are invalid..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_TaskCannotBeNull">
            <summary>
              Looks up a localized string similar to The specified argument &apos;{0}&apos; cannot be null..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_Exception_TaskMustBeScheduled">
            <summary>
              Looks up a localized string similar to The specified argument &apos;{0}&apos; must return a scheduled task (also known as &quot;hot&quot; task) when invoked..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_GreaterThanAttribute_MinimumNotSet">
            <summary>
              Looks up a localized string similar to The minimum allowed value is required for [GreaterThanAttribute]..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_GreaterThanAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field must be greater than {1}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_GreaterThanAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) must be greater than {2}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_GreaterThanOrEqualToAttribute_MinimumNotSet">
            <summary>
              Looks up a localized string similar to The minimum allowed value is required for [GreaterThanOrEqualToAttribute]..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_GreaterThanOrEqualToAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field must be greater than or equal to {1}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_GreaterThanOrEqualToAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) must be greater than or equal to {2}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_LessThanAttribute_MaximumNotSet">
            <summary>
              Looks up a localized string similar to The maximum allowed value is required for [LessThanAttribute]..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_LessThanAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field must be less than {1}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_LessThanAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) must be less than {2}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_LessThanOrEqualToAttribute_MaximumNotSet">
            <summary>
              Looks up a localized string similar to The maximum allowed value is required for [LessThanOrEqualToAttribute]..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_LessThanOrEqualToAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field must be less than or equal to {1}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_LessThanOrEqualToAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) must be less than or equal to {2}..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_NotEmpty_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field cannot be empty..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_PhoneAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field is not a valid phone number..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_PhoneAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) is not a valid phone number..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_RegularExpressionAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field must match the regular expression &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_RegularExpressionAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) must match the regular expression &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_RequiredAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field is required..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_RequiredAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) is required..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_SmtpHostAddress_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field is not a valid host address..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_TextMaxLengthAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field must be at maximum {1} characters long..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_TextMaxLengthAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) must be at maximum {2} characters long..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_TextMinLengthAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field must be at least {1} characters long..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_TextMinLengthAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) must be at least {2} characters long..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_UriAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field is not a valid URI..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_UriAttribute_ValidationError_Absolute">
            <summary>
              Looks up a localized string similar to The {0} field is not a valid absolute URI..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_UriAttribute_ValidationError_Absolute_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) is not a valid absolute URI..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_UriAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) is not a valid URI..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_ValidCharactersAttribute_ValidationError">
            <summary>
              Looks up a localized string similar to The {0} field contains invalid characters..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Properties.Resources.RES_ValidCharactersAttribute_ValidationError_Index">
            <summary>
              Looks up a localized string similar to The {0} field (index {1}) contains invalid characters..
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Reflection.AssemblyReflector">
            <summary>
            Provides methods to perform reflection on <see cref="T:System.Reflection.Assembly"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyVersion">
            <summary>
            Gets the assembly version.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyFileVersion">
            <summary>
            Gets the assembly file version.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyTitle">
            <summary>
            Gets the assembly title (if defined).
            Null if the <see cref="T:System.Reflection.AssemblyTitleAttribute"/> is not defined for the assembly.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyDescription">
            <summary>
            Gets the assembly description (if defined).
            Null if the <see cref="T:System.Reflection.AssemblyDescriptionAttribute"/> is not defined for the assembly.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyCompany">
            <summary>
            Gets the assembly company (if defined).
            Null if the <see cref="T:System.Reflection.AssemblyCompanyAttribute"/> is not defined for the assembly.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyProduct">
            <summary>
            Gets the assembly product (if defined).
            Null if the <see cref="T:System.Reflection.AssemblyProductAttribute"/> is not defined for the assembly.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyCopyright">
            <summary>
            Gets the assembly copyright (if defined).
            Null if the <see cref="T:System.Reflection.AssemblyCopyrightAttribute"/> is not defined for the assembly.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyTrademark">
            <summary>
            Gets the assembly trademark (if defined).
            Null if the <see cref="T:System.Reflection.AssemblyTrademarkAttribute"/> is not defined for the assembly.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.AssemblyReflector.AssemblyInformationalVersion">
            <summary>
            Gets the assembly informational version (if defined).
            Null if the <see cref="T:System.Reflection.AssemblyInformationalVersionAttribute"/> is not defined for the assembly.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.AssemblyReflector.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Primavera.Hydrogen.Reflection.AssemblyReflector"/> class from being created.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.AssemblyReflector.#ctor(System.Reflection.Assembly)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.AssemblyReflector"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Reflection.MemberInfoReflector">
            <summary>
            Provides methods to perform reflection on <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MemberInfoReflector.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Primavera.Hydrogen.Reflection.MemberInfoReflector"/> class from being created.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MemberInfoReflector.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.MemberInfoReflector"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MemberInfoReflector.HasCustomAttribute``1">
            <summary>
            Determines whether the member is annotated with the specified custom attribute,
            considering inherited attributes.
            </summary>
            <typeparam name="TAttribute">The type of the attribute.</typeparam>
            <returns>
            A value indicating whether the member is annotated with the specified custom attribute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MemberInfoReflector.HasCustomAttribute``1(System.Boolean)">
            <summary>
            Determines whether the member is annotated with the specified custom attribute.
            </summary>
            <typeparam name="TAttribute">The type of the attribute.</typeparam>
            <param name="includeInherited">
            A value indicating whether inherited attributes should be considered.
            </param>
            <returns>
            A value indicating whether the member is annotated with the specified custom attribute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MemberInfoReflector.GetCustomAttributes``1">
            <summary>
            Retrieves the instances of the specified custom attribute that annotatates the member,
            include inherited attributes.
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute.</typeparam>
            <returns>
            A list containing the instances of the specified custom attribute that annotatates the member,
            include inherited attributes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MemberInfoReflector.GetCustomAttributes``1(System.Boolean)">
            <summary>
            Retrieves the instances of the specified custom attribute that annotatates the member.
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute.</typeparam>
            <param name="includeInherited">
            A value indicating whether inherited attributes should be included in the result.
            </param>
            <returns>
            A list containing the instances of the specified custom attribute that annotatates the member.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Reflection.MethodInfoReflector">
            <summary>
            Provides methods to perform reflection on <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MethodInfoReflector.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Primavera.Hydrogen.Reflection.MethodInfoReflector"/> class from being created.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MethodInfoReflector.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.MethodInfoReflector"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MethodInfoReflector.HasCustomAttribute``1">
            <summary>
            Determines whether the method is annotated with the specified custom attribute,
            considering inherited attributes.
            </summary>
            <typeparam name="TAttribute">The type of the attribute.</typeparam>
            <returns>
            A value indicating whether the method is annotated with the specified custom attribute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MethodInfoReflector.HasCustomAttribute``1(System.Boolean)">
            <summary>
            Determines whether the method is annotated with the specified custom attribute.
            </summary>
            <typeparam name="TAttribute">The type of the attribute.</typeparam>
            <param name="includeInherited">
            A value indicating whether inherited attributes should be considered.
            </param>
            <returns>
            A value indicating whether the method is annotated with the specified custom attribute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MethodInfoReflector.GetCustomAttributes``1">
            <summary>
            Retrieves the instances of the specified custom attribute that annotates the method,
            include inherited attributes.
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute.</typeparam>
            <returns>
            A list containing the instances of the specified custom attribute that annotates the method,
            include inherited attributes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.MethodInfoReflector.GetCustomAttributes``1(System.Boolean)">
            <summary>
            Retrieves the instances of the specified custom attribute that annotates the method.
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute.</typeparam>
            <param name="includeInherited">
            A value indicating whether inherited attributes should be included in the result.
            </param>
            <returns>
            A list containing the instances of the specified custom attribute that annotates the method.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Reflection.ObjectReflector">
            <summary>
            Provides methods to perform reflection on <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Primavera.Hydrogen.Reflection.ObjectReflector"/> class from being created.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.ObjectReflector"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetPropertyValue(System.Reflection.PropertyInfo)">
            <summary>
            Gets the value of the specified property.
            </summary>
            <param name="property">The property whose value should be returned.</param>
            <returns>
            The property value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the specified property.
            </summary>
            <param name="name">The property name.</param>
            <returns>The value of the specified property.</returns>
            <remarks>The method considers only the instance properties that are public.</remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetPropertyValue(System.String,System.Boolean)">
            <summary>
            Gets the value of the specified property.
            </summary>
            <param name="name">The property name.</param>
            <param name="includeNonPublic">A value indicating whether non public properties should be included in the search.</param>
            <returns>The value of the specified property.</returns>
            <remarks>This method ignores static properties.</remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetPropertyValue(System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets the value of the specified property.
            </summary>
            <param name="name">The property name.</param>
            <param name="binding">The binding flags.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetFieldValue(System.Reflection.FieldInfo)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <param name="field">The field whose value should be returned.</param>
            <returns>
            The field value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetFieldValue(System.String)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <param name="name">The field name.</param>
            <returns>The value of the specified field.</returns>
            <remarks>The method considers only the instance field that are public.</remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetFieldValue(System.String,System.Boolean)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <param name="name">The field name.</param>
            <param name="includeNonPublic">A value indicating whether non public fields should be included in the search.</param>
            <returns>The value of the specified field.</returns>
            <remarks>This method ignores static fields.</remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetFieldValue(System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <param name="name">The field name.</param>
            <param name="binding">The binding flags.</param>
            <returns>The value of the specified field.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetMethods">
            <summary>
            Gets the methods defined in the object type.
            </summary>
            <returns>The methods defined in the object type.</returns>
            <remarks>
            This method ignores non public methods and static methods.
            Methods automatically generated by the compiler will be ignored.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetMethods(System.Boolean)">
            <summary>
            Gets the methods defined in the object type.
            </summary>
            <param name="includeNonPublic">A value indicating whether non public properties should be included in the search.</param>
            <returns>The methods defined in the object type.</returns>
            <remarks>
            This method ignores static methods.
            Methods automatically generated by the compiler will be ignored.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetMethods(System.Boolean,System.Boolean)">
            <summary>
            Gets the methods defined in the object type.
            </summary>
            <param name="includeNonPublic">A value indicating whether non public properties should be included in the search.</param>
            <param name="includeStatic">A value indicating whether static properties should be included in the search.</param>
            <returns>
            The methods defined in the object type.
            Methods automatically generated by the compiler will be ignored.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.GetMethods(System.Reflection.BindingFlags)">
            <summary>
            Gets the methods defined in the object type.
            </summary>
            <param name="binding">The binding flags.</param>
            <returns>
            The methods defined in the object type.
            Methods automatically generated by the compiler will be ignored.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.IsOfType(System.Type)">
            <summary>
            Verifies whether the instance is of type <paramref name="expectedType"/>.
            </summary>
            <param name="expectedType">The expected type.</param>
            <returns>
            A value indicating whether the instance is of type <paramref name="expectedType"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.IsOfType``1">
            <summary>
            Verifies whether the instance is of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <returns>
            A value indicating whether the instance is of type <typeparamref name="T"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.IsDerivedFrom(System.Type)">
            <summary>
            Verifies whether the instance is of a type derived from <paramref name="expectedType"/>.
            Returns false if the instance is exactly of the specified <paramref name="expectedType"/>.
            </summary>
            <param name="expectedType">The expected type.</param>
            <returns>
            A value indicating whether the instance is of a type derived from <paramref name="expectedType"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ObjectReflector.IsDerivedFrom``1">
            <summary>
            Verifies whether the instance is of a type derived from <typeparamref name="T"/>.
            Returns false if the instance is exactly of the specified <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <returns>
            A value indicating whether the instance is of a type derived from <typeparamref name="T"/>.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Reflection.PropertyInfoReflector">
            <summary>
            Provides methods to perform reflection on <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Reflection.PropertyInfoReflector.HasIndexParameters">
            <summary>
            Gets a value indicating whether the property has index parameters.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.PropertyInfoReflector.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Primavera.Hydrogen.Reflection.PropertyInfoReflector"/> class from being created.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.PropertyInfoReflector.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.PropertyInfoReflector"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.PropertyInfoReflector.HasCustomAttribute``1">
            <summary>
            Determines whether the property is annotated with the specified custom attribute,
            considering inherited attributes.
            </summary>
            <typeparam name="TAttribute">The type of the attribute.</typeparam>
            <returns>
            A value indicating whether the property is annotated with the specified custom attribute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.PropertyInfoReflector.HasCustomAttribute``1(System.Boolean)">
            <summary>
            Determines whether the property is annotated with the specified custom attribute.
            </summary>
            <typeparam name="TAttribute">The type of the attribute.</typeparam>
            <param name="includeInherited">
            A value indicating whether inherited attributes should be considered.
            </param>
            <returns>
            A value indicating whether the property is annotated with the specified custom attribute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.PropertyInfoReflector.GetCustomAttributes``1">
            <summary>
            Retrieves the instances of the specified custom attribute that annotates the property,
            include inherited attributes.
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute.</typeparam>
            <returns>
            A list containing the instances of the specified custom attribute that annotates the property,
            include inherited attributes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.PropertyInfoReflector.GetCustomAttributes``1(System.Boolean)">
            <summary>
            Retrieves the instances of the specified custom attribute that annotates the property.
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute.</typeparam>
            <param name="includeInherited">
            A value indicating whether inherited attributes should be included in the result.
            </param>
            <returns>
            A list containing the instances of the specified custom attribute that annotates the property.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Reflection.ReflectionException">
            <summary>
            Represents errors that can occur in reflection, in the <see cref="N:Primavera.Hydrogen.Reflection"/> namespace types.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.ReflectionException" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.ReflectionException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.ReflectionException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Reflection.ReflectionExtensions">
            <summary>
            Provides extensions methods to perform reflection.
            </summary>
            <example>
            Usage:
            <code>
            <![CDATA[
            target.Reflector().Method(...);
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionExtensions.Reflector(System.Reflection.Assembly)">
            <summary>
            Returns a reflector capable of performing reflection on the target <see cref="T:System.Reflection.Assembly"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>An instance of the reflector.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionExtensions.Reflector(System.Reflection.PropertyInfo)">
            <summary>
            Returns a reflector capable of performing reflection on the target <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>An instance of the reflector.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionExtensions.Reflector(System.Reflection.MemberInfo)">
            <summary>
            Returns a reflector capable of performing reflection on the target <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>An instance of the reflector.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionExtensions.Reflector(System.Reflection.MethodInfo)">
            <summary>
            Returns a reflector capable of performing reflection on the target <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>An instance of the reflector.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionExtensions.Reflector(System.Object)">
            <summary>
            Returns a reflector capable of performing reflection on the target <see cref="T:System.Object"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>An instance of the reflector.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.ReflectionExtensions.Reflector(System.Type)">
            <summary>
            Returns a reflector capable of performing reflection on the target <see cref="T:System.Type"/>.
            </summary>
            <param name="target">The target.</param>
            <returns>An instance of the reflector.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Reflection.TypeReflector">
            <summary>
            Provides methods to perform reflection on <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Primavera.Hydrogen.Reflection.TypeReflector"/> class from being created.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Reflection.TypeReflector"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.CreateInstance">
            <summary>
            Creates a new instance of the type.
            </summary>
            <returns>A new instance of the specified type.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.CreateInstance(System.Boolean)">
            <summary>
            Creates a new instance of the type.
            </summary>
            <param name="nonPublic">A value indicating whether a non public default constructor can be used to create the instance.</param>
            <returns>
            A new instance of the specified type.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.CreateInstance(System.Boolean,System.Object[])">
            <summary>
            Creates a new instance of the type.
            </summary>
            <param name="nonPublic">A value indicating whether a non public default constructor can be used to create the instance.</param>
            <param name="args">
            An array of arguments that match in number, order, and type the parameters of
            the constructor to invoke. If <paramref name="args"/> is an empty array or null, the constructor
            that takes no parameters (the default constructor) is invoked.
            </param>
            <returns>
            A new instance of the specified type.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.CreateInstance(System.Object[])">
            <summary>
            Creates a new instance of the type.
            </summary>
            <param name="args">
            An array of arguments that match in number, order, and type the parameters of
            the constructor to invoke. If <paramref name="args"/> is an empty array or null, the constructor
            that takes no parameters (the default constructor) is invoked.
            </param>
            <returns>A new instance of the specified type.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.CreateInstance``1">
            <summary>
            Creates a new instance of the type.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <returns>A new instance of the specified type.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.CreateInstance``1(System.Boolean)">
            <summary>
            Creates a new instance of the type.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="nonPublic">A value indicating whether a non public default constructor can be used to create the instance.</param>
            <returns>A new instance of the specified type.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.CreateInstance``1(System.Boolean,System.Object[])">
            <summary>
            Creates a new instance of the type.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="nonPublic">A value indicating whether a non public default constructor can be used to create the instance.</param>
            <param name="args">
            An array of arguments that match in number, order, and type the parameters of
            the constructor to invoke. If <paramref name="args"/> is an empty array or null, the constructor
            that takes no parameters (the default constructor) is invoked.
            </param>
            <returns>A new instance of the specified type.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.CreateInstance``1(System.Object[])">
            <summary>
            Creates a new instance of the type.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="args">
            An array of arguments that match in number, order, and type the parameters of
            the constructor to invoke. If <paramref name="args"/> is an empty array or null, the constructor
            that takes no parameters (the default constructor) is invoked.
            </param>
            <returns>A new instance of the specified type.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetProperties">
            <summary>
            Retrieves the properties defined in the type, considering only
            the public instance properties.
            </summary>
            <returns>
            A list containing the properties retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetProperties(System.Boolean)">
            <summary>
            Retrieves the properties defined in the type, considering only
            the instance properties.
            </summary>
            <param name="includeNonPublic">A value indicating whether non public properties should be retrieved.</param>
            <returns>
            A list containing the properties retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetProperties(System.Boolean,System.Boolean)">
            <summary>
            Retrieves the properties defined in the type.
            </summary>
            <param name="includeNonPublic">A value indicating whether non public properties should be retrieved.</param>
            <param name="includeStatic">A value indicating whether static properties should be retrieved.</param>
            <returns>
            A list containing the properties retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetProperties(System.Reflection.BindingFlags)">
            <summary>
            Retrieves the properties defined in the type, using the specified
            binding flags.
            </summary>
            <param name="binding">
            A bit mask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that
            specify how to search for the properties.
            </param>
            <returns>
            A list containing the properties retrieved.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetProperty(System.String)">
            <summary>
            Gets the specified property, considering only
            the public instance properties.
            </summary>
            <param name="name">The name of the property that should be returned.</param>
            <returns>The specified property.</returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetProperty(System.String,System.Boolean)">
            <summary>
            Gets the specified property, considering only
            the instance properties.
            </summary>
            <param name="name">The name of the property that should be returned.</param>
            <param name="includeNonPublic">A value indicating whether non public properties should be included in the search.</param>
            <returns>The specified property.</returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetProperty(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the specified property.
            </summary>
            <param name="name">The name of the property that should be returned.</param>
            <param name="includeNonPublic">A value indicating whether non public properties should be included in the search.</param>
            <param name="includeStatic">A value indicating whether static properties should be included in the search.</param>
            <returns>The specified property.</returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetProperty(System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets the specified property.
            </summary>
            <param name="name">The name of the property that should be returned.</param>
            <param name="binding">The binding flags.</param>
            <returns>The specified property.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the specified instance property, considering only public properties.
            </summary>
            <param name="instance">The instance whose property value will be returned.</param>
            <param name="name">The name of the property whose value will be returned.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetPropertyValue(System.Object,System.String,System.Boolean)">
            <summary>
            Gets the value of the specified instance property.
            </summary>
            <param name="instance">The instance whose property value will be returned.</param>
            <param name="name">The name of the property whose value will be returned.</param>
            <param name="includeNonPublic">A value indicating whether non public properties should be included in the search.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the specified static property, considering only public properties.
            </summary>
            <param name="name">The name of the property whose value will be returned.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetPropertyValue(System.String,System.Boolean)">
            <summary>
            Gets the value of the specified static property.
            </summary>
            <param name="name">The name of the property whose value will be returned.</param>
            <param name="includeNonPublic">A value indicating whether non public properties should be included in the search.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetPropertyValue(System.Object,System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets the value of the specified property.
            </summary>
            <param name="instance">The instance whose property value will be returned.</param>
            <param name="name">The property name.</param>
            <param name="binding">The binding flags.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFields">
            <summary>
            Retrieves the fields defined in the type, considering only
            the public instance fields.
            </summary>
            <returns>
            A list containing the fields retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFields(System.Boolean)">
            <summary>
            Retrieves the fields defined in the type, considering only
            the instance fields.
            </summary>
            <param name="includeNonPublic">A value indicating whether non public fields should be retrieved.</param>
            <returns>
            A list containing the fields retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFields(System.Boolean,System.Boolean)">
            <summary>
            Retrieves the fields defined in the type.
            </summary>
            <param name="includeNonPublic">A value indicating whether non public fields should be retrieved.</param>
            <param name="includeStatic">A value indicating whether static fields should be retrieved.</param>
            <returns>
            A list containing the fields retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFields(System.Reflection.BindingFlags)">
            <summary>
            Retrieves the fields defined in the type, using the specified
            binding flags.
            </summary>
            <param name="binding">
            A bit mask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that
            specify how to search for the fields.
            </param>
            <returns>
            A list containing the fields retrieved.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetField(System.String)">
            <summary>
            Gets the specified field, considering only
            the public instance field.
            </summary>
            <param name="name">The name of the field that should be returned.</param>
            <returns>The specified field.</returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetField(System.String,System.Boolean)">
            <summary>
            Gets the specified field, considering only
            the instance fields.
            </summary>
            <param name="name">The name of the field that should be returned.</param>
            <param name="includeNonPublic">A value indicating whether non public fields should be included in the search.</param>
            <returns>The specified field.</returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetField(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the specified field.
            </summary>
            <param name="name">The name of the field that should be returned.</param>
            <param name="includeNonPublic">A value indicating whether non public fields should be included in the search.</param>
            <param name="includeStatic">A value indicating whether static fields should be included in the search.</param>
            <returns>The specified field.</returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetField(System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets the specified field.
            </summary>
            <param name="name">The name of the field that should be returned.</param>
            <param name="binding">The binding flags.</param>
            <returns>The specified field.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFieldValue(System.Object,System.String)">
            <summary>
            Gets the value of the specified instance field, considering only public fields.
            </summary>
            <param name="instance">The instance whose field value will be returned.</param>
            <param name="name">The name of the field whose value will be returned.</param>
            <returns>The value of the specified field.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFieldValue(System.Object,System.String,System.Boolean)">
            <summary>
            Gets the value of the specified instance field.
            </summary>
            <param name="instance">The instance whose field value will be returned.</param>
            <param name="name">The name of the field whose value will be returned.</param>
            <param name="includeNonPublic">A value indicating whether non public fields should be included in the search.</param>
            <returns>The value of the specified field.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFieldValue(System.String)">
            <summary>
            Gets the value of the specified static field, considering only public fields.
            </summary>
            <param name="name">The name of the field whose value will be returned.</param>
            <returns>The value of the specified field.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFieldValue(System.String,System.Boolean)">
            <summary>
            Gets the value of the specified static field.
            </summary>
            <param name="name">The name of the field whose value will be returned.</param>
            <param name="includeNonPublic">A value indicating whether non public field should be included in the search.</param>
            <returns>The value of the specified field.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetFieldValue(System.Object,System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <param name="instance">The instance whose field value will be returned.</param>
            <param name="name">The field name.</param>
            <param name="binding">The binding flags.</param>
            <returns>The value of the specified field.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.HasCustomAttribute``1">
            <summary>
            Determines whether the type is annotated with the specified custom attribute,
            considering inherited attributes.
            </summary>
            <typeparam name="TAttribute">The type of the attribute.</typeparam>
            <returns>
            A value indicating whether the type is annotated with the specified custom attribute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.HasCustomAttribute``1(System.Boolean)">
            <summary>
            Determines whether the type is annotated with the specified custom attribute.
            </summary>
            <typeparam name="TAttribute">The type of the attribute.</typeparam>
            <param name="includeInherited">
            A value indicating whether inherited attributes should be considered.
            </param>
            <returns>
            A value indicating whether the type is annotated with the specified custom attribute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetCustomAttributes``1">
            <summary>
            Retrieves the instances of the specified custom attribute that annotates the type,
            include inherited attributes.
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute.</typeparam>
            <returns>
            A list containing the instances of the specified custom attribute that annotates the type,
            include inherited attributes.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetCustomAttributes``1(System.Boolean)">
            <summary>
            Retrieves the instances of the specified custom attribute that annotates the type.
            </summary>
            <typeparam name="TAttribute">The type of the custom attribute.</typeparam>
            <param name="includeInherited">
            A value indicating whether inherited attributes should be included in the result.
            </param>
            <returns>
            A list containing the instances of the specified custom attribute that annotates the type.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetMethods">
            <summary>
            Retrieves the methods defined in the type, considering only
            the public instance methods.
            </summary>
            <returns>
            A list containing the methods retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            Methods automatically generated by the compiler will be ignored.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetMethods(System.Boolean)">
            <summary>
            Retrieves the methods defined in the type, considering only
            the instance methods.
            </summary>
            <param name="includeNonPublic">A value indicating whether non public methods should be retrieved.</param>
            <returns>
            A list containing the methods retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            Methods automatically generated by the compiler will be ignored.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetMethods(System.Boolean,System.Boolean)">
            <summary>
            Retrieves the methods defined in the type.
            </summary>
            <param name="includeNonPublic">A value indicating whether non public methods should be retrieved.</param>
            <param name="includeStatic">A value indicating whether static methods should be retrieved.</param>
            <returns>
            A list containing the methods retrieved.
            </returns>
            <remarks>
            Default binding flags are: <see cref="F:System.Reflection.BindingFlags.Public"/> and <see cref="F:System.Reflection.BindingFlags.Instance"/>.
            Methods automatically generated by the compiler will be ignored.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.GetMethods(System.Reflection.BindingFlags)">
            <summary>
            Retrieves the methods defined in the type, using the specified
            binding flags.
            </summary>
            <param name="binding">
            A bit mask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that
            specify how to search for the methods.
            </param>
            <returns>
            A list containing the methods retrieved.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.IsDerivedFrom(System.Type)">
            <summary>
            Verifies whether the type derives from the specified <paramref name="expectedType"/>.
            Returns false if the type is exactly the specified <paramref name="expectedType"/>.
            </summary>
            <param name="expectedType">The expected type.</param>
            <returns>
            A value indicating whether the type derives from the specified <paramref name="expectedType"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.IsDerivedFrom``1">
            <summary>
            Verifies whether the type derives from the specified <typeparamref name="T"/>.
            Returns false if the type is exactly the specified <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <returns>
            A value indicating whether the type derives from the specified <typeparamref name="T"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.Implements(System.Type)">
            <summary>
            Determines whether the type implements the specified interface.
            This will return true either if the type implements the interface or inherits it.
            </summary>
            <param name="interfaceType">The type of the interface.</param>
            <returns>A value indicating whether the type implements the specified interface.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Reflection.TypeReflector.Implements``1">
            <summary>
            Determines whether the type implements the specified interface.
            </summary>
            <typeparam name="TInterface">The type of the interface.</typeparam>
            <returns>A value indicating whether the type implements the specified interface.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Security.Cryptography.ComputeHash">
            <summary>
            Provides methods to compute hash values.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHash.Sha256(System.Byte[])">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.SHA256"/> hash for the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.SHA256"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHash.Sha256(System.String)">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.SHA256"/> hash for the specified input.
            </summary>
            <param name="text">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.SHA256"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHash.Sha512(System.Byte[])">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.SHA512"/> hash for the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.SHA512"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHash.Sha512(System.String)">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.SHA512"/> hash for the specified input.
            </summary>
            <param name="text">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.SHA512"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHash.HmacSha256(System.Byte[],System.Byte[])">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the specified input.
            </summary>
            <param name="key">The key that should be used.</param>
            <param name="input">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHash.HmacSha256(System.String,System.Byte[])">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the specified input.
            </summary>
            <param name="key">The key that should be used.</param>
            <param name="input">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHash.HmacSha256(System.Byte[],System.String)">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the specified input.
            </summary>
            <param name="key">The key that should be used.</param>
            <param name="text">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHash.HmacSha256(System.String,System.String)">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the specified input.
            </summary>
            <param name="key">The key that should be used.</param>
            <param name="text">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the specified input.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Security.Cryptography.ComputeHashString">
            <summary>
            Provides methods to compute hash strings.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHashString.Sha256(System.Byte[])">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.SHA256"/> hash string for the specified input.
            The hash string is Base64 encoded.
            </summary>
            <param name="input">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.SHA256"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHashString.Sha256(System.String)">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.SHA256"/> hash for the specified input.
            </summary>
            <param name="text">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.SHA256"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHashString.Sha512(System.Byte[])">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.SHA512"/> hash for the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.SHA512"/> hash for the specified input.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.ComputeHashString.Sha512(System.String)">
            <summary>
            Returns the <see cref="T:System.Security.Cryptography.SHA512"/> hash for the specified input.
            </summary>
            <param name="text">The input.</param>
            <returns>
            The <see cref="T:System.Security.Cryptography.SHA512"/> hash for the specified input.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.AesCipher">
            <summary>
            Allows encrypting and decrypting text based on a shared key, using the AES algorithm.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.AesCipher.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.AesCipher"/> class.
            </summary>
            <param name="salt">The salt used to derive the key.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.AesCipher.#ctor(System.String,Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.AesCipher"/> class.
            </summary>
            <param name="salt">The salt used to derive the key.</param>
            <param name="keyDerivation">The key derivation algorithm that should be used.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.AesCipher.CreateAlgorithm">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation">
            <summary>
            Defines the key derivation used in a <see cref="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher"/>.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation.None">
            <summary>
            No key derivation.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation.Sha256">
            <summary>
            SHA256 key derivation.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation.Sha512">
            <summary>
            SHA512 key derivation.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation.Rfc2898">
            <summary>
            RFC2898 key derivation.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.RijndaelCipher">
            <summary>
            Allows encrypting and decrypting text based on a shared key, using the Rijndael algorithm.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.RijndaelCipher.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.RijndaelCipher"/> class.
            </summary>
            <param name="salt">The salt used to derive the key.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.RijndaelCipher.#ctor(System.String,Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.RijndaelCipher"/> class.
            </summary>
            <param name="salt">The salt used to derive the key.</param>
            <param name="keyDerivation">The key derivation algorithm that should be used.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.RijndaelCipher.CreateAlgorithm">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher">
            <summary>
            Defines the base class for ciphers that use symmetric algorithms.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.KeyDerivation">
            <summary>
            Gets the key derivation that should be used.
            The default value is <see cref="F:Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation.Sha256"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.Salt">
            <summary>
            Gets the salt.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.Algorithm">
            <summary>
            Gets the algorithm.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher"/> class.
            </summary>
            <param name="salt">The salt used to derive the key.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.#ctor(System.String,Primavera.Hydrogen.Security.Cryptography.Symmetric.KeyDerivation)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher"/> class.
            </summary>
            <param name="salt">The salt used to derive the key.</param>
            <param name="keyDerivation">The key derivation algorithm that should be used.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.Encrypt(System.String)">
            <summary>
            Encrypts the specified text using the specified salt.
            </summary>
            <param name="text">The text that should be encrypted.</param>
            <returns>
            The encrypted text as a Base64 string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.EncryptAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Encrypts the specified text using the specified salt.
            </summary>
            <param name="text">The text that should be encrypted.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The encrypted text as a Base64 string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.Decrypt(System.String)">
            <summary>
            Decrypts the specified text using the specified salt.
            </summary>
            <param name="cipherText">The text that should be decrypted (a Base64 string).</param>
            <returns>
            The decrypted text.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.DecryptAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Decrypts the specified text using the specified salt.
            </summary>
            <param name="cipherText">The text that should be decrypted (a Base64 string).</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The decrypted text.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.CreateAlgorithm">
            <summary>
            Create the instance algorithm.
            </summary>
            <returns>
            The algorithm instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.SetAlgorithmKey(System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
            Sets the specified algorithm key and IV.
            </summary>
            <param name="algorithm">The algorithm.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Security.Cryptography.Symmetric.SymmetricCipher.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>True</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.SmartGuard">
            <summary>
            Provides methods to validate method arguments.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.SmartGuard.Extensions">
            <summary>
            Gets additional validation methods, provided as extensions.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNull``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Ensures the given <paramref name="value"/> is not null, otherwise throws <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <typeparam name="T">The type of the value to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNull``1(System.Linq.Expressions.Expression{System.Func{``0}},``0,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is not null, otherwise throws <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <typeparam name="T">The type of the value to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNullOrEmpty(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is not null or empty.
            Throws <see cref="T:System.ArgumentNullException"/> if the value is null.
            Throws <see cref="T:System.ArgumentException"/> if the value is empty.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNullOrEmpty(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is not null or empty.
            Throws <see cref="T:System.ArgumentNullException"/> if the value is null.
            Throws <see cref="T:System.ArgumentException"/> if the value is empty.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNullOrEmpty(System.Linq.Expressions.Expression{System.Func{System.Object[]}},System.Object[])">
            <summary>
            Ensures the given array <paramref name="value"/> is not null or empty. Throws <see cref="T:System.ArgumentNullException"/>
            in the first case, or <see cref="T:System.ArgumentException"/> in the latter.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNullOrEmpty(System.Linq.Expressions.Expression{System.Func{System.Object[]}},System.Object[],System.String)">
            <summary>
            Ensures the given array <paramref name="value"/> is not null or empty. Throws <see cref="T:System.ArgumentNullException"/>
            in the first case, or <see cref="T:System.ArgumentException"/> in the latter.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNullOrEmpty(System.Linq.Expressions.Expression{System.Func{System.Collections.IEnumerable}},System.Collections.IEnumerable)">
            <summary>
            Ensures the given <see cref="T:System.Collections.IEnumerable"/> <paramref name="value"/> is not null or empty. Throws <see cref="T:System.ArgumentNullException"/>
            in the first case, or <see cref="T:System.ArgumentException"/> in the latter.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNullOrEmpty(System.Linq.Expressions.Expression{System.Func{System.Collections.IEnumerable}},System.Collections.IEnumerable,System.String)">
            <summary>
            Ensures the given <see cref="T:System.Collections.IEnumerable"/> <paramref name="value"/> is not null or empty. Throws <see cref="T:System.ArgumentNullException"/>
            in the first case, or <see cref="T:System.ArgumentException"/> in the latter.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNullOrWhiteSpace(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is not null, empty or white space.
            Throws <see cref="T:System.ArgumentNullException"/> if the value is null.
            Throws <see cref="T:System.ArgumentException"/> if the value is either empty or whitespace.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotNullOrWhiteSpace(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is not null, empty or white space.
            Throws <see cref="T:System.ArgumentNullException"/> if the value is null.
            Throws <see cref="T:System.ArgumentException"/> if the value is either empty or whitespace.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsNotNullOrWhiteSpace(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are not null, empty or white space.
            Throws <see cref="T:System.ArgumentNullException"/> if any item value is null.
            Throws <see cref="T:System.ArgumentException"/> if any item is empty or whitespace.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsNotNullOrWhiteSpace(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are not null, empty or white space.
            Throws <see cref="T:System.ArgumentNullException"/> if any item value is null.
            Throws <see cref="T:System.ArgumentException"/> if any item is empty or whitespace.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsNotNullOrWhiteSpace(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are not null, empty or white space.
            Throws <see cref="T:System.ArgumentNullException"/> if any item value is null.
            Throws <see cref="T:System.ArgumentException"/> if any item is empty or whitespace.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsNotNullOrWhiteSpace(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are not null, empty or white space.
            Throws <see cref="T:System.ArgumentNullException"/> if any item value is null.
            Throws <see cref="T:System.ArgumentException"/> if any item is empty or whitespace.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotEmpty(System.Linq.Expressions.Expression{System.Func{System.Guid}},System.Guid)">
            <summary>
            Ensures the given <paramref name="value"/> is not equal a <see cref="F:System.Guid.Empty"/>,
            otherwise throws <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotEmpty(System.Linq.Expressions.Expression{System.Func{System.Guid}},System.Guid,System.String)">
            <summary>
            Ensures the given <paramref name="value" /> is not equal a <see cref="F:System.Guid.Empty" />,
            otherwise throws <see cref="T:System.ArgumentException" />.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.EqualTo(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String,System.StringComparison)">
            <summary>
            Ensures the given <paramref name="value"/> is equal to <paramref name="expected"/>,
            otherwise throws <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="expected">The expected value.</param>
            <param name="comparisonType">The comparison type that should be applied.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.EqualTo(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String,System.StringComparison,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is equal to <paramref name="expected"/>,
            otherwise throws <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="expected">The expected value.</param>
            <param name="comparisonType">The comparison type that should be applied.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotEqualTo(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String,System.StringComparison)">
            <summary>
            Ensures the given <paramref name="value"/> is not equal to <paramref name="expected"/>,
            otherwise throws <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="expected">The expected value.</param>
            <param name="comparisonType">The comparison type that should be applied.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.NotEqualTo(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String,System.StringComparison,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is not equal to <paramref name="expected"/>,
            otherwise throws <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="expected">The expected value.</param>
            <param name="comparisonType">The comparison type that should be applied.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Check``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean,System.String)">
            <summary>
            Checks whether the specified <paramref name="condition"/> is true and throws
            <see cref="T:System.ArgumentException"/> if it is not.
            </summary>
            <typeparam name="T">The type of the value to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="condition">The condition that should be true.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Check``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean,System.String,System.Object[])">
            <summary>
            Checks whether the specified <paramref name="condition"/> is true and throws
            <see cref="T:System.ArgumentException"/> if it is not.
            </summary>
            <typeparam name="T">The type of the value to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="condition">The condition that should be true.</param>
            <param name="format">The error message format.</param>
            <param name="args">The formatting arguments.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Check``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Func{System.Boolean},System.String)">
            <summary>
            Performs the validation implemented by the <paramref name="checker"/> function and throws
            <see cref="T:System.ArgumentException"/> if that function returns false.
            </summary>
            <typeparam name="T">The type of the value to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="checker">The function that performs the validation.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Check``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Func{System.Boolean},System.String,System.Object[])">
            <summary>
            Performs the validation implemented by the <paramref name="checker"/> function and throws
            <see cref="T:System.ArgumentException"/> if that function returns false.
            </summary>
            <typeparam name="T">The type of the value to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="checker">The function that performs the validation.</param>
            <param name="format">The error message format.</param>
            <param name="args">The formatting arguments.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ValidCharacters(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given string <paramref name="value" /> contains only the specified valid characters.
            Throws <see cref="T:System.ArgumentException" /> if the value contains invalid characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="validCharacters">A <see cref="T:System.String"/> containing the valid characters.</param>
            <remarks>
            Validation of the value is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ValidCharacters(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String,System.String)">
            <summary>
            Ensures the given string <paramref name="value" /> contains only the specified valid characters.
            Throws <see cref="T:System.ArgumentException" /> if the value contains invalid characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="validCharacters">A <see cref="T:System.String"/> containing the valid characters.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the value is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.ValidCharactersAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsValid``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Ensures the given object <paramref name="value"/> is valid and throws
            <see cref="T:System.ArgumentException"/> if it is not.
            </summary>
            <typeparam name="T">The type of the object to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The object to be validated.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsValid``1(System.Linq.Expressions.Expression{System.Func{``0}},``0,System.String)">
            <summary>
            Ensures the given object <paramref name="value"/> is valid and throws
            <see cref="T:System.ArgumentException"/> if it is not.
            </summary>
            <typeparam name="T">The type of the object to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The object to be validated.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsValid``1(System.Linq.Expressions.Expression{System.Func{``0}},``0,System.Int32,System.Boolean)">
            <summary>
            Ensures the given object <paramref name="value"/> is valid and throws
            <see cref="T:System.ArgumentException"/> if it is not.
            </summary>
            <typeparam name="T">The type of the object to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The object to be validated.</param>
            <param name="maxValidationDepth">
            The maximum validation depth to constrain the maximum number
            of objects that can be validated when the object graph is very complex.
            </param>
            <param name="throwOnMaxValidationDepth">
            A value indicating whether an exception should be thrown
            when <paramref name="maxValidationDepth"/> is exceeded.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsValid``1(System.Linq.Expressions.Expression{System.Func{``0}},``0,System.String,System.Int32,System.Boolean)">
            <summary>
            Ensures the given object <paramref name="value" /> is valid and throws
            <see cref="T:System.ArgumentException" /> if it is not.
            </summary>
            <typeparam name="T">The type of the object to be validated.</typeparam>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The object to be validated.</param>
            <param name="message">The error message.</param>
            <param name="maxValidationDepth">
            The maximum validation depth to constrain the maximum number
            of objects that can be validated when the object graph is very complex.
            </param>
            <param name="throwOnMaxValidationDepth">
            A value indicating whether an exception should be thrown
            when <paramref name="maxValidationDepth"/> is exceeded.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsEmail(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid email address.
            Throws <see cref="T:System.ArgumentException"/> it is not a valid email address.
            Throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsEmail(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid email address.
            Throws <see cref="T:System.ArgumentException"/> it is not a valid email address.
            Throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsEmail(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Boolean)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid email address.
            Throws <see cref="T:System.ArgumentException"/> it is not a valid email address.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/>
            if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether <paramref name="required"/> is required to
            be not null.
            </param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsEmail(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Boolean,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid email address.
            Throws <see cref="T:System.ArgumentException"/> it is not a valid email address.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/>
            if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether <paramref name="required"/> is required to
            be not null.
            </param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Email(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid email address.
            Throws <see cref="T:System.ArgumentException"/> it is not a valid email address.
            Throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Email(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid email address.
            Throws <see cref="T:System.ArgumentException"/> it is not a valid email address.
            Throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Email(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Boolean)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid email address.
            Throws <see cref="T:System.ArgumentException"/> it is not a valid email address.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/>
            if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether <paramref name="required"/> is required to
            be not null.
            </param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Email(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Boolean,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid email address.
            Throws <see cref="T:System.ArgumentException"/> it is not a valid email address.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/>
            if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether <paramref name="required"/> is required to
            be not null.
            </param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsEmail(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are valid email addresses.
            Throws <see cref="T:System.ArgumentException"/> it any item is not.
            Throws <see cref="T:System.ArgumentNullException"/> if any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsEmail(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid email addresses.
            Throws <see cref="T:System.ArgumentException"/> it any item is not.
            Throws <see cref="T:System.ArgumentNullException"/> if any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsEmail(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid email addresses.
            Throws <see cref="T:System.ArgumentException"/> it any item is not.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if
            any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether the items in <paramref name="value"/> are
            required to be not null.
            </param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsEmail(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid email addresses.
            Throws <see cref="T:System.ArgumentException"/> it any item is not.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if
            any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether the items in <paramref name="value"/> are
            required to be not null.
            </param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsEmail(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are valid email addresses.
            Throws <see cref="T:System.ArgumentException"/> it any item is not.
            Throws <see cref="T:System.ArgumentNullException"/> if any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsEmail(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid email addresses.
            Throws <see cref="T:System.ArgumentException"/> it any item is not.
            Throws <see cref="T:System.ArgumentNullException"/> if any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsEmail(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid email addresses.
            Throws <see cref="T:System.ArgumentException"/> it any item is not.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if
            any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether the items in <paramref name="value"/> are
            required to be not null.
            </param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsEmail(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid email addresses.
            Throws <see cref="T:System.ArgumentException"/> it any item is not.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if
            any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether the items in <paramref name="value"/> are
            required to be not null.
            </param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the email address is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater than <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.GreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is greater or equal to <paramref name="minValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> should be greater or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThan(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is less or equal to <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.LessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is less than <paramref name="maxValue"/>
            otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Int32}},System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int32}}},System.Nullable{System.Int32},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Int64}},System.Int64,System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Int64}}},System.Nullable{System.Int64},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Double}},System.Double,System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.Double}}},System.Nullable{System.Double},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.TimeSpan}},System.TimeSpan,System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.InRange(System.Linq.Expressions.Expression{System.Func{System.Nullable{System.TimeSpan}}},System.Nullable{System.TimeSpan},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int32}}},System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Int64}}},System.Collections.Generic.IEnumerable{System.Int64},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Double}}},System.Collections.Generic.IEnumerable{System.Double},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.TimeSpan}}},System.Collections.Generic.IEnumerable{System.TimeSpan},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsGreaterThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are greater than or equal to <paramref name="minValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minValue">The value that <paramref name="value"/> items should be greater than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThan(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsLessThanOrEqualTo(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are less than or equal to <paramref name="maxValue"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="maxValue">The value that <paramref name="value"/> should be less than or equal to.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int32}}},System.Collections.Generic.IDictionary{System.String,System.Int32},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int32}},System.Int32,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>, otherwise throws <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Int64}}},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64,System.Int64)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Int64}},System.Int64,System.Int64,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Double}}},System.Collections.Generic.IDictionary{System.String,System.Double},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double,System.Double)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.Double}},System.Double,System.Double,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.TimeSpan}}},System.Collections.Generic.IDictionary{System.String,System.TimeSpan},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan,System.TimeSpan)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsInRange(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}}}},System.Collections.Generic.IDictionary{System.String,System.Nullable{System.TimeSpan}},System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are in the range specified by <paramref name="minInclusive"/>
            and <paramref name="maxInclusive"/>.
            Throws <see cref="T:System.ArgumentOutOfRangeException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="minInclusive">The minimum allowed value (inclusive).</param>
            <param name="maxInclusive">The maximum allowed value (inclusive).</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid phone number.
            Throws <see cref="T:System.ArgumentException"/> is it is not a valid phone number.
            Throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid phone number.
            Throws <see cref="T:System.ArgumentException"/> is it is not a valid phone number.
            Throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Boolean)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid phone number.
            Throws <see cref="T:System.ArgumentException"/> is it is not a valid phone number.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether <paramref name="required"/> is required to
            be not null.
            </param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Boolean,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid phone number.
            Throws <see cref="T:System.ArgumentException"/> is it is not a valid phone number.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether <paramref name="required"/> is required to
            be not null.
            </param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.PhoneNumber(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid phone number.
            Throws <see cref="T:System.ArgumentException"/> is it is not a valid phone number.
            Throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.PhoneNumber(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid phone number.
            Throws <see cref="T:System.ArgumentException"/> is it is not a valid phone number.
            Throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.PhoneNumber(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Boolean)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid phone number.
            Throws <see cref="T:System.ArgumentException"/> is it is not a valid phone number.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether <paramref name="required"/> is required to
            be not null.
            </param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.PhoneNumber(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Boolean,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid phone number.
            Throws <see cref="T:System.ArgumentException"/> is it is not a valid phone number.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if it is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether <paramref name="required"/> is required to
            be not null.
            </param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are valid phone numbers.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            Throws <see cref="T:System.ArgumentNullException"/> if any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid phone numbers.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            Throws <see cref="T:System.ArgumentNullException"/> if any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid phone numbers.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if
            any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether the items in <paramref name="value"/> are
            required to be not null.
            </param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid phone numbers.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if
            any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether the items in <paramref name="value"/> are
            required to be not null.
            </param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are valid phone numbers.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            Throws <see cref="T:System.ArgumentNullException"/> if any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid phone numbers.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            Throws <see cref="T:System.ArgumentNullException"/> if any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid phone numbers.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if
            any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether the items in <paramref name="value"/> are
            required to be not null.
            </param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsPhoneNumber(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are valid phone numbers.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            If <paramref name="required"/> is true, throws <see cref="T:System.ArgumentNullException"/> if
            any item is null.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="required">A value indicating whether the items in <paramref name="value"/> are
            required to be not null.
            </param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the phone number is performed with <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.MinLength(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> has at least <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if the value has less characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.MinLength(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> has at least <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if the value has less characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.MaxLength(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> has no more than <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if the value has excess characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The maximum length.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.MaxLength(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> has no more than <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if the value has excess characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The maximum length.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.RegularExpression(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value" /> matches the specified regular expression.
            Throws <see cref="T:System.ArgumentException" /> if the value does not match the regular expression.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="regularExpression">The regular expression that should be used to check the value.</param>
            <remarks>
            Validation of the value is performed with <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.RegularExpression(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value" /> matches the specified regular expression.
            Throws <see cref="T:System.ArgumentException" /> if the value does not match the regular expression.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="regularExpression">The regular expression that should be used to check the value.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the value is performed with <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsMinLength(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items have at least <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if any item has less characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsMinLength(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items have at least <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if any item has less characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsMaxLength(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items have no more than <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if any item has excess characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsMaxLength(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items have no more than <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if any item has excess characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsRegularExpression(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value" /> items match the specified regular expression.
            Throws <see cref="T:System.ArgumentException" /> if any item does not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="regularExpression">The regular expression that should be used to check the value.</param>
            <remarks>
            Validation of the value is performed with <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsRegularExpression(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value" /> items match the specified regular expression.
            Throws <see cref="T:System.ArgumentException" /> if any item does not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="regularExpression">The regular expression that should be used to check the value.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the value is performed with <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsMinLength(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items have at least <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if any item has less characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsMinLength(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items have at least <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if any item has less characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsMaxLength(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            Ensures the given <paramref name="value"/> items have no more than <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if any item has excess characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsMaxLength(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.Int32,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items have no more than <paramref name="length"/>
            characters.
            Throws <see cref="T:System.ArgumentException"/> if any item has excess characters.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="length">The minimum length.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsRegularExpression(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value" /> items match the specified regular expression.
            Throws <see cref="T:System.ArgumentException" /> if any item does not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="regularExpression">The regular expression that should be used to check the value.</param>
            <remarks>
            Validation of the value is performed with <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsRegularExpression(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value" /> items match the specified regular expression.
            Throws <see cref="T:System.ArgumentException" /> if any item does not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="regularExpression">The regular expression that should be used to check the value.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the value is performed with <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsUrl(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid URL address.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not a valid URL address.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <remarks>
            Validation of the URL is performed with <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsUrl(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is a valid URL address.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not a valid URL address.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
            <remarks>
            Validation of the URL is performed with <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsUri(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an URI (absolute or relative).
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsUri(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an URI (absolute or relative).
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Uri}},System.Uri)">
            <summary>
            Ensures the given <paramref name="value"/> is an absolute URI.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an absolute URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Uri}},System.Uri,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an absolute URI.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an absolute URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an absolute URI.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an absolute URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.IsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an absolute URI.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an absolute URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Uri(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an URI (absolute or relative).
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.Uri(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an URI (absolute or relative).
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.UriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Uri}},System.Uri)">
            <summary>
            Ensures the given <paramref name="value"/> is an absolute URI.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an absolute URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.UriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Uri}},System.Uri,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an absolute URI.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an absolute URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.UriAbsolute(System.Linq.Expressions.Expression{System.Func{System.String}},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an absolute URI.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an absolute URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.UriAbsolute(System.Linq.Expressions.Expression{System.Func{System.String}},System.String,System.String)">
            <summary>
            Ensures the given <paramref name="value"/> is an absolute URI.
            Throws <see cref="T:System.ArgumentNullException"/> if <paramref name="value"/> is null,
            or <see cref="T:System.ArgumentException"/> if it is not an absolute URI.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUri(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are URIs (absolute or relative).
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUri(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are URIs (absolute or relative).
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Uri}}},System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Ensures the given <paramref name="value"/> items are absolute URIs.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.Uri}}},System.Collections.Generic.IEnumerable{System.Uri},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are absolute URIs.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are absolute URIs.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are absolute URIs.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUri(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are URIs (absolute or relative).
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUri(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are URIs (absolute or relative).
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Uri}}},System.Collections.Generic.IDictionary{System.String,System.Uri})">
            <summary>
            Ensures the given <paramref name="value"/> items are absolute URIs.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.Uri}}},System.Collections.Generic.IDictionary{System.String,System.Uri},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are absolute URIs.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Ensures the given <paramref name="value"/> items are absolute URIs.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuard.ItemsUriAbsolute(System.Linq.Expressions.Expression{System.Func{System.Collections.Generic.IDictionary{System.String,System.String}}},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Ensures the given <paramref name="value"/> items are absolute URIs.
            Throws <see cref="T:System.ArgumentException"/> if any item is not.
            </summary>
            <param name="reference">The expression used to extract the name of the parameter.</param>
            <param name="value">The value to check.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Primavera.Hydrogen.SmartGuardExtension">
            <summary>
            Provides an extension point for the <see cref="T:Primavera.Hydrogen.SmartGuard"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuardExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.SmartGuardExtension"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.SmartGuid">
            <summary>
            Provides helper methods to manipulate <see cref="T:System.Guid"/> instances.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuid.NewSequentialGuid">
            <summary>
            Initializes a new instance of the <see cref="T:System.Guid"/> structure that is guaranteed to
            be sequential.
            </summary>
            <returns>
            The new <see cref="T:System.Guid"/> instance.
            </returns>
            <remarks>
            If for some reason an error is raised while generating the sequential identifier, then
            the result will be a 'normal' identifier, generated with <see cref="M:System.Guid.NewGuid"/>.
            A sequential <see cref="T:System.Guid"/> is such that if you call <see cref="M:Primavera.Hydrogen.SmartGuid.NewSequentialGuid"/>
            twice, the second one generated will be greater than the first one.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.SmartGuid.NewDeterministicGuid(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Guid"/> structure based
            on the specified seed.
            </summary>
            <param name="seed">The seed that should be used to generate the identifier.</param>
            <returns>
            The new <see cref="T:System.Guid"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.StringExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.String"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Transform(System.String)">
            <summary>
            Returns a transformer capable of performing transformations on the target <see cref="T:System.String"/> value.
            </summary>
            <param name="target">The target <see cref="T:System.String"/>.</param>
            <returns>
            An instance of the transformer.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.EqualsNoCase(System.String,System.String)">
            <summary>
            Determines whether the current string and the specified <paramref name="value"/> are
            equal without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <returns>
            A value indicating whether the current string and the specified <paramref name="value"/> are
            equal without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.EqualsAny(System.String,System.Collections.Generic.IEnumerable{System.String},System.StringComparison)">
            <summary>
            Determines whether the current string is equal to any of the specified <paramref name="values"/>.
            </summary>
            <param name="text">The string.</param>
            <param name="values">The values to which the string should be compared.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            A value indicating whether the current string is equal to any of the specified <paramref name="values"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.EqualsAnyNoCase(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Determines whether the current string is equal to any of the specified <paramref name="values"/>
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="values">The values to which the string should be compared.</param>
            <returns>
            A value indicating whether the current string is equal to any of the specified <paramref name="values"/>
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Like(System.String,System.String)">
            <summary>
            Returns a value indicating whether the current string matches the specified pattern.
            </summary>
            <param name="text">The string.</param>
            <param name="pattern">
            The pattern to compare against. "*" means any sequence of characters, and "?" means any single character.
            </param>
            <returns>
            A value indicating whether the current string matches the specified pattern.
            </returns>
            <remarks>
            This method supports glob pattern matching.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.LikeNoCase(System.String,System.String)">
            <summary>
            Returns a value indicating whether the current string matches the specified pattern without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="pattern">
            The pattern to compare against. "*" means any sequence of characters, and "?" means any single character.
            </param>
            <returns>
            A value indicating whether the current string matches the specified pattern without considering case.
            </returns>
            <remarks>
            This method supports glob pattern matching.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.LikeAny(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Determines whether the current string matches any of the patterns specified in <paramref name="patterns"/>.
            </summary>
            <param name="text">The string.</param>
            <param name="patterns">
            The patterns to which the string should be compared.
            "*" means any sequence of characters, and "?" means any single character.
            </param>
            <returns>
            A value indicating whether the current string matches any of the patterns specified in <paramref name="patterns"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.LikeAnyNoCase(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Determines whether the current string matches any of the patterns specified in <paramref name="patterns"/>
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="patterns">
            The patterns to which the string should be compared.
            "*" means any sequence of characters, and "?" means any single character.
            </param>
            <returns>
            A value indicating whether the current string matches any of the patterns specified in <paramref name="patterns"/>
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            Returns a string containing the left most <paramref name="length"/> characters.
            </summary>
            <param name="text">The string whose left most characters will be returned.</param>
            <param name="length">The number of characters to return.</param>
            <returns>
            A string containing the left most <paramref name="length"/> characters.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            Returns a string containing the right most <paramref name="length"/> characters.
            </summary>
            <param name="text">The string whose right most characters will be returned.</param>
            <param name="length">The number of characters to return.</param>
            <returns>
            A string containing the right most <paramref name="length"/> characters.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Replace(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Returns a new string in which all occurrences of <paramref name="oldValue"/> in the current
            instance are replaced with <paramref name="newValue"/>.
            </summary>
            <param name="text">The text.</param>
            <param name="oldValue">The string to be replaced.</param>
            <param name="newValue">The string to replace all occurrences of <paramref name="oldValue"/>.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            A string that is equivalent to the current string except that all instances of
            <paramref name="oldValue" /> are replaced with <paramref name="newValue" />.
            If <paramref name="oldValue" /> is not found in the current instance, the method returns the current
            instance unchanged.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.ReplaceNoCase(System.String,System.String,System.String)">
            <summary>
            Returns a new string in which all occurrences of <paramref name="oldValue"/> in the current
            instance are replaced with <paramref name="newValue"/> without considering case.
            </summary>
            <param name="text">The text.</param>
            <param name="oldValue">The string to be replaced.</param>
            <param name="newValue">The string to replace all occurrences of <paramref name="oldValue"/>.</param>
            <returns>
            A string that is equivalent to the current string except that all instances of
            <paramref name="oldValue" /> are replaced with <paramref name="newValue" /> without considering case.
            If <paramref name="oldValue" /> is not found in the current instance, the method returns the current
            instance unchanged.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveChar(System.String,System.Char,System.StringComparison)">
            <summary>
            Returns the specified string without any instance of the specified character.
            </summary>
            <param name="text">The string.</param>
            <param name="chr">The character that should be removed.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>A string without any instance of the specified character.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveCharNoCase(System.String,System.Char)">
            <summary>
            Returns the specified string without any instance of the specified character
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="chr">The character that should be removed.</param>
            <returns>
            A string without any instance of the specified character without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveChars(System.String,System.Collections.Generic.IEnumerable{System.Char},System.StringComparison)">
            <summary>
            Returns the specified string without any instance of the specified characters.
            </summary>
            <param name="text">The string.</param>
            <param name="chars">The characters that should be removed.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>A string without any instance of the specified characters.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveCharsNoCase(System.String,System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Returns the specified string without any instance of the specified characters
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="chars">The characters that should be removed.</param>
            <returns>
            A string without any instance of the specified characters
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Remove(System.String,System.String,System.StringComparison)">
            <summary>
            Returns the specified string without any instance of the <paramref name="value" />.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value that should be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without any instance of the <paramref name="value" />.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveNoCase(System.String,System.String)">
            <summary>
            Returns the specified string without any instance of the <paramref name="value" />
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value that should be removed.</param>
            <returns>
            A string without any instance of the <paramref name="value" /> without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveAny(System.String,System.Collections.Generic.IEnumerable{System.String},System.StringComparison)">
            <summary>
            Returns the specified string without any of the of the specified <paramref name="values" />.
            </summary>
            <param name="text">The string.</param>
            <param name="values">The values that should be removed.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            A string without any of the of the specified <paramref name="values" />.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveAnyNoCase(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns the specified string without any of the of the specified <paramref name="values" />
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="values">The values that should be removed.</param>
            <returns>
            A string without any of the of the specified <paramref name="values" />
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveAtStart(System.String,System.Int32)">
            <summary>
            Remove the first <paramref name="numberOfChars"/> characters of a string.
            </summary>
            <param name="text">The string whose characters will be removed.</param>
            <param name="numberOfChars">The number of characters to remove.</param>
            <returns>The string with the specified chars removed.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveAtStart(System.String,System.String,System.StringComparison)">
            <summary>
            Removes the specified <paramref name="value"/> from the start of the string.
            </summary>
            <param name="text">The string from where the value will be removed.</param>
            <param name="value">The value that should be removed.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            The string with the specified <paramref name="value"/> removed, if at the
            end of the string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveAtStartNoCase(System.String,System.String)">
            <summary>
            Removes the specified <paramref name="value"/> from the start of the string
            without considering case.
            </summary>
            <param name="text">The string from where the value will be removed.</param>
            <param name="value">The value that should be removed.</param>
            <returns>
            The string with the specified <paramref name="value"/> removed,
            without considering case, if at the end of the string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveAtEnd(System.String,System.Int32)">
            <summary>
            Remove the last <paramref name="numberOfChars"/> characters of a string.
            </summary>
            <param name="text">The string whose characters will be removed.</param>
            <param name="numberOfChars">The number of characters to remove.</param>
            <returns>
            The string with the specified chars removed.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveAtEnd(System.String,System.String,System.StringComparison)">
            <summary>
            Removes the specified <paramref name="value"/> from the end of the string.
            </summary>
            <param name="text">The string from where the value will be removed.</param>
            <param name="value">The value that should be removed.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            The string with the specified <paramref name="value"/> removed, if at the
            end of the string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveAtEndNoCase(System.String,System.String)">
            <summary>
            Removes the specified <paramref name="value"/> from the end of the string
            without considering case.
            </summary>
            <param name="text">The string from where the value will be removed.</param>
            <param name="value">The value that should be removed.</param>
            <returns>
            The string with the specified <paramref name="value"/> removed
            without considering case, if at the end of the string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveLeftOf(System.String,System.Char,System.StringComparison)">
            <summary>
            Removes all the text to the left of the specified char and the char itself.
            </summary>
            <param name="text">The original string.</param>
            <param name="chr">The char that marks the text that should be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without the text to left of the specified char and the char itself.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveLeftOf(System.String,System.Char,System.Boolean,System.StringComparison)">
            <summary>
            Removes all the text to the left of the specified char.
            </summary>
            <param name="text">The original string.</param>
            <param name="chr">The char that marks the text that should be removed.</param>
            <param name="remove">A value indicating whether <paramref name="chr"/> should also be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without the text to left of the specified char.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveLeftOf(System.String,System.String,System.StringComparison)">
            <summary>
            Removes all the text to the left of the specified value and the value itself.
            </summary>
            <param name="text">The original string.</param>
            <param name="value">The value that marks the text that should be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without the text to left of the specified value and the value itself.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveLeftOf(System.String,System.String,System.Boolean,System.StringComparison)">
            <summary>
            Removes all the text to the left of the specified value.
            </summary>
            <param name="text">The original string.</param>
            <param name="value">The value that marks the text that should be removed.</param>
            <param name="remove">A value indicating whether <paramref name="value"/> should also be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without the text to left of the specified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveLeftOfNoCase(System.String,System.Char)">
            <summary>
            Removes all the text to the left of the specified char and the char itself
            without considering case.
            </summary>
            <param name="text">The original string.</param>
            <param name="chr">The char that marks the text that should be removed.</param>
            <returns>
            A string without the text to left of the specified char and the char itself
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveLeftOfNoCase(System.String,System.Char,System.Boolean)">
            <summary>
            Removes all the text to the left of the specified char
            without considering case.
            </summary>
            <param name="text">The original string.</param>
            <param name="chr">The char that marks the text that should be removed.</param>
            <param name="remove">A value indicating whether <paramref name="chr"/> should also be removed.</param>
            <returns>
            A string without the text to left of the specified char
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveLeftOfNoCase(System.String,System.String)">
            <summary>
            Removes all the text to the left of the specified value and the value itself
            without considering case.
            </summary>
            <param name="text">The original string.</param>
            <param name="value">The value that marks the text that should be removed.</param>
            <returns>
            A string without the text to left of the specified value and the value itself
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveLeftOfNoCase(System.String,System.String,System.Boolean)">
            <summary>
            Removes all the text to the left of the specified value
            without considering case.
            </summary>
            <param name="text">The original string.</param>
            <param name="value">The value that marks the text that should be removed.</param>
            <param name="remove">A value indicating whether <paramref name="value"/> should also be removed.</param>
            <returns>
            A string without the text to left of the specified value
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveRightOf(System.String,System.Char,System.StringComparison)">
            <summary>
            Removes all the text to the right of the specified char and the char itself.
            </summary>
            <param name="text">The original string.</param>
            <param name="chr">The char that marks the text that should be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without the text to right of the specified char and the char itself.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveRightOf(System.String,System.Char,System.Boolean,System.StringComparison)">
            <summary>
            Removes all the text to the right of the specified char.
            </summary>
            <param name="text">The original string.</param>
            <param name="chr">The char that marks the text that should be removed.</param>
            <param name="remove">A value indicating whether <paramref name="chr"/> should also be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without the text to right of the specified char.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveRightOf(System.String,System.String,System.StringComparison)">
            <summary>
            Removes all the text to the right of the specified value and the value itself.
            </summary>
            <param name="text">The original string.</param>
            <param name="value">The value that marks the text that should be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without the text to right of the specified value and the value itself.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveRightOf(System.String,System.String,System.Boolean,System.StringComparison)">
            <summary>
            Removes all the text to the right of the specified value.
            </summary>
            <param name="text">The original string.</param>
            <param name="value">The value that marks the text that should be removed.</param>
            <param name="remove">A value indicating whether <paramref name="value"/> should also be removed.</param>
            <param name="comparisonType">The type of comparison.</param>
            <returns>
            A string without the text to right of the specified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveRightOfNoCase(System.String,System.Char)">
            <summary>
            Removes all the text to the right of the specified char and the char itself
            without considering case.
            </summary>
            <param name="text">The original string.</param>
            <param name="chr">The char that marks the text that should be removed.</param>
            <returns>
            A string without the text to right of the specified char and the char itself
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveRightOfNoCase(System.String,System.Char,System.Boolean)">
            <summary>
            Removes all the text to the right of the specified char
            without considering case.
            </summary>
            <param name="text">The original string.</param>
            <param name="chr">The char that marks the text that should be removed.</param>
            <param name="remove">A value indicating whether <paramref name="chr"/> should also be removed.</param>
            <returns>
            A string without the text to right of the specified char and the char itself
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveRightOfNoCase(System.String,System.String)">
            <summary>
            Removes all the text to the right of the specified value and the value itself.
            </summary>
            <param name="text">The original string.</param>
            <param name="value">The value that marks the text that should be removed.</param>
            <returns>
            A string without the text to right of the specified value and the value itself.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.RemoveRightOfNoCase(System.String,System.String,System.Boolean)">
            <summary>
            Removes all the text to the right of the specified value.
            </summary>
            <param name="text">The original string.</param>
            <param name="value">The value that marks the text that should be removed.</param>
            <param name="remove">A value indicating whether <paramref name="value"/> should also be removed.</param>
            <returns>
            A string without the text to right of the specified value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.LessThan(System.String,System.String,System.StringComparison)">
            <summary>
            Determines whether the current string is less than the specified <paramref name="value" />.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            A value indicating whether the current string is less than the specified <paramref name="value" />.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.LessThanNoCase(System.String,System.String)">
            <summary>
            Determines whether the current string is less than the specified <paramref name="value" />
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <returns>
            A value indicating whether the current string is less than the specified <paramref name="value" />
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.LessThanOrEqualTo(System.String,System.String,System.StringComparison)">
            <summary>
            Determines whether the current string is less than or equal to
            the specified <paramref name="value" />.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            A value indicating whether the current string is less than or equal to
            the specified <paramref name="value" />.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.LessThanOrEqualToNoCase(System.String,System.String)">
            <summary>
            Determines whether the current string is less than or equal to
            the specified <paramref name="value" /> without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <returns>
            A value indicating whether the current string is less than or equal to
            the specified <paramref name="value" /> without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.GreaterThan(System.String,System.String,System.StringComparison)">
            <summary>
            Determines whether the current string is greater than the specified <paramref name="value" />.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            A value indicating whether the current string is greater than the specified <paramref name="value" />.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.GreaterThanNoCase(System.String,System.String)">
            <summary>
            Determines whether the current string is greater than the specified <paramref name="value" />
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <returns>
            A value indicating whether the current string is greater than the specified <paramref name="value" />
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.GreaterThanOrEqualTo(System.String,System.String,System.StringComparison)">
            <summary>
            Determines whether the current string is greater than or equal to
            the specified <paramref name="value" />.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <param name="comparisonType">The comparison type.</param>
            <returns>
            A value indicating whether the current string is greater than the specified <paramref name="value" />.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.GreaterThanOrEqualToNoCase(System.String,System.String)">
            <summary>
            Determines whether the current string is greater than or equal to
            the specified <paramref name="value" /> without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <returns>
            A value indicating whether the current string is greater than the specified <paramref name="value" />
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.StartsWithNoCase(System.String,System.String)">
            <summary>
            Determines whether the beginning of this string instance matches the specified
            string.
            </summary>
            <param name="text">The text.</param>
            <param name="value">The value to which the string should be compared.</param>
            <returns>
            A value indicating whether the beginning of this string instance matches the specified
            string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.StartsWithLetter(System.String)">
            <summary>
            Determines whether the current string starts with a letter (any letter).
            </summary>
            <param name="text">The text.</param>
            <returns>
            A value indicating whether the current string starts with a letter (any letter).
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.StartsWithDigit(System.String)">
            <summary>
            Determines whether the current string starts with a digit (any digit).
            </summary>
            <param name="text">The text.</param>
            <returns>
            A value indicating whether the current string starts with a digit (any digit).
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.HasLetters(System.String)">
            <summary>
            Determines whether the current string includes any letter.
            </summary>
            <param name="text">The text.</param>
            <returns>
            A value indicating whether the current string includes any letter.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.HasDigits(System.String)">
            <summary>
            Determines whether the current string includes any digit.
            </summary>
            <param name="text">The text.</param>
            <returns>
            A value indicating whether the current string includes any digit.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.GetBytes(System.String)">
            <summary>
            Encodes all the characters in the specified string into a sequence of bytes
            with the <see cref="P:System.Text.Encoding.UTF8"/> encoding.
            </summary>
            <param name="text">The string containing the characters to encode.</param>
            <returns>
            A byte array containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.GetBytes(System.String,System.Text.Encoding)">
            <summary>
            Encodes all the characters in the specified string into a sequence of bytes
            using the specified encoding.
            </summary>
            <param name="text">The string containing the characters to encode.</param>
            <param name="encoding">The encoding that should be used.</param>
            <returns>
            A byte array containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.GetHashString(System.String)">
            <summary>
            Computes a hash string for the current string using the <see cref="T:System.Security.Cryptography.MD5"/>
            hash algorithm.
            </summary>
            <param name="text">The string whose hash string will be returned.</param>
            <returns>
            A hash string for the current string using the <see cref="T:System.Security.Cryptography.MD5"/>
            hash algorithm.
            </returns>
            <remarks>
            Note that MD5 is not secure so the resulting hash string should not be used
            for data that requires extreme security.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.GetHashString(System.String,System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Computes a hash string for the current string using the specified
            hash algorithm.
            </summary>
            <param name="text">The string whose hash string will be returned.</param>
            <param name="algorithm">The hash algorithm that should be used.</param>
            <returns>
            A hash string for the current string using the specified
            hash algorithm.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Format(System.String,System.Object[])">
            <summary>
            Replaces the format items in the string with the string representations
            of the corresponding objects in the specified array.
            </summary>
            <param name="text">The current string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>
            A copy of the string in which the format items have been replaced by the string representation
            of the corresponding objects in <paramref name="args"/>.
            </returns>
            <remarks>
            This method is equivalent to <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/> using the
            current culture.
            This method does not support named arguments.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Format(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Replaces the format items in the string with the string representations
            of the corresponding objects in the specified enumerable.
            </summary>
            <param name="text">The current string.</param>
            <param name="list">An object enumerable that contains zero or more objects to format.</param>
            <returns>
            A copy of the string in which the format items have been replaced by the string representation
            of the corresponding objects in <paramref name="list"/>.
            </returns>
            <remarks>
            This method is equivalent to <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/> using the
            current culture.
            This method does not support named arguments.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.EndsWithNoCase(System.String,System.String)">
            <summary>
            Determines whether the current string ends with the specified <paramref name="value"/> 
            without considering case.
            </summary>
            <param name="text">The string.</param>
            <param name="value">The value to which the string should be compared.</param>
            <returns>
            A value indicating whether the current string ends with the specified <paramref name="value"/>
            without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Split(System.String,System.Char,System.StringSplitOptions)">
            <summary>
            Splits a string into substrings based on the specified character.
            </summary>
            <param name="text">The text.</param>
            <param name="separator">A character that delimits the substrings in this string.</param>
            <param name="options">
            <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"/> to omit empty array elements from the array returned;
            or <see cref="F:System.StringSplitOptions.None"/> to include empty array elements in the array returned.
            </param>
            <returns>
            An array whose elements contain the substrings in this string that are delimited by the specified character.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.StringExtensions.Split(System.String,System.Char,System.Int32,System.StringSplitOptions)">
            <summary>
            Splits a string into substrings based on the specified character.
            </summary>
            <param name="text">The text.</param>
            <param name="separator">A character that delimits the substrings in this string.</param>
            <param name="count">The maximum number of substrings to return.</param>
            <param name="options">
            <see cref="F:System.StringSplitOptions.RemoveEmptyEntries"/> to omit empty array elements from the array returned;
            or <see cref="F:System.StringSplitOptions.None"/> to include empty array elements in the array returned.
            </param>
            <returns>
            An array whose elements contain the substrings in this string that are delimited by the specified character.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Grammar.Rule">
            <summary>
            Defines a rule in a <see cref="T:Primavera.Hydrogen.Text.Grammar.Vocabulary"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Rule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Text.Grammar.Rule"/> class.
            </summary>
            <param name="pattern">The rule pattern.</param>
            <param name="replacement">The rule replacement.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Rule.Apply(System.String)">
            <summary>
            Applies the rule to the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns>
            The result of applying the rule.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Grammar.Vocabularies">
            <summary>
            Defines a container for registeried vocabularies.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Grammar.Vocabularies.Default">
            <summary>
            Gets the default vocabulary.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Grammar.Vocabulary">
            <summary>
            Defines a vocabulary of exceptions to simple pluralization/singularization rules.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Vocabulary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Text.Grammar.Vocabulary"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Vocabulary.Singularize(System.String,System.Boolean)">
            <summary>
            Singularizes the specified word.
            </summary>
            <param name="word">The word.</param>
            <param name="inputIsKnownToBePlural">
            A value indicating whether the specified word is known to be plural.
            </param>
            <returns>
            The word in singular.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Vocabulary.Pluralize(System.String,System.Boolean)">
            <summary>
            Pluralizes the specified word.
            </summary>
            <param name="word">The word.</param>
            <param name="inputIsKnownToBeSingular">
            A value indicating whether the specified word is known to be singular.
            </param>
            <returns>
            The word in singular.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Vocabulary.AddIrregular(System.String,System.String,System.Boolean)">
            <summary>
            Adds an irregular word to the vocabulary.
            An irregular word cannot be pluralized/singularized using regular expressions (e.g. person and people).
            </summary>
            <param name="singular">The singular form of the word.</param>
            <param name="plural">The plural for of the word.</param>
            <param name="matchEnding">
            A value indicating whether the word should be matched on their own and also at the end of other words.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Vocabulary.AddUncountable(System.String)">
            <summary>
            Adds an uncountable word to the vocabulary (e.g. fish).
            An uncountable word will simply be ignored when pluralizing/singularizing.
            </summary>
            <param name="word">The word.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Vocabulary.AddPlural(System.String,System.String)">
            <summary>
            Adds a word to the vocabulary that is not pluralized using the trivial rules (e.g. bus -> buses).
            </summary>
            <param name="pattern">The regular expression to be mached (case insensitive).</param>
            <param name="replacement">The regular expression that should be used for replacement.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Grammar.Vocabulary.AddSingular(System.String,System.String)">
            <summary>
            Adds a word to the vocabulary that is not singularized using the trivial rules (e.g. indices -> index).
            </summary>
            <param name="pattern">The regular expression to be mached (case insensitive).</param>
            <param name="replacement">The regular expression that should be used for replacement.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1">
            <summary>
            Provides a custom JSON converter that supports the following features: polymorphic
            serialization for type inheritance, maximum depth for larger objects, reference loop
            handling for circular references, dynamic type handling for navigation properties like the
            Entity Framework, and pattern matching for exclusion types.
            </summary>
            <typeparam name="T">The type of converter.</typeparam>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.HashCodes">
            <summary>
            Gets or sets the list of hash codes to detect circular references.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.Options">
            <summary>
            Gets or sets the custom converter options that defines the common <see
            cref="T:System.Text.Json.JsonSerializerOptions"/> used by the <see cref="T:System.Text.Json.JsonSerializer"/> and extended
            options used by the <see cref="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.#ctor(Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes a JSON value from the provided reader and converts it into an instance of a
            specified type.
            </summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">The serializer options.</param>
            <returns>A T representation of the JSON value.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.DeserializeCustom(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes the specified custom type.
            </summary>
            <param name="reader">The serializer reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">The serializer options.</param>
            <returns>A T representation of the JSON value.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.GetDeserializeJsonValueKind(System.Type)">
            <summary>
            Gets the JSON value kind of the specified type which determines the method to
            deserialize it.
            </summary>
            <param name="type">The value type.</param>
            <returns>The JSON value kind.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.GetSerializeJsonValueKind(System.Object)">
            <summary>
            Gets the JSON value kind of the specified object which determines the method to
            serialize it.
            </summary>
            <param name="value">The object value.</param>
            <returns>The JSON value kind.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified value.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeArray``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified array.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeBool(System.Text.Json.Utf8JsonWriter,System.Boolean,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified boolean.
            </summary>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeCircularRef``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified value when a circular reference is detected.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
            <returns>
            <c>True</c> if the serialization was handled; otherwise <c>false</c> to continue with
            default serialization.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeCustom``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified custom type.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeEnumerable``1(System.Text.Json.Utf8JsonWriter,System.Collections.Generic.IEnumerable{``0},Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified enumerable.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeEnumeration``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified enumeration.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeHashCode``1(System.Text.Json.Utf8JsonWriter,``0)">
            <summary>
            Serializes the hash code of the specified value.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeJsonElement``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified JsonElement.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeMaxDepth``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified value when maximum depth is achieved.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
            <returns>
            <c>True</c> if the serialization was handled; otherwise <c>false</c> to continue with
            default serialization.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeNull``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the null value.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeNumber``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified number.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeObject``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified object.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializePropertyName``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified number.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeString``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified string.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeTypeName``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the type name of specified value.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1.SerializeUndefined``1(System.Text.Json.Utf8JsonWriter,``0,Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo)">
            <summary>
            Serializes the specified undefined type.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
            <param name="writer">The serializer writer.</param>
            <param name="value">The value to serialize.</param>
            <param name="propertyInfo">The property meta-data.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions">
            <summary>
            Provides the <see cref="T:System.Type"/> and <see cref="T:System.Object"/> extensions required by the <see
            cref="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1"/> implementation.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether this items [are null or empty].
            </summary>
            <typeparam name="T">The type of enumerable.</typeparam>
            <param name="items">The items.</param>
            <returns><c>true</c> if [are null or empty] [the specified items]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.IsNullOrEmpty(System.Collections.IEnumerable)">
            <summary>
            Determines whether [is null or empty].
            </summary>
            <param name="items">The items.</param>
            <returns><c>true</c> if [is null or empty] [the specified items]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.ShortAssemblyQualifiedName(System.Type)">
            <summary>
            Gets the assembly qualified name of the specified type - stripping off the version,
            culture and public key token parts.
            </summary>
            <param name="value">The type.</param>
            <returns>The short assembly qualified name.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.GetEntityType``1(``0)">
            <summary>
            Gets the entity type. This method deals with Entity Framework
            dynamic proxies and returns the underlying type.
            </summary>
            <typeparam name="T">The object type.</typeparam>
            <param name="obj">The object.</param>
            <returns>The entity type.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.GetEntityType(System.Object)">
            <summary>
            Gets the entity type. This method deals with Entity Framework
            dynamic proxies and returns the underlying type.
            </summary>
            <param name="obj">The object.</param>
            <returns>The entity type.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.IsContainer(System.Type)">
            <summary>
            Determines whether this type is a container.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if the specified type is a container; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.IsIDictionary(System.Type)">
            <summary>
            Determines whether tis type implements <see cref="T:System.Collections.IDictionary"/>.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if [implements <see cref="T:System.Collections.IDictionary"/>] [the specified type]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.IsIEnumerable(System.Type)">
            <summary>
            Determines whether this type implements <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if [implements <see cref="T:System.Collections.IEnumerable"/>] [the specified type]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.IsNumber(System.Type)">
            <summary>
            Determines whether this type is a number.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if the specified type is a number; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterExtensions.IsJsonElement(System.Type)">
            <summary>
            Determines whether this type is a JsonElement.
            </summary>
            <param name="type">The type.</param>
            <returns><c>true</c> if the specified type is a JsonElement; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.InferredTypesObjectConverter">
            <summary>
            Provides a JSON converter that tries to infer the correct type for properties of type object when
            deserializing.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.InferredTypesObjectConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.InferredTypesObjectConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.Iso8601TimeSpanConverter">
            <summary>
            Defines a JSON converter to convert <see cref="T:System.TimeSpan"/> values to the ISO8601 format.
            </summary>
            <seealso cref="T:System.Text.Json.Serialization.JsonConverter`1"/>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.Iso8601TimeSpanConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.Iso8601TimeSpanConverter.Write(System.Text.Json.Utf8JsonWriter,System.TimeSpan,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.Iso8601TimeSpanNullableConverter">
            <summary>
            Defines a JSON converter to convert <see cref="T:System.TimeSpan"/> nullable values to the ISO8601 format.
            </summary>
            <seealso cref="T:System.Text.Json.Serialization.JsonConverter`1"/>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.Iso8601TimeSpanNullableConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.Iso8601TimeSpanNullableConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.TimeSpan},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.CircularRefHandlingOption">
            <summary>
            Defines the serialization strategy to apply when a circular reference is detected. A
            circular serialization occurs when an object contains another object that was serialized
            before. The hash code of the object is used to identify a circular reference.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.CircularRefHandlingOption.Suppress">
            <summary>
            Suppress the value.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.CircularRefHandlingOption.Value">
            <summary>
            Serialize the value.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.CircularRefHandlingOption.HashCode">
            <summary>
            Serialize the hash code of the value.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions">
            <summary>
            Provides options to be used with <see cref="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverter`1"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.AllowTrailingCommas">
            <summary>
            Gets or sets a value indicating whether an extra comma at the end of a list of JSON
            values in an object or array is allowed (and ignored) within the JSON payload being deserialized.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.CircularRefHandling">
            <summary>
            Gets or sets the circular reference handling option that defines the serialization
            strategy to apply when a circular reference is detected.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.Converters">
            <summary>
            Gets the list of user-defined converters that were registered.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.DefaultBufferSize">
            <summary>
            Gets or sets the default buffer size, in bytes, to use when creating temporary buffers.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.DictionaryKeyPolicy">
            <summary>
            Gets or sets the policy used to convert a System.Collections.IDictionary key's name to
            another format, such as camel-casing.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.Encoder">
            <summary>
            Gets or sets the encoder to use when escaping strings, or null to use the default encoder.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.IgnoreNullValues">
            <summary>
            Gets or sets a value indicating whether null values are ignored during serialization and
            deserialization. The default value is false.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.IgnoreReadOnlyProperties">
            <summary>
            Gets or sets a value indicating whether read-only properties are ignored during
            serialization. The default value is false.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.JsonSerializerOptions">
            <summary>
            Gets or sets the JSON serializer options supported by the underlying <see cref="T:System.Text.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed when serializing or deserializing JSON, with the
            default value of 0 indicating a maximum depth of 64.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.MaxDepthHandling">
            <summary>
            Gets or sets the maximum depth handling option that defines the serialization strategy
            to apply when the maximum depth is achieved.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.PropertyNameCaseInsensitive">
            <summary>
            Gets or sets a value indicating whether a property's name uses a case-insensitive
            comparison during deserialization. The default value is false.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.PropertyNamingPolicy">
            <summary>
            Gets or sets a value that specifies the policy used to convert a property's name on an
            object to another format, such as camel-casing, or null to leave property names unchanged.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.ReadCommentHandling">
            <summary>
            Gets or sets a value that defines how comments are handled during deserialization.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.TypeNameHandling">
            <summary>
            Gets or sets type name handling option that defines the serialization strategy to apply
            for the object type serialization.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.WriteIndented">
            <summary>
            Gets or sets a value indicating whether defines whether JSON should use pretty printing.
            By default, JSON is serialized without any extra white space.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.DefaultSerializerOptions">
            <summary>
            Creates a new instance of <see cref="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.JsonSerializerOptions"/> with default values.
            </summary>
            <returns>The options object.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedCustomizationConverterOptions.GetConverter(System.Type)">
            <summary>
            Gets the converter for the specified type.
            </summary>
            <param name="typeToConvert">The type to return the converter for.</param>
            <returns>
            The first converter that supports the given type, or null if there is no converter.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.MaxDepthHandlingOption">
            <summary>
            Defines the serialization strategy to apply when the maximum depth is achieved. Maximum
            depth is the number of recursive levels the serialization can handle. This option is useful
            to serialize large objects.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.MaxDepthHandlingOption.Suppress">
            <summary>
            Suppress the value.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.MaxDepthHandlingOption.Value">
            <summary>
            Serialize the value.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.MaxDepthHandlingOption.CurrentDepth">
            <summary>
            Serialize the current depth.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.TypeNameHandlingOption">
            <summary>
            Defines the serialization strategy to apply for the object type serialization. This option
            is useful to deserialize objects into the specified types.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.TypeNameHandlingOption.Suppress">
            <summary>
            Suppress the type.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.TypeNameHandlingOption.FullName">
            <summary>
            Serialize the full name of the type.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.TypeNameHandlingOption.ShortName">
            <summary>
            Serialize the short name of the type.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind">
            <summary>
            Defines an extended enumeration of the original <see cref="T:System.Text.Json.JsonValueKind"/> that contains
            more types to determine the best serialization strategy that should be applied.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.Undefined">
            <summary>
            There is no value (as distinct from <see cref="F:System.Text.Json.JsonValueKind.Null"/>). The undefined.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.Object">
            <summary>
            A JSON object.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.Array">
            <summary>
            A JSON array.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.String">
            <summary>
            A JSON string.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.Number">
            <summary>
            A JSON number.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.True">
            <summary>
            The JSON value true.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.False">
            <summary>
            The JSON value false.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.Null">
            <summary>
            The JSON value null.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.JsonElement">
            <summary>
            A JSON element.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Text.Json.Serialization.ExtendedJsonValueKind.Custom">
            <summary>
            Any value that requires a custom serialization.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo">
            <summary>
            Provides a pseudo-property that encapsulates an underlying property information with an
            extended behavior. The pseudo-property is created at runtime using the original property
            information or providing the required property meta-data.
            </summary>
            <seealso cref="T:System.Reflection.PropertyInfo"/>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo"/> class.
            </summary>
            <param name="propertyInfo">The underlying property information.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo"/> class.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo.BasePropertyInfo">
            <summary>
            Gets the underlying property information.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo.IsContainer">
            <summary>
            Gets a value indicating whether the property type is a container.
            </summary>
            <value><c>true</c> if the property type is a container; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Primavera.Hydrogen.Text.Json.Serialization.ExtendedPropertyInfo.Name">
            <summary>
            Gets or sets the name of the current member.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Threading.TransientThreadCulture">
            <summary>
            Allows setting the current thread culture (<see cref="P:System.Threading.Thread.CurrentCulture"/> and
            <see cref="P:System.Threading.Thread.CurrentUICulture"/>) for the scope of this instance.
            </summary>
            <seealso cref="T:System.IDisposable" />
            <example>
            This can be use to "temporarily" set the current thread culture for a part of an
            operation. Which is particularly useful in unit testing).
            <code>
            <![CDATA[
            using (new TransientThreadCulture("fr-FR"))
            {
                // This code runs in the specified culture
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Threading.TransientThreadCulture.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Threading.TransientThreadCulture"/> class.
            </summary>
            <param name="culture">The culture that should be applied to the current thread.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Threading.TransientThreadCulture.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Threading.TransientThreadCulture"/> class.
            </summary>
            <param name="name">The name of the culture that should be applied to the current thread.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Threading.TransientThreadCulture.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad">
            <summary>
            Defines a four byte structure that is laid out in memory using Big-Endian.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.Byte1">
            <summary>
            Gets or sets the first byte.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.Byte2">
            <summary>
            Gets or sets the second byte.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.Byte3">
            <summary>
            Gets or sets the third byte.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.Byte4">
            <summary>
            Gets or sets the fourth byte.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.ToUInt32">
            <summary>
            Returns the <see cref="T:System.UInt32"/> representation of this quad.
            </summary>
            <returns>The <see cref="T:System.UInt32"/> representation of this quad.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.ToInt32">
            <summary>
            Returns the <see cref="T:System.Int32"/> representation of this quad.
            </summary>
            <returns>The <see cref="T:System.Int32"/> representation of this quad.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.ToTimeSpan">
            <summary>
            Returns the <see cref="T:System.TimeSpan"/> representation of this quad.
            </summary>
            <returns>The <see cref="T:System.TimeSpan"/> representation of this quad.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.SetFromTimeSpan(System.TimeSpan)">
            <summary>
            Sets the current instance from the specified <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan"/> value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.FromUInt32(System.UInt32)">
            <summary>
            Returns an instance of <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/> from the specified <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The original value.</param>
            <returns>The <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.FromInt32(System.Int32)">
            <summary>
            Returns an instance of <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/> from the specified <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The original value.</param>
            <returns>The <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.FromTimeSpan(System.TimeSpan)">
            <summary>
            Returns an instance of <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/> from the specified <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="timeSpan">The original value.</param>
            <returns>The <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.op_Implicit(Primavera.Hydrogen.Time.Internal.BigEndianByteQuad)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.op_Implicit(Primavera.Hydrogen.Time.Internal.BigEndianByteQuad)~System.UInt32">
            <summary>
            Performs an implicit conversion from <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/> to <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.op_Implicit(System.Int32)~Primavera.Hydrogen.Time.Internal.BigEndianByteQuad">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad.op_Implicit(System.UInt32)~Primavera.Hydrogen.Time.Internal.BigEndianByteQuad">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Primavera.Hydrogen.Time.Internal.BigEndianByteQuad"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Time.Internal.MarshalHelper">
            <summary>
            Provides helper methods for marshaling.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.MarshalHelper.RawSerialize``1(``0)">
            <summary>
            Serializes the specified structure into raw bytes.
            </summary>
            <typeparam name="T">The type of the structure.</typeparam>
            <param name="structure">The structure that should be serialized.</param>
            <returns>The raw bytes.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.MarshalHelper.RawSerialize(System.Object)">
            <summary>
            Serializes the specified structure into raw bytes.
            </summary>
            <param name="structure">The structure that should be serialized.</param>
            <returns>The raw bytes.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.MarshalHelper.RawDeserialize``1(System.Byte[])">
            <summary>
            Deserialize a structure from the specified raw bytes.
            </summary>
            <typeparam name="T">The type of the structure.</typeparam>
            <param name="rawdata">The data that should be deserialized.</param>
            <returns>The structure.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.MarshalHelper.RawDeserialize(System.Byte[],System.Type)">
            <summary>
            Deserialize a structure from the specified raw bytes.
            </summary>
            <param name="rawdata">The data that should be deserialized.</param>
            <param name="type">The type of the structure.</param>
            <returns>The structure.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Time.Internal.NtpByteOctuple">
            <summary>
            Describes a NTP byte octuple.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpByteOctuple.FirstQuad">
            <summary>
            Gets or sets the first quad.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpByteOctuple.SecondQuad">
            <summary>
            Gets or sets the second quad.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.NtpByteOctuple.FromTimeSpan(System.TimeSpan)">
            <summary>
            Returns an instance of <see cref="T:Primavera.Hydrogen.Time.Internal.NtpByteOctuple"/> from the specified <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="timeSpan">The original value.</param>
            <returns>The <see cref="T:Primavera.Hydrogen.Time.Internal.NtpByteOctuple"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.NtpByteOctuple.FromDateTime(System.DateTime)">
            <summary>
            Returns an instance of <see cref="T:Primavera.Hydrogen.Time.Internal.NtpByteOctuple"/> from the specified <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="dateTime">The original value.</param>
            <returns>The <see cref="T:Primavera.Hydrogen.Time.Internal.NtpByteOctuple"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.NtpByteOctuple.ToTimeSpan">
            <summary>
            Returns the <see cref="T:System.TimeSpan"/> representation of this octuple.
            </summary>
            <returns>The <see cref="T:System.TimeSpan"/> representation of this octuple.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.NtpByteOctuple.ToDateTime">
            <summary>
            Returns the <see cref="T:System.DateTime"/> representation of this octuple.
            </summary>
            <returns>The <see cref="T:System.DateTime"/> representation of this octuple.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Time.Internal.NtpLeapIndicator">
            <summary>
            Defines the NTP leap indicator.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpLeapIndicator.NoWarning">
            <summary>
            No warning.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpLeapIndicator.LastMinute61">
            <summary>
            Last minute has 61 seconds
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpLeapIndicator.LastMinute59">
            <summary>
            Last minute has 59 seconds.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpLeapIndicator.Alarm">
            <summary>
            Alarm condition (clock not synchronized).
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Time.Internal.NtpMode">
            <summary>
            Defines the NTP mode.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpMode.SymmetricActive">
            <summary>
            Mode is symmetric active.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpMode.SymmetricPassive">
            <summary>
            Mode is symmetric passive.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpMode.Client">
            <summary>
            Mode is client.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpMode.Server">
            <summary>
            Mode is server.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpMode.Broadcast">
            <summary>
            Mode is broadcast.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpMode.Unknown">
            <summary>
            Mode is unknown.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Time.Internal.NtpPacket">
            <summary>
            Describes a NTP packet.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpPacket.DefaultPort">
            <summary>
            Defines the default NTP port.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.LeapIndicator">
            <summary>
            Gets or sets the leap indicator.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.VersionNumber">
            <summary>
            Gets or sets the version number.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.Stratum">
            <summary>
            Gets or sets the stratum.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.PollInterval">
            <summary>
            Gets or sets the poll interval.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.RootDelay">
            <summary>
            Gets or sets the root delay.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.RootDispersion">
            <summary>
            Gets or sets the root dispersion.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.ReferenceId">
            <summary>
            Gets the reference id.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.ReferenceTimeSpamp">
            <summary>
            Gets or sets the reference timestamp.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.OriginateTimeSpamp">
            <summary>
            Gets or sets the original timestamp.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.ReceiveTimeSpamp">
            <summary>
            Gets or sets the receive timestamp.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.Internal.NtpPacket.TransmitTimeSpamp">
            <summary>
            Gets or sets the transmit timestamp.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.NtpPacket.CalculateLocalClockOffset(Primavera.Hydrogen.Time.Internal.NtpPacket,System.DateTime)">
            <summary>
            Calculates the local clock offset.
            </summary>
            <param name="resultPacket">The result packet.</param>
            <param name="resultTime">The result time.</param>
            <returns>The local clock offset.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.NtpPacket.ToByteArray">
            <summary>
            Returns the byte array representation of this packet.
            </summary>
            <returns>The byte array representation of this packet.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.Internal.NtpPacket.FromByteArray(System.Byte[])">
            <summary>
            Returns an instance of <see cref="T:Primavera.Hydrogen.Time.Internal.NtpPacket"/> from the specified byte array value.
            </summary>
            <param name="array">The byte array.</param>
            <returns>The <see cref="T:Primavera.Hydrogen.Time.Internal.NtpPacket"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Time.Internal.NtpStratum">
            <summary>
            Defines the NTP stratum.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpStratum.Unspecified">
            <summary>
            The stratum is unspecified or unavailable.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpStratum.PrimaryReference">
            <summary>
            The stratum is primary reference (e.g. radio-clock).
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpStratum.SecondaryReference">
            <summary>
            The stratum is secondary reference (via NTP or SNTP).
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.Internal.NtpStratum.Reserved">
            <summary>
            The stratum is reserved.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Time.ISystemClock">
            <summary>
            Defines an abstraction for the system clock which can be used to facilitate testing for example.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.ISystemClock.UtcNow">
            <summary>
            Gets the current system time.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Time.NetworkTimeClient">
            <summary>
            Allows retrieving the accurate time of a NTP server.
            </summary>
            <remarks>
            The NTP server accepts a UDP request with a reference date
            and returns the offset required to make accurate with the "universal
            clock".
            These servers are designed to be called sparsely (since adjusting the
            clock of a computer is not an operation that needs to be executed
            consecutively), so they implement hard throttling policies that result
            in timeouts.
            This client implements an exponential retry policy (up to 3 times) to
            try to deal with throttling. Callers should adjust the minimum back-off
            and use polling on more than one NTP server.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.Time.NetworkTimeClient.ServerAddress">
            <summary>
            Gets the NTP server address, as specified by the caller.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.NetworkTimeClient.ServerEndpoint">
            <summary>
            Gets the real NTP server endpoint used.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.NetworkTimeClient.SendTimeout">
            <summary>
            Gets the maximum amount of time to wait for when sending data to the NTP server.
            The default value is 1 second.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.NetworkTimeClient.ReceiveTimeout">
            <summary>
            Gets the maximum amount of time to wait for when receiving data from the NTP server.
            The default value is 1 second.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.NetworkTimeClient.MinRetryBackoff">
            <summary>
            Gets the minimum amount of time to wait before retrying a operation.
            The default value is 1 second.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Time.NetworkTimeClient.UdpClient">
            <summary>
            Gets the UDP client.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClient"/> class.
            </summary>
            <param name="serverAddress">The NTP server address.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.#ctor(System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClient" /> class.
            </summary>
            <param name="serverAddress">The NTP server address.</param>
            <param name="minRetryBackoff">
            The minimum amount of time to wait before retrying a operation.
            This value should be greater than or equal to 100 milliseconds.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.#ctor(System.String,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClient"/> class.
            </summary>
            <param name="serverAddress">The NTP server address.</param>
            <param name="sendTimeout">
            The maximum amount of time to wait for when sending data to the NTP server.
            This value should be greater than or equal to 100 milliseconds.
            </param>
            <param name="receiveTimeout">
            The maximum amount of time to wait for when receiving data from the NTP server.
            This value should be greater than or equal to 100 milliseconds.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.#ctor(System.String,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClient"/> class.
            </summary>
            <param name="serverAddress">The NTP server address.</param>
            <param name="sendTimeout">
            The maximum amount of time to wait for when sending data to the NTP server.
            This value should be greater than or equal to 100 milliseconds.
            </param>
            <param name="receiveTimeout">
            The maximum amount of time to wait for when receiving data from the NTP server.
            This value should be greater than or equal to 100 milliseconds.
            </param>
            <param name="minRetryBackoff">
            The minimum amount of time to wait before retrying a operation.
            This value should be greater than or equal to 100 milliseconds.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.RetrieveCorrectionOffset">
            <summary>
            Retrieves the correction offset from the NTP server.
            </summary>
            <returns>
            The correction offset retrieved from the NTP server.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.RetrieveCorrectionOffsetAsync">
            <summary>
            Retrieves the correction offset from the NTP server.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The correction offset retrieved from the NTP server.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.RetrieveUtcTime">
            <summary>
            Retrieves the current time (UTC) from the NTP server.
            </summary>
            <returns>
            The current time (UTC) retrieved from the NTP server.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.RetrieveUtcTimeAsync">
            <summary>
            Retrieves the current time (UTC) from the NTP server.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The current time (UTC) retrieved from the NTP server.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.RetrieveLocalTime">
            <summary>
            Retrieves the current time (local) from the NTP server.
            </summary>
            <returns>
            The current time (local) retrieved from the NTP server.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.RetrieveLocalTimeAsync">
            <summary>
            Retrieves the current time (UTC) from the NTP server.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The current time (UTC) retrieved from the NTP server.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.RetrieveTimeZoneTime(System.TimeZoneInfo)">
            <summary>
            Retrieves the current time (in the specified time zone) from the NTP server.
            </summary>
            <param name="timeZone">The time zone.</param>
            <returns>
            The current time (in the specified time zone) retrieved from the NTP server.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.RetrieveTimeZoneTimeAsync(System.TimeZoneInfo)">
            <summary>
            Retrieves the current time (in the specified time zone) from the NTP server.
            </summary>
            <param name="timeZone">The time zone.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.
            The current time (in the specified time zone) retrieved from the NTP server.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClient.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Time.NetworkTimeClientError">
            <summary>
            Indicates the code of the error in a <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClientException"/>.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.NetworkTimeClientError.InvalidServerAddress">
            <summary>
            The server address is invalid.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.NetworkTimeClientError.OperationTimedOut">
            <summary>
            The communication with the server timed out.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.NetworkTimeClientError.OperationFailed">
            <summary>
            The communication with the server failed.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Time.NetworkTimeClientError.Unspecified">
            <summary>
            The error was not specified.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Time.NetworkTimeClientException">
            <summary>
            Describes errors raised by the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClient"/>.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="P:Primavera.Hydrogen.Time.NetworkTimeClientException.ErrorCode">
            <summary>
            Gets the code of the error that caused the exception.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClientException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClientException"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClientException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClientException"/> class.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClientException"/> class.
            </summary>
            <param name="message">Error message.</param>
            <param name="innerException">Represents the exception that caused this error.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClientException.#ctor(Primavera.Hydrogen.Time.NetworkTimeClientError)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClientException"/> class.
            </summary>
            <param name="error">The code of the error that caused the exception.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClientException.#ctor(Primavera.Hydrogen.Time.NetworkTimeClientError,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClientException"/> class.
            </summary>
            <param name="error">The code of the error that caused the exception.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Time.NetworkTimeClientException.#ctor(Primavera.Hydrogen.Time.NetworkTimeClientError,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Time.NetworkTimeClientException"/> class.
            </summary>
            <param name="error">The code of the error that caused the exception.</param>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Time.SystemClock">
            <summary>
            Provides a default implementation of <see cref="T:Primavera.Hydrogen.Time.ISystemClock"/>.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Time.ISystemClock" />
        </member>
        <member name="P:Primavera.Hydrogen.Time.SystemClock.UtcNow">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.CamelCaseTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to camel case.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.CamelCaseTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.DateTimeHumanLikeAlgorithms">
            <summary>
            Provides algorithms to transform date times to human-like strings.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.DateTimeHumanLikeAlgorithms.Default(System.DateTime,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Transforms the specified input to a human-like string using a default algorithm.
            </summary>
            <param name="input">The input.</param>
            <param name="comparisonBase">The comparison base.</param>
            <param name="culture">The culture.</param>
            <returns>
            The human like string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.DateTimeHumanLikeAlgorithms.WithPrecision(System.DateTime,System.DateTime,System.Globalization.CultureInfo,System.Double)">
            <summary>
            Transforms the specified input to a human-like string using the specified precision.
            </summary>
            <param name="input">The input.</param>
            <param name="comparisonBase">The comparison base.</param>
            <param name="culture">The culture.</param>
            <param name="precision">The precision.</param>
            <returns>
            The human like string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.DateTimeHumanLikeAlgorithms.Default(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo)">
            <summary>
            Transforms the specified input to a human-like string using a default algorithm.
            </summary>
            <param name="input">The input.</param>
            <param name="comparisonBase">The comparison base.</param>
            <param name="culture">The culture.</param>
            <returns>
            The human like string.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.DateTimeHumanLikeAlgorithms.WithPrecision(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo,System.Double)">
            <summary>
            Transforms the specified input to a human-like string using the specified precision.
            </summary>
            <param name="input">The input.</param>
            <param name="comparisonBase">The comparison base.</param>
            <param name="culture">The culture.</param>
            <param name="precision">The precision.</param>
            <returns>
            The human like string.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.DateTimeOffsetTransformer">
            <summary>
            Allows performing transformations on a <see cref="T:System.DateTimeOffset"/> target.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.DateTimeOffsetTransformer.#ctor(System.Nullable{System.DateTimeOffset})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Transformations.DateTimeOffsetTransformer"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.DateTimeOffsetTransformer.ToHumanLike(System.Nullable{System.DateTimeOffset},System.Globalization.CultureInfo,System.Nullable{System.Double})">
            <summary>
            Transforms the date to a human-like string by comparing it to
            <paramref name="dateToCompareAgainst" />.
            </summary>
            <param name="dateToCompareAgainst">The date to compare against.</param>
            <param name="culture">The culture that should be used.</param>
            <param name="precision">The precision that should be used (a value between 0 and 1).</param>
            <returns>
            The date in a human-like form.
            </returns>
            <example>
            dateToCompareAgainst - 1 sec -&gt; "1 second ago".
            dateToCompareAgainst - 10 days -&gt; "10 days ago".
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.DateTimeTransformer">
            <summary>
            Allows performing transformations on a <see cref="T:System.DateTime"/> target.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.DateTimeTransformer.#ctor(System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Transformations.DateTimeTransformer"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.DateTimeTransformer.ToHumanLike(System.Boolean,System.Nullable{System.DateTime},System.Globalization.CultureInfo,System.Nullable{System.Double})">
            <summary>
            Transforms the date to a human-like string by comparing it to
            <paramref name="dateToCompareAgainst" />.
            </summary>
            <param name="utc">A value indicating whether the date is UTC or local.</param>
            <param name="dateToCompareAgainst">The date to compare against.</param>
            <param name="culture">The culture that should be used.</param>
            <param name="precision">The precision that should be used (a value between 0 and 1).</param>
            <returns>
            The date in a human-like form.
            </returns>
            <example>
            dateToCompareAgainst - 1 sec -&gt; "1 second ago".
            dateToCompareAgainst - 10 days -&gt; "10 days ago".
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.HumanLikeTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to a human-like form.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.HumanLikeTransformer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Transformations.HumanLikeTransformer"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.HumanLikeTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.ILongToStringTransformer">
            <summary>
            Defines a type that can transform a long into a string.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.ILongToStringTransformer.Transform(System.Int64)">
            <summary>
            Transforms the specified <see cref="T:System.Int64"/> value.
            </summary>
            <param name="input">The input.</param>
            <returns>
            The value after transformation.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer">
            <summary>
            Defines a type that can transform a string into another string.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.IStringToStringTransformer.Transform(System.String)">
            <summary>
            Transforms the specified <see cref="T:System.String"/>.
            </summary>
            <param name="input">The input.</param>
            <returns>
            The string after transformation.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.KebabCaseTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to kebab case.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.KebabCaseTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.LetterCasing">
            <summary>
            Provides string transformers related with letter casing.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LetterCasing.UpperCase">
            <summary>
            Returns the transformer that changes the string to upper case.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "this text" -> "THIS TEXT".
            "This Text" -> "THIS TEXT".
            "UPPER CASE" -> "UPPER CASE".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LetterCasing.LowerCase">
            <summary>
            Returns the transformer that changes the string to lower case.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "this text" -> "this text".
            "This Text" -> "this text".
            "UPPER CASE" -> "upper case".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LetterCasing.SentenceCase">
            <summary>
            Returns the transformer that changes the string to sentence case.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <remarks>
            Notice that this transformation only modifies the first character
            in the value. If any other character casing will be honoured.
            </remarks>
            <example>
            "this text" -> "This text".
            "This Text" -> "This Text".
            "UPPER CASE" -> "UPPER CASE".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LetterCasing.TitleCase">
            <summary>
            Returns the transformer that changes the string to title case.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "this text" -> "This Text".
            "This Text" -> "This Text".
            "UPPER CASE" -> "Upper Case".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LetterCasing.PascalCase">
            <summary>
            Returns the transformer that changes the string to pascal case.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <remarks>
            Any dash or underscore in the value will be removed and treated
            as the start of a new word.
            </remarks>
            <example>
            "Customer" -> "Customer".
            "customer" -> "Customer".
            "CUSTOMER" -> "Customer".
            "Customer_name" -> "CustomerName".
            "Customer-first-name" -> "CustomerFirstName".
            "customer name" -> "CustomerName".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LetterCasing.CamelCase">
            <summary>
            Returns the transformer that changes the string to camel case.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <remarks>
            Any dash or underscore in the value will be removed and treated
            as the start of a new word.
            </remarks>
            <example>
            "Customer" -> "customer".
            "customer" -> "customer".
            "CUSTOMER" -> "customer".
            "Customer_name" -> "customerName".
            "Customer-first-name" -> "customerFirstName".
            "customer name" -> "customerName".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LetterCasing.SnakeCase">
            <summary>
            Returns the transformer that changes the string to snake case.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "Customer" -> "customer".
            "CUSTOMER" -> "customer".
            "Customer_name" -> "customer_name".
            "Customer-first-name" -> "customer_first_name".
            "customer name" -> "customer_name".
            "A VeryShortSENTENCE" -> "a_very_short_sentence".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LetterCasing.KebabCase">
            <summary>
            Returns the transformer that changes the string to kebab case.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "Customer" -> "customer".
            "CUSTOMER" -> "customer".
            "Customer_name" -> "customer-name".
            "Customer-first-name" -> "customer-first-name".
            "customer name" -> "customer-name".
            "A VeryShortSENTENCE" -> "a-very-short-sentence".
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.Localization.DefaultFormatter">
            <summary>
            Provides a default formatter.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.Localization.IFormatter" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.DefaultFormatter.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Transformations.Localization.DefaultFormatter"/> class.
            </summary>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.DefaultFormatter.GetFormatter(System.Globalization.CultureInfo)">
            <summary>
            Retrieves the formatter for the specified culture.
            </summary>
            <param name="culture">The culture.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Transformations.Localization.IFormatter"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.DefaultFormatter.Format(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.DefaultFormatter.Format(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.DefaultFormatter.ToHumanLike(Primavera.Hydrogen.Transformations.Localization.TimeUnit,Primavera.Hydrogen.Transformations.Localization.Tense,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.Localization.IFormatter">
            <summary>
            Defines the interface of a formatter used for localization.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.IFormatter.Format(System.String)">
            <summary>
            Formats the specified localization resource.
            </summary>
            <param name="resourceName">The resource name.</param>
            <returns>
            The resource value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.IFormatter.Format(System.String,System.Int32)">
            <summary>
            Formats the specified localization resource formatter with the specified value.
            </summary>
            <param name="resourceName">The resource name.</param>
            <param name="value">The value.</param>
            <returns>
            The resource value.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.IFormatter.ToHumanLike(Primavera.Hydrogen.Transformations.Localization.TimeUnit,Primavera.Hydrogen.Transformations.Localization.Tense,System.Int32)">
            <summary>
            Returns the string representation of the provided date time units.
            </summary>
            <param name="timeUnit">The time unit.</param>
            <param name="tense">The tense.</param>
            <param name="units">The units.</param>
            <returns>The string representation of the provided date time units.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.Localization.Resources">
            <summary>
            Allows retrieving localization resources.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.Localization.Resources.GetResource(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the resource with specified name.
            </summary>
            <param name="name">The resource name.</param>
            <param name="culture">The culture. Optional.</param>
            <returns>
            The resource value.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.Localization.Tense">
            <summary>
            Defines the tense of a sentence.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.Tense.Future">
            <summary>
            Indicates the future.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.Tense.Past">
            <summary>
            Indicates the past.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.Localization.TimeUnit">
            <summary>
            Defines the unit of time.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.TimeUnit.Millisecond">
            <summary>
            The time unit is milliseconds.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.TimeUnit.Second">
            <summary>
            The time unit is seconds.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.TimeUnit.Minute">
            <summary>
            The time unit is minutes.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.TimeUnit.Hour">
            <summary>
            The time unit is hours.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.TimeUnit.Day">
            <summary>
            The time unit is days.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.TimeUnit.Week">
            <summary>
            The time unit is weeks.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.TimeUnit.Month">
            <summary>
            The time unit is months.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Transformations.Localization.TimeUnit.Year">
            <summary>
            The time unit is years.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.LongTransformer">
            <summary>
            Allows performing transformations on a <see cref="T:System.Int64"/> target.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LongTransformer.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Transformations.LongTransformer"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LongTransformer.ToWords">
            <summary>
            Changes the value to words.
            </summary>
            <returns>
            The value described in words.
            </returns>
            <example>
            1 -> "one".
            3501 -> "three thousand five hundred and one".
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.LowerCaseTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> capable of transforming
            the string to lower case.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.LowerCaseTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.MachineLikeTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to a machine-like form.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.MachineLikeTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.NumberInflections">
            <summary>
            Provides number transformers related with inflections.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.NumberInflections.Words">
            <summary>
            Returns the transformer that changes the value to words.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            1 -> "one".
            3501 -> "three thousand five hundred and one".
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.PascalCaseTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to pascal case.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.PascalCaseTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.PluralTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to plural.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.PluralTransformer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Transformations.PluralTransformer"/> class.
            </summary>
            <param name="inputIsKnownToBeSingular">
            A value indicating whether the string is known to be singular.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.PluralTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.SentenceCaseTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to sentence case.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.SentenceCaseTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.SingularTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to singular.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.SingularTransformer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Transformations.SingularTransformer"/> class.
            </summary>
            <param name="inputIsKnownToBePlural">
            A value indicating whether the string is known to be plural.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.SingularTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.SnakeCaseTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to snake case.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.SnakeCaseTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.StringTransformer">
            <summary>
            Allows performing transformations on a <see cref="T:System.String"/> target.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Transformations.StringTransformer"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToUpperCase">
            <summary>
            Changes the string to upper case.
            </summary>
            <returns>
            The string in upper case.
            </returns>
            <example>
            "this text" -> "THIS TEXT".
            "This Text" -> "THIS TEXT".
            "UPPER CASE" -> "UPPER CASE".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToLowerCase">
            <summary>
            Changes the string to lower case.
            </summary>
            <returns>
            The string in lower case.
            </returns>
            <example>
            "this text" -> "this text".
            "This Text" -> "this text".
            "UPPER CASE" -> "upper case".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToSentenceCase">
            <summary>
            Changes the string to sentence case.
            </summary>
            <returns>
            The string in sentence case.
            </returns>
            <remarks>
            Notice that this transformation only modifies the first character
            in the value. If any other character casing will be honored.
            </remarks>
            <example>
            "this text" -> "This text".
            "This Text" -> "This Text".
            "UPPER CASE" -> "UPPER CASE".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToTitleCase">
            <summary>
            Changes the string to title case.
            </summary>
            <returns>
            The string in title case.
            </returns>
            <example>
            "this text" -> "This Text".
            "This Text" -> "This Text".
            "UPPER CASE" -> "Upper Case".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToPascalCase">
            <summary>
            Changes the string to pascal case.
            </summary>
            <returns>
            The string in pascal case.
            </returns>
            <remarks>
            Any dash or underscore in the value will be removed and treated
            as the start of a new word.
            </remarks>
            <example>
            "Customer" -> "Customer".
            "customer" -> "Customer".
            "CUSTOMER" -> "Customer".
            "Customer_name" -> "CustomerName".
            "Customer-first-name" -> "CustomerFirstName".
            "customer name" -> "CustomerName".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToCamelCase">
            <summary>
            Changes the string to camel case.
            </summary>
            <returns>
            The string in camel case.
            </returns>
            <remarks>
            Any dash or underscore in the value will be removed and treated
            as the start of a new word.
            </remarks>
            <example>
            "Customer" -> "customer".
            "customer" -> "customer".
            "CUSTOMER" -> "customer".
            "Customer_name" -> "customerName".
            "Customer-first-name" -> "customerFirstName".
            "customer name" -> "customerName".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToSnakeCase">
            <summary>
            Changes the string to snake case.
            </summary>
            <returns>
            The string in snake case.
            </returns>
            <example>
            "Customer" -> "customer".
            "CUSTOMER" -> "customer".
            "Customer_name" -> "customer_name".
            "Customer-first-name" -> "customer_first_name".
            "customer name" -> "customer_name".
            "A VeryShortSENTENCE" -> "a_very_short_sentence".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToKebabCase">
            <summary>
            Changes the string to kebab case.
            </summary>
            <returns>
            The string in kebab case.
            </returns>
            <example>
            "Customer" -> "customer".
            "CUSTOMER" -> "customer".
            "Customer_name" -> "customer-name".
            "Customer-first-name" -> "customer-first-name".
            "customer name" -> "customer-name".
            "A VeryShortSENTENCE" -> "a-very-short-sentence".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToPlural">
            <summary>
            Changes the string to plural.
            </summary>
            <returns>
            The string in plural.
            </returns>
            <example>
            "box" -> "boxes".
            "stack" -> "stacks".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToPlural(System.Boolean)">
            <summary>
            Changes the string to plural.
            </summary>
            <returns>
            The string in plural.
            </returns>
            <param name="inputIsKnownToBeSingular">
            A value indicating whether the string is known to be singular.
            This should be set to false when you are unsure if the string is singular.
            </param>
            <example>
            "box" -> "boxes".
            "stack" -> "stacks".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToSingular">
            <summary>
            Changes the string to singular.
            </summary>
            <returns>
            The string in singular.
            </returns>
            <example>
            "boxes" -> "box".
            "stacks" -> "stack".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToSingular(System.Boolean)">
            <summary>
            Changes the string to singular.
            </summary>
            <param name="inputIsKnownToBePlural">
            A value indicating whether the string is known to be plural.
            This should be set to false when you are unsure if the string is plural.
            </param>
            <returns>
            The string in singular.
            </returns>
            <example>
            "boxes" -> "box".
            "stacks" -> "stack".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToHumanLike">
            <summary>
            Changes the string to a human-like string.
            </summary>
            <returns>
            The string in a human-like form.
            </returns>
            <example>
            "input_string" -> "input string".
            "CustomerFirstName" -> "customer first name".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.StringTransformer.ToMachineLike">
            <summary>
            Changes the string to a machine-like string.
            </summary>
            <returns>
            The string in a machine-like form.
            </returns>
            <example>
            "one string" -> "OneString".
            "customer first name" -> "CustomerFirstName".
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.TextInflections">
            <summary>
            Provides string transformers related with inflections.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.TextInflections.Plural">
            <summary>
            Returns the transformer that changes the string to plural.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "box" -> "boxes".
            "stack" -> "stacks".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.TextInflections.Plural(System.Boolean)">
            <summary>
            Returns the transformer that changes the string to plural.
            </summary>
            <param name="inputIsKnownToBeSingular">
            A value indicating whether the string is known to be singular.
            This should be set to false when you are unsure if the string is singular.
            </param>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "box" -> "boxes".
            "stack" -> "stacks".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.TextInflections.Singular">
            <summary>
            Returns the transformer that changes the string to singular.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "boxes" -> "box".
            "stacks" -> "stack".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.TextInflections.Singular(System.Boolean)">
            <summary>
            Returns the transformer that changes the string to singular.
            </summary>
            <param name="inputIsKnownToBePlural">
            A value indicating whether the string is known to be plural.
            This should be set to false when you are unsure if the string is plural.
            </param>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "boxes" -> "box".
            "stacks" -> "stack".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.TextInflections.HumanLike">
            <summary>
            Returns the transformer that changes the string to a human-like string.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "input_string" -> "input string".
            "CustomerFirstName" -> "customer first name".
            </example>
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.TextInflections.MachineLike">
            <summary>
            Returns the transformer that changes the string to a machine-like string.
            </summary>
            <returns>
            The transformer instance.
            </returns>
            <example>
            "one string" -> "OneString".
            "customer first name" -> "CustomerFirstName".
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.TitleCaseTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to title case.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.TitleCaseTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.ToWordsTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.ILongToStringTransformer"/> cappable of transforming
            the value to words.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.ILongToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.ToWordsTransformer.Transform(System.Int64)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Transformations.UpperCaseTransformer">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer"/> cappable of transforming
            the string to upper case.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.Transformations.IStringToStringTransformer" />
        </member>
        <member name="M:Primavera.Hydrogen.Transformations.UpperCaseTransformer.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.TypeExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Type"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.TypeExtensions.ShortAssemblyQualifiedName(System.Type)">
            <summary>
            Gets the assembly qualified name of the specified type stripping off the
            version, culture and public key token parts.
            </summary>
            <param name="value">The type.</param>
            <returns>The short assembly qualified name.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.UriHelper">
            <summary>
            Provides helper methods to manipulate <see cref="T:System.Uri"/> values or strings that represent <see cref="T:System.Uri"/>
            values.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.TrimEndSeparator(System.String)">
            <summary>
            Removes all trailing separators in the specified input URI.
            </summary>
            <param name="uri">The input URI.</param>
            <returns>
            The input with all trailing separators removed.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.IsAbsoluteUri(System.String)">
            <summary>
            Determines whether the specified value is an absolute URI.
            </summary>
            <param name="uri">The input value.</param>
            <returns>
            A value indicating whether the specified URI is a absolute.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.IsRelativeOrAbsoluteUri(System.String)">
            <summary>
            Determines whether the specified value is an URI.
            </summary>
            <param name="uri">The input value.</param>
            <returns>
            A value indicating whether the specified value is an URI.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.TryCreateAbsoluteUri(System.String,System.Uri@)">
            <summary>
            Creates a new absolute <see cref="T:System.Uri"/> from the specified input.
            </summary>
            <param name="uri">The input URI.</param>
            <param name="result">The resulting <see cref="T:System.Uri"/> instance.</param>
            <returns>
            A value indicating if the <see cref="T:System.Uri"/> was successfully created.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.TryCreateRelativeOrAbsoluteUri(System.String,System.Uri@)">
            <summary>
            Creates a new <see cref="T:System.Uri"/> from the specified input.
            </summary>
            <param name="uri">The input URI.</param>
            <param name="result">The resulting <see cref="T:System.Uri"/> instance.</param>
            <returns>
            A value indicating if the <see cref="T:System.Uri"/> was successfully created.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.CreateAbsoluteUri(System.String)">
            <summary>
            Creates an absolute URI from the specified input.
            </summary>
            <param name="uri">The input URI. Must be an absolute URI.</param>
            <returns>
            The <see cref="T:System.Uri"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.CreateRelativeOrAbsoluteUri(System.String)">
            <summary>
            Creates an URI from the specified input.
            </summary>
            <param name="uri">The input URI. Must be an URI (relative or absolute).</param>
            <returns>
            The <see cref="T:System.Uri"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.IsBaseAddressOf(System.String,System.String)">
            <summary>
            Determines whether <paramref name="baseUri"/> is the base address of <paramref name="uri"/>.
            </summary>
            <param name="baseUri">The base URI. Must be an absolute URI.</param>
            <param name="uri">The URI. Must be an absolute URI.</param>
            <returns>
            A value indicating whether <paramref name="baseUri"/> is the base address of <paramref name="uri"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.IsBaseAddress(System.Uri)">
            <summary>
            Determines whether the specified URI is a base address.
            </summary>
            <param name="uri">The URI.</param>
            <returns>
            A value indicating whether the specified URI is a base address.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.EqualsNoCase(System.Uri,System.Uri)">
            <summary>
            Determines whether <paramref name="first"/> is equal to <paramref name="second"/> without considering case.
            </summary>
            <param name="first">The first URI. Must be an absolute URI.</param>
            <param name="second">The second URI. Must be an absolute URI.</param>
            <returns>
            A value indicating whether <paramref name="first"/> is equal to <paramref name="second"/> without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.StartsWithNoCase(System.Uri,System.Uri)">
            <summary>
            Determines whether <paramref name="first"/> starts with <paramref name="second"/> without considering case.
            </summary>
            <param name="first">The first URI.</param>
            <param name="second">The second URI.</param>
            <returns>
            A value indicating whether <paramref name="first"/> is equal to <paramref name="second"/> without considering case.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.GetSchemeAndServer(System.Uri)">
            <summary>
            Gets the scheme and server parts of the specified URI.
            </summary>
            <param name="uri">The input URI. Must be an absolute URI.</param>
            <returns>The scheme and server parts of the specified URI.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.Combine(System.String[])">
            <summary>
            Combines the specified URL parts to form a legal URL by ensuring
            a single separator between segments and encoding illegal characters.
            </summary>
            <param name="parts">The parts.</param>
            <returns>
            The URI resulting from combining the specified
            parts.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.EncodeIllegalCharacters(System.String,System.Boolean)">
            <summary>
            URL-encodes characters in a string that are neither reserved nor unreserved.
            Avoids encoding reserved characters such as '/' and '?'.
            Avoids encoding '%' if it begins a %-hex-hex sequence (i.e. avoids double-encoding).
            </summary>
            <param name="value">The string to encode.</param>
            <param name="encodeSpaceAsPlus">
            If true, spaces will be encoded as + signs. Otherwise, they'll be encoded as %20.
            </param>
            <returns>The URL-encoded string.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.Encode(System.String,System.Boolean)">
            <summary>
            URL-encodes a string, including reserved characters such as '/' and '?'.
            </summary>
            <param name="value">The string to encode.</param>
            <param name="encodeSpaceAsPlus">
            If true, spaces will be encoded as + signs. Otherwise, they'll be encoded as %20.
            </param>
            <returns>The encoded URL.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.UriHelper.Decode(System.String,System.Boolean)">
            <summary>
            Decodes a URL-encoded string.
            </summary>
            <param name="value">The URL-encoded string.</param>
            <param name="interpretPlusAsSpace">If true, any '+' character will be decoded to a space.</param>
            <returns>The URL-decoded string.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.Validation.ObjectGraphValidator">
            <summary>
            Allows validating complex objects (object graphs) by verifying validation attributes. The validation will
            traverse the whole object graph, including complex properties, enumerable properties, etc.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.MaxValidationDepth">
            <summary>
            Gets or sets the maximum validation depth to constrain the maximum number
            of objects that can be validated when the object graph is very complex.
            The default value is null.
            When this value is exceeded (if not null) an exception will be raised if
            <see cref="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.ThrowOnMaxValidationDepth"/> (or the validation is stopped otherwise).
            </summary>
            <remarks>
            <see cref="T:Primavera.Hydrogen.Validation.ObjectGraphValidator"/> traverses the object graph of the object being validated.
            For object graphs that are very deep or are infinitely recursive, validation may result in stack overflow.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.ThrowOnMaxValidationDepth">
            <summary>
            Gets or sets a value indicating whether an exception should be thrown
            when <see cref="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.MaxValidationDepth"/> is exceeded.
            The default value is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.MaxErrors">
            <summary>
            Gets or sets the maximum validation errors that can be returned.
            The default value is null.
            When this value is exceeded (if not null) the validation is stopped.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.MaxEnumerableElements">
            <summary>
            Gets or sets the maximum number of elements that should be validated on enumerable types.
            The default value is null.
            When this value is exceeded (if not null) the validation of the enumerable elements is stopped.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.ValidateIfChildValidationFails">
            <summary>
            Gets or sets a value indicating whether an object should be validated if any of its children validation fails.
            The default value is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectGraphValidator.Instance">
            <summary>
            Gets or sets the instance being validated.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectGraphValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Validation.ObjectGraphValidator"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectGraphValidator.IsValid(System.Object)">
            <summary>
            Determines whether the specified object is valid, using the default settings.
            </summary>
            <param name="instance">The object that should be validated.</param>
            <returns>
            A value indicating whether the specified object is valid.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectGraphValidator.Validate(System.Object)">
            <summary>
            Validates the specified object.
            </summary>
            <param name="instance">The object that should be validated.</param>
            <returns>
            The result of validation.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectGraphValidator.Visit(System.Object,System.String)">
            <summary>
            Visits the specified instance to validate it.
            </summary>
            <param name="instance">The object that should be validated.</param>
            <param name="path">The current path in the graph.</param>
            <returns>
            A value indicating whether the instance is valid.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectGraphValidator.VisitEnumerableType(System.String)">
            <summary>
            Visits the current instance as an enumerable.
            </summary>
            <param name="path">The current path in the graph.</param>
            <returns>
            A value indicating whether the instance is valid.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectGraphValidator.VisitComplexType(System.String)">
            <summary>
            Visits the current instance as a complex type.
            </summary>
            <param name="path">The current path in the graph.</param>
            <returns>
            A value indicating whether the instance is valid.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectGraphValidator.ValidateNode(System.String)">
            <summary>
            Validates the current node in the object graph.
            </summary>
            <param name="path">The current path in the graph.</param>
            <returns>
            A value indicating whether the node is valid.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Validation.ObjectValidationResult">
            <summary>
            Describes the result of validating an object with <see cref="T:Primavera.Hydrogen.Validation.ObjectValidator"/> or <see cref="T:Primavera.Hydrogen.Validation.ObjectGraphValidator"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectValidationResult.IsValid">
            <summary>
            Gets a value indicating whether the object is valid.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ObjectValidationResult.ValidationResults">
            <summary>
            Gets the validation results.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectValidationResult.#ctor(System.Boolean,System.Collections.Generic.IReadOnlyList{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Validation.ObjectValidationResult" /> class.
            </summary>
            <param name="isValid">A value indicating whether the object is valid.</param>
            <param name="validationResults">The validation results.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Validation.ObjectValidator">
            <summary>
            Allows validating objects by testing validation attributes. The validation is performed only on the
            object and will not analyze the object graph.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ObjectValidator.Validate(System.Object)">
            <summary>
            Validates the specified object.
            </summary>
            <param name="instance">The object that should be validated.</param>
            <returns>
            The result of validation.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Validation.ReferenceEqualityComparer">
            <summary>
            Defines an equality comparer that uses <see cref="M:System.Object.ReferenceEquals(System.Object,System.Object)"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ReferenceEqualityComparer.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ReferenceEqualityComparer.Equals(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ReferenceEqualityComparer.GetHashCode(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.Validation.StateManager">
            <summary>
            Provides a state manager for <see cref="T:Primavera.Hydrogen.Validation.ObjectGraphValidator"/>.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Primavera.Hydrogen.Validation.StateManager.#ctor(Primavera.Hydrogen.Validation.ObjectGraphValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Validation.StateManager"/> struct.
            </summary>
            <param name="validator">The validator.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.StateManager.Recurse(Primavera.Hydrogen.Validation.ObjectGraphValidator,Primavera.Hydrogen.Validation.ValidationMetadata,System.Object)">
            <summary>
            Sets up a state manager from a validator.
            </summary>
            <param name="validator">The validator.</param>
            <param name="metadata">The metadata.</param>
            <param name="instance">The instance that should be validated.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Validation.StateManager"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.StateManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Validation.ValidationMetadata">
            <summary>
            Provides meta data about a type as used by <see cref="T:Primavera.Hydrogen.Validation.ObjectGraphValidator"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ValidationMetadata.InstanceType">
            <summary>
            Gets the type of the instance.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ValidationMetadata.IsComplex">
            <summary>
            Gets a value indicating whether the instance type is complex.
            </summary>
            <remarks>
            Any type that does not have a <see cref="T:System.ComponentModel.TypeConverter"/> that can convert from <see cref="T:System.String"/> is a complex type.
            This means that virtually any POCO or <see cref="T:System.Collections.IEnumerable"/> is complex.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ValidationMetadata.IsEnumerable">
            <summary>
            Gets a value indicating whether the instance type is enumerable.
            </summary>
            <remarks>
            Any type that is assignable to <see cref="T:System.Collections.IEnumerable"/> and is not a <see cref="T:System.String"/> is an enumerable.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ValidationMetadata.ComplexProperties">
            <summary>
            Gets the complex properties in the instance.
            </summary>
            <remarks>
            This is only meaningful if the instance type is complex but not enumerable.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ValidationMetadata.Build(System.Object)">
            <summary>
            Builds the metadata for the specified instance.
            </summary>
            <param name="instance">The instance whose metadata should be returned.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Validation.ValidationMetadata"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Validation.ValidationStack">
            <summary>
            Provides a stack for <see cref="T:Primavera.Hydrogen.Validation.ObjectGraphValidator"/> to store the instances being
            validated.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Validation.ValidationStack.CutOff">
            <summary>
            The cut off number used to determine when to use the list or the hash set
            to store instances (for performance reasons, the list is used up until this
            number of instances).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ValidationStack.Count">
            <summary>
            Gets the number of instances in the stack.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ValidationStack.List">
            <summary>
            Gets the list that holds the instances.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Validation.ValidationStack.HashSet">
            <summary>
            Gets or sets the hash set that holds the instances.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ValidationStack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Validation.ValidationStack"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ValidationStack.Push(System.Object)">
            <summary>
            Pushes the specified instances to the stack.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            A value indicating whether the instance was pushed.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Validation.ValidationStack.Pop(System.Object)">
            <summary>
            Pops the specified instance from the stack.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="T:Primavera.Hydrogen.Versioning.ParserOptions">
            <summary>
            Defines options used by the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> parser.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.ParserOptions.Default">
            <summary>
            An instance of <see cref="T:Primavera.Hydrogen.Versioning.ParserOptions"/> that will use default options.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.ParserOptions.AllowThirdDot">
            <summary>
            Gets or sets a value indicating whether a third dot is allowed in version strings.
            If true, version strings like 1.0.0.10 will be allowed and the fourth value (10) will
            be treated as a release label.
            The default value is false.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.ParserOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.ParserOptions"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Versioning.SemanticVersion">
            <summary>
            Defines a semantic version (<see href="https://semver.org/"/>).
            </summary>
            <remarks>
            A SemVer (semantic version) is a version defined as follows:
            major.minor.patch-release+metadata
            a.b.c-d+e
            where:
            - A is the major version.
            - B is the minor version.
            - C is the patch version (aka patch).
            - D is the release version (can be formed by N labels separated by dots).
            - E is metadata about the version.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.SemanticVersion.Major">
            <summary>
            Gets the version major number (A.b.c-d+e).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.SemanticVersion.Minor">
            <summary>
            Gets the version minor number (a.B.c-d+e).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.SemanticVersion.Patch">
            <summary>
            Gets the version patch number (a.b.C-d+e).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.SemanticVersion.Release">
            <summary>
            Gets the version full release (a.b.c-D+e).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.SemanticVersion.ReleaseLabels">
            <summary>
            Gets the version release labels (a.b.c-D+e).
            The labels are the parts in the release (D), separated by dots.
            (e.g. in version 1.0.0-alpha.1.2+build01 the release labels are alpha, 1 and 2).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.SemanticVersion.Metadata">
            <summary>
            Gets the version metadata (a.b.c-d+E).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.SemanticVersion.IsPreRelease">
            <summary>
            Gets a value indicating whether this version includes release labels.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.Versioning.SemanticVersion.HasMetadata">
            <summary>
            Gets a value indicating whether this version has metadata.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.#ctor(Primavera.Hydrogen.Versioning.SemanticVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> class.
            </summary>
            <param name="version">The source <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.#ctor(System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> class.
            </summary>
            <param name="version">The source <see cref="T:System.Version"/> instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> class.
            </summary>
            <param name="major">The version major number.</param>
            <param name="minor">The version minor number.</param>
            <param name="patch">The version patch number.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> class.
            </summary>
            <param name="major">The version major number.</param>
            <param name="minor">The version minor number.</param>
            <param name="patch">The version patch number.</param>
            <param name="releaseLabel">The version full release label.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> class.
            </summary>
            <param name="major">The version major number.</param>
            <param name="minor">The version minor number.</param>
            <param name="patch">The version patch number.</param>
            <param name="releaseLabel">The version full release label.</param>
            <param name="metadata">The version metadata.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> class.
            </summary>
            <param name="major">The version major number.</param>
            <param name="minor">The version minor number.</param>
            <param name="patch">The version patch number.</param>
            <param name="releaseLabels">The version release labels.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> class.
            </summary>
            <param name="major">The version major number.</param>
            <param name="minor">The version minor number.</param>
            <param name="patch">The version patch number.</param>
            <param name="releaseLabels">The version release labels.</param>
            <param name="metadata">The version metadata.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.Parse(System.String)">
            <summary>
            Parses the specified string value as a <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.
            </summary>
            <param name="value">The string value that should be parsed.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instance.
            </returns>
            <exception cref="T:System.ArgumentException">
            Raised if the specified string values is not a valid semantic version.
            </exception>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.Parse(System.String,Primavera.Hydrogen.Versioning.ParserOptions)">
            <summary>
            Parses the specified string value as a <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.
            </summary>
            <param name="value">The string value that should be parsed.</param>
            <param name="options">The options that should be used.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instance.
            </returns>
            <exception cref="T:System.ArgumentException">
            Raised if the specified string values is not a valid semantic version.
            </exception>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.TryParse(System.String,Primavera.Hydrogen.Versioning.SemanticVersion@)">
            <summary>
            Tries to parse the specified string value as a <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.
            </summary>
            <param name="value">The string value that should be parsed.</param>
            <param name="version">The <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instance.</param>
            <returns>
            A value indicating whether the specified string could be parsed.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.TryParse(System.String,Primavera.Hydrogen.Versioning.ParserOptions,Primavera.Hydrogen.Versioning.SemanticVersion@)">
            <summary>
            Tries to parse the specified string value as a <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.
            </summary>
            <param name="value">The string value that should be parsed.</param>
            <param name="options">The options that should be used.</param>
            <param name="version">The <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instance.</param>
            <returns>
            A value indicating whether the specified string could be parsed.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.ToNormalizedString">
            <summary>
            Returns a normalized string that represents this semantic version.
            </summary>
            <returns>
            The normalized string that represents this semantic version.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.CompareTo(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersionComparison)">
            <summary>
            Compares this instance to the specified <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instance.
            </summary>
            <param name="other">The <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> that should be compared.</param>
            <param name="versionComparison">The comparison mode.</param>
            <returns>
            The result of comparing the two semantic version.
            Negative if this instance is less than <paramref name="other"/>.
            Zero if this instance is equal <paramref name="other"/>.
            Positive if this instance is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.ToString">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.ToString(System.String,System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.CompareTo(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.CompareTo(Primavera.Hydrogen.Versioning.SemanticVersion)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.Equals(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersionComparison)">
            <summary>
            Compares this instance to the specified <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instance for equality.
            </summary>
            <param name="other">The <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> that should be compared.</param>
            <param name="versionComparison">The comparison mode.</param>
            <returns>
            A value indicating whether the two semantic versions are equal.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.Equals(Primavera.Hydrogen.Versioning.SemanticVersion)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.op_Equality(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The first <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <param name="right">The second <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.op_Inequality(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The first <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <param name="right">The second <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.op_LessThan(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="left">The first <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <param name="right">The second <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.op_LessThanOrEqual(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion)">
            <summary>
            Implements the operator &lt;=.
            </summary>
            <param name="left">The first <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <param name="right">The second <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.op_GreaterThan(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="left">The first <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <param name="right">The second <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersion.op_GreaterThanOrEqual(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion)">
            <summary>
            Implements the operator &gt;=.
            </summary>
            <param name="left">The first <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <param name="right">The second <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/>.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Versioning.SemanticVersionComparer">
            <summary>
            Defines methods to compare <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instances for equality.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.SemanticVersionComparer.Default">
            <summary>
            An instance of <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersionComparer"/> that will use the <see cref="F:Primavera.Hydrogen.Versioning.SemanticVersionComparison.Default"/> mode.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.SemanticVersionComparer.Version">
            <summary>
            An instance of <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersionComparer"/> that will use the <see cref="F:Primavera.Hydrogen.Versioning.SemanticVersionComparison.Version"/> mode.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.SemanticVersionComparer.VersionRelease">
            <summary>
            An instance of <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersionComparer"/> that will use the <see cref="F:Primavera.Hydrogen.Versioning.SemanticVersionComparison.VersionRelease"/> mode.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.SemanticVersionComparer.VersionReleaseMetadata">
            <summary>
            An instance of <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersionComparer"/> that will use the <see cref="F:Primavera.Hydrogen.Versioning.SemanticVersionComparison.VersionReleaseMetadata"/> mode.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersionComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersionComparer"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersionComparer.#ctor(Primavera.Hydrogen.Versioning.SemanticVersionComparison)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersionComparer"/> class.
            </summary>
            <param name="versionComparison">The comparison mode.</param>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersionComparer.Equals(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersionComparer.GetHashCode(Primavera.Hydrogen.Versioning.SemanticVersion)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersionComparer.Compare(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersionComparison)">
            <summary>
            Compares two semantic versions.
            </summary>
            <param name="left">The first semantic version to compare.</param>
            <param name="right">The second semantic version to compare.</param>
            <param name="versionComparison">The comparison mode.</param>
            <returns>
            The result of comparing two semantic version.
            Negative if <paramref name="left"/> is less than <paramref name="right"/>.
            Zero if <paramref name="left"/> is equal <paramref name="right"/>.
            Positive if <paramref name="left"/> is greater than <paramref name="right"/>.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersionComparer.Compare(Primavera.Hydrogen.Versioning.SemanticVersion,Primavera.Hydrogen.Versioning.SemanticVersion)">
            <summary>
            Compares two semantic versions.
            </summary>
            <param name="left">The first semantic version to compare.</param>
            <param name="right">The second semantic version to compare.</param>
            <returns>
            The result of comparing two semantic version.
            Negative if <paramref name="left"/> is less than <paramref name="right"/>.
            Zero if <paramref name="left"/> is equal <paramref name="right"/>.
            Positive if <paramref name="left"/> is greater than <paramref name="right"/>.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.Versioning.SemanticVersionComparison">
            <summary>
            Defines the comparison mode that should be used when comparing semantic versions.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.SemanticVersionComparison.Default">
            <summary>
            Semantic version 2.0.1-rc comparison.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.SemanticVersionComparison.Version">
            <summary>
            Compares only the version numbers.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.SemanticVersionComparison.VersionRelease">
            <summary>
            Include version number and release labels in the compare.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.Versioning.SemanticVersionComparison.VersionReleaseMetadata">
            <summary>
            Include all metadata during the compare.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.Versioning.SemanticVersionFormatter">
            <summary>
            Defines methods to format <see cref="T:Primavera.Hydrogen.Versioning.SemanticVersion"/> instances.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersionFormatter.Format(System.String,System.Object,System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.Versioning.SemanticVersionFormatter.GetFormat(System.Type)">
            <inheritdoc />
        </member>
    </members>
</doc>
