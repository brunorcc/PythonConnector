<#@ template debug="true" hostspecific="true" inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".gen.cs" #>
<#@ ServiceDesigner processor="ServiceDesignerDirectiveProcessor" requires="FileName=''" #>
<#

// Build the transformations

ServiceModelTransformations<CSharpFileModel> transformations =
    new ServiceModelTransformations<CSharpFileModel>(this.ServiceModel);

transformations.Add(new EnumerationsTransformation());

transformations.Add(
    (s, t) => true,
    (s, t) => { return s is ServiceModel; },
    (s, t) =>
    {
        if (s is ServiceModel source)
        {
            t.Namespace = new NamespaceModel(source.Namespace + ".Models");
            t.NamespaceImports.Add(new NamespaceImportModel("System.CodeDom.Compiler"));
        }
    });

// Transform

CSharpFileModel targetModel = new CSharpFileModel();
transformations.TransformTo(targetModel);

// Create controller

ModelWriterController controller = new ModelWriterController(this.GenerationEnvironment);

// Generate code

controller.Write(targetModel);

#>